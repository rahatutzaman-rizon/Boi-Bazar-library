var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test22 = {};
        for (var i = 0; i < 10; i++) {
          test22["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test22).map(function(n) {
          return test22[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/react/cjs/react.production.min.js
var require_react_production_min = __commonJS({
  "node_modules/react/cjs/react.production.min.js"(exports) {
    "use strict";
    var l = require_object_assign();
    var n = "function" === typeof Symbol && Symbol.for;
    var p = n ? Symbol.for("react.element") : 60103;
    var q = n ? Symbol.for("react.portal") : 60106;
    var r = n ? Symbol.for("react.fragment") : 60107;
    var t = n ? Symbol.for("react.strict_mode") : 60108;
    var u = n ? Symbol.for("react.profiler") : 60114;
    var v = n ? Symbol.for("react.provider") : 60109;
    var w = n ? Symbol.for("react.context") : 60110;
    var x = n ? Symbol.for("react.forward_ref") : 60112;
    var y = n ? Symbol.for("react.suspense") : 60113;
    var z = n ? Symbol.for("react.memo") : 60115;
    var A = n ? Symbol.for("react.lazy") : 60116;
    var B = "function" === typeof Symbol && Symbol.iterator;
    function C(a) {
      for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
        b += "&args[]=" + encodeURIComponent(arguments[c]);
      return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var D = { isMounted: function() {
      return false;
    }, enqueueForceUpdate: function() {
    }, enqueueReplaceState: function() {
    }, enqueueSetState: function() {
    } };
    var E = {};
    function F(a, b, c) {
      this.props = a;
      this.context = b;
      this.refs = E;
      this.updater = c || D;
    }
    F.prototype.isReactComponent = {};
    F.prototype.setState = function(a, b) {
      if ("object" !== typeof a && "function" !== typeof a && null != a)
        throw Error(C(85));
      this.updater.enqueueSetState(this, a, b, "setState");
    };
    F.prototype.forceUpdate = function(a) {
      this.updater.enqueueForceUpdate(this, a, "forceUpdate");
    };
    function G() {
    }
    G.prototype = F.prototype;
    function H(a, b, c) {
      this.props = a;
      this.context = b;
      this.refs = E;
      this.updater = c || D;
    }
    var I = H.prototype = new G();
    I.constructor = H;
    l(I, F.prototype);
    I.isPureReactComponent = true;
    var J = { current: null };
    var K = Object.prototype.hasOwnProperty;
    var L = { key: true, ref: true, __self: true, __source: true };
    function M(a, b, c) {
      var e, d = {}, g = null, k = null;
      if (null != b)
        for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), b)
          K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);
      var f = arguments.length - 2;
      if (1 === f)
        d.children = c;
      else if (1 < f) {
        for (var h = Array(f), m = 0; m < f; m++)
          h[m] = arguments[m + 2];
        d.children = h;
      }
      if (a && a.defaultProps)
        for (e in f = a.defaultProps, f)
          void 0 === d[e] && (d[e] = f[e]);
      return { $$typeof: p, type: a, key: g, ref: k, props: d, _owner: J.current };
    }
    function N(a, b) {
      return { $$typeof: p, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner };
    }
    function O(a) {
      return "object" === typeof a && null !== a && a.$$typeof === p;
    }
    function escape(a) {
      var b = { "=": "=0", ":": "=2" };
      return "$" + ("" + a).replace(/[=:]/g, function(a2) {
        return b[a2];
      });
    }
    var P = /\/+/g;
    var Q = [];
    function R(a, b, c, e) {
      if (Q.length) {
        var d = Q.pop();
        d.result = a;
        d.keyPrefix = b;
        d.func = c;
        d.context = e;
        d.count = 0;
        return d;
      }
      return { result: a, keyPrefix: b, func: c, context: e, count: 0 };
    }
    function S(a) {
      a.result = null;
      a.keyPrefix = null;
      a.func = null;
      a.context = null;
      a.count = 0;
      10 > Q.length && Q.push(a);
    }
    function T(a, b, c, e) {
      var d = typeof a;
      if ("undefined" === d || "boolean" === d)
        a = null;
      var g = false;
      if (null === a)
        g = true;
      else
        switch (d) {
          case "string":
          case "number":
            g = true;
            break;
          case "object":
            switch (a.$$typeof) {
              case p:
              case q:
                g = true;
            }
        }
      if (g)
        return c(e, a, "" === b ? "." + U(a, 0) : b), 1;
      g = 0;
      b = "" === b ? "." : b + ":";
      if (Array.isArray(a))
        for (var k = 0; k < a.length; k++) {
          d = a[k];
          var f = b + U(d, k);
          g += T(d, f, c, e);
        }
      else if (null === a || "object" !== typeof a ? f = null : (f = B && a[B] || a["@@iterator"], f = "function" === typeof f ? f : null), "function" === typeof f)
        for (a = f.call(a), k = 0; !(d = a.next()).done; )
          d = d.value, f = b + U(d, k++), g += T(d, f, c, e);
      else if ("object" === d)
        throw c = "" + a, Error(C(31, "[object Object]" === c ? "object with keys {" + Object.keys(a).join(", ") + "}" : c, ""));
      return g;
    }
    function V(a, b, c) {
      return null == a ? 0 : T(a, "", b, c);
    }
    function U(a, b) {
      return "object" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);
    }
    function W(a, b) {
      a.func.call(a.context, b, a.count++);
    }
    function aa(a, b, c) {
      var e = a.result, d = a.keyPrefix;
      a = a.func.call(a.context, b, a.count++);
      Array.isArray(a) ? X(a, e, c, function(a2) {
        return a2;
      }) : null != a && (O(a) && (a = N(a, d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(P, "$&/") + "/") + c)), e.push(a));
    }
    function X(a, b, c, e, d) {
      var g = "";
      null != c && (g = ("" + c).replace(P, "$&/") + "/");
      b = R(b, g, e, d);
      V(a, aa, b);
      S(b);
    }
    var Y = { current: null };
    function Z() {
      var a = Y.current;
      if (null === a)
        throw Error(C(321));
      return a;
    }
    var ba = { ReactCurrentDispatcher: Y, ReactCurrentBatchConfig: { suspense: null }, ReactCurrentOwner: J, IsSomeRendererActing: { current: false }, assign: l };
    exports.Children = { map: function(a, b, c) {
      if (null == a)
        return a;
      var e = [];
      X(a, e, null, b, c);
      return e;
    }, forEach: function(a, b, c) {
      if (null == a)
        return a;
      b = R(null, null, b, c);
      V(a, W, b);
      S(b);
    }, count: function(a) {
      return V(a, function() {
        return null;
      }, null);
    }, toArray: function(a) {
      var b = [];
      X(a, b, null, function(a2) {
        return a2;
      });
      return b;
    }, only: function(a) {
      if (!O(a))
        throw Error(C(143));
      return a;
    } };
    exports.Component = F;
    exports.Fragment = r;
    exports.Profiler = u;
    exports.PureComponent = H;
    exports.StrictMode = t;
    exports.Suspense = y;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ba;
    exports.cloneElement = function(a, b, c) {
      if (null === a || void 0 === a)
        throw Error(C(267, a));
      var e = l({}, a.props), d = a.key, g = a.ref, k = a._owner;
      if (null != b) {
        void 0 !== b.ref && (g = b.ref, k = J.current);
        void 0 !== b.key && (d = "" + b.key);
        if (a.type && a.type.defaultProps)
          var f = a.type.defaultProps;
        for (h in b)
          K.call(b, h) && !L.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== f ? f[h] : b[h]);
      }
      var h = arguments.length - 2;
      if (1 === h)
        e.children = c;
      else if (1 < h) {
        f = Array(h);
        for (var m = 0; m < h; m++)
          f[m] = arguments[m + 2];
        e.children = f;
      }
      return {
        $$typeof: p,
        type: a.type,
        key: d,
        ref: g,
        props: e,
        _owner: k
      };
    };
    exports.createContext = function(a, b) {
      void 0 === b && (b = null);
      a = { $$typeof: w, _calculateChangedBits: b, _currentValue: a, _currentValue2: a, _threadCount: 0, Provider: null, Consumer: null };
      a.Provider = { $$typeof: v, _context: a };
      return a.Consumer = a;
    };
    exports.createElement = M;
    exports.createFactory = function(a) {
      var b = M.bind(null, a);
      b.type = a;
      return b;
    };
    exports.createRef = function() {
      return { current: null };
    };
    exports.forwardRef = function(a) {
      return { $$typeof: x, render: a };
    };
    exports.isValidElement = O;
    exports.lazy = function(a) {
      return { $$typeof: A, _ctor: a, _status: -1, _result: null };
    };
    exports.memo = function(a, b) {
      return { $$typeof: z, type: a, compare: void 0 === b ? null : b };
    };
    exports.useCallback = function(a, b) {
      return Z().useCallback(a, b);
    };
    exports.useContext = function(a, b) {
      return Z().useContext(a, b);
    };
    exports.useDebugValue = function() {
    };
    exports.useEffect = function(a, b) {
      return Z().useEffect(a, b);
    };
    exports.useImperativeHandle = function(a, b, c) {
      return Z().useImperativeHandle(a, b, c);
    };
    exports.useLayoutEffect = function(a, b) {
      return Z().useLayoutEffect(a, b);
    };
    exports.useMemo = function(a, b) {
      return Z().useMemo(a, b);
    };
    exports.useReducer = function(a, b, c) {
      return Z().useReducer(a, b, c);
    };
    exports.useRef = function(a) {
      return Z().useRef(a);
    };
    exports.useState = function(a) {
      return Z().useState(a);
    };
    exports.version = "16.14.0";
  }
});

// node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/react/index.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_react_production_min();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/scheduler/cjs/scheduler-unstable_mock.production.min.js
var require_scheduler_unstable_mock_production_min = __commonJS({
  "node_modules/scheduler/cjs/scheduler-unstable_mock.production.min.js"(exports) {
    "use strict";
    var f = 0;
    var g = null;
    var h = null;
    var k = -1;
    var l = null;
    var m = -1;
    var n = false;
    var p = false;
    var q = false;
    var r = false;
    function t() {
      return -1 !== m && null !== l && l.length >= m || r && q ? n = true : false;
    }
    function x() {
      if (p)
        throw Error("Already flushing work.");
      if (null !== g) {
        var a = g;
        p = true;
        try {
          var b = true;
          do
            b = a(true, f);
          while (b);
          b || (g = null);
          return true;
        } finally {
          p = false;
        }
      } else
        return false;
    }
    function z(a, b) {
      var c = a.length;
      a.push(b);
      a:
        for (; ; ) {
          var d = c - 1 >>> 1, e = a[d];
          if (void 0 !== e && 0 < A(e, b))
            a[d] = b, a[c] = e, c = d;
          else
            break a;
        }
    }
    function B(a) {
      a = a[0];
      return void 0 === a ? null : a;
    }
    function C(a) {
      var b = a[0];
      if (void 0 !== b) {
        var c = a.pop();
        if (c !== b) {
          a[0] = c;
          a:
            for (var d = 0, e = a.length; d < e; ) {
              var u = 2 * (d + 1) - 1, v = a[u], w = u + 1, y = a[w];
              if (void 0 !== v && 0 > A(v, c))
                void 0 !== y && 0 > A(y, v) ? (a[d] = y, a[w] = c, d = w) : (a[d] = v, a[u] = c, d = u);
              else if (void 0 !== y && 0 > A(y, c))
                a[d] = y, a[w] = c, d = w;
              else
                break a;
            }
        }
        return b;
      }
      return null;
    }
    function A(a, b) {
      var c = a.sortIndex - b.sortIndex;
      return 0 !== c ? c : a.id - b.id;
    }
    var D = [];
    var E = [];
    var F = 1;
    var G = null;
    var H = 3;
    var I = false;
    var J = false;
    var K = false;
    function L(a) {
      for (var b = B(E); null !== b; ) {
        if (null === b.callback)
          C(E);
        else if (b.startTime <= a)
          C(E), b.sortIndex = b.expirationTime, z(D, b);
        else
          break;
        b = B(E);
      }
    }
    function M(a) {
      K = false;
      L(a);
      if (!J)
        if (null !== B(D))
          J = true, g = N;
        else {
          var b = B(E);
          null !== b && (a = b.startTime - a, h = M, k = f + a);
        }
    }
    function N(a, b) {
      J = false;
      K && (K = false, h = null, k = -1);
      I = true;
      var c = H;
      try {
        L(b);
        for (G = B(D); null !== G && (!(G.expirationTime > b) || a && !t()); ) {
          var d = G.callback;
          if (null !== d) {
            G.callback = null;
            H = G.priorityLevel;
            var e = d(G.expirationTime <= b);
            b = f;
            "function" === typeof e ? G.callback = e : G === B(D) && C(D);
            L(b);
          } else
            C(D);
          G = B(D);
        }
        if (null !== G)
          var u = true;
        else {
          var v = B(E);
          if (null !== v) {
            var w = v.startTime - b;
            h = M;
            k = f + w;
          }
          u = false;
        }
        return u;
      } finally {
        G = null, H = c, I = false;
      }
    }
    function O(a) {
      switch (a) {
        case 1:
          return -1;
        case 2:
          return 250;
        case 5:
          return 1073741823;
        case 4:
          return 1e4;
        default:
          return 5e3;
      }
    }
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_advanceTime = function(a) {
      f += a;
      null !== h && k <= f && (h(f), k = -1, h = null);
    };
    exports.unstable_cancelCallback = function(a) {
      a.callback = null;
    };
    exports.unstable_clearYields = function() {
      if (null === l)
        return [];
      var a = l;
      l = null;
      return a;
    };
    exports.unstable_continueExecution = function() {
      J || I || (J = true, g = N);
    };
    exports.unstable_flushAll = function() {
      if (null !== l)
        throw Error("Log is not empty. Assert on the log of yielded values before flushing additional work.");
      x();
      if (null !== l)
        throw Error("While flushing work, something yielded a value. Use an assertion helper to assert on the log of yielded values, e.g. expect(Scheduler).toFlushAndYield([...])");
    };
    exports.unstable_flushAllWithoutAsserting = x;
    exports.unstable_flushExpired = function() {
      if (p)
        throw Error("Already flushing work.");
      if (null !== g) {
        p = true;
        try {
          g(false, f) || (g = null);
        } finally {
          p = false;
        }
      }
    };
    exports.unstable_flushNumberOfYields = function(a) {
      if (p)
        throw Error("Already flushing work.");
      if (null !== g) {
        var b = g;
        m = a;
        p = true;
        try {
          a = true;
          do
            a = b(true, f);
          while (a && !n);
          a || (g = null);
        } finally {
          m = -1, p = n = false;
        }
      }
    };
    exports.unstable_flushUntilNextPaint = function() {
      if (p)
        throw Error("Already flushing work.");
      if (null !== g) {
        var a = g;
        r = true;
        q = false;
        p = true;
        try {
          var b = true;
          do
            b = a(true, f);
          while (b && !n);
          b || (g = null);
        } finally {
          p = n = r = false;
        }
      }
    };
    exports.unstable_forceFrameRate = function() {
    };
    exports.unstable_getCurrentPriorityLevel = function() {
      return H;
    };
    exports.unstable_getFirstCallbackNode = function() {
      return B(D);
    };
    exports.unstable_next = function(a) {
      switch (H) {
        case 1:
        case 2:
        case 3:
          var b = 3;
          break;
        default:
          b = H;
      }
      var c = H;
      H = b;
      try {
        return a();
      } finally {
        H = c;
      }
    };
    exports.unstable_now = function() {
      return f;
    };
    exports.unstable_pauseExecution = function() {
    };
    exports.unstable_requestPaint = function() {
      q = true;
    };
    exports.unstable_runWithPriority = function(a, b) {
      switch (a) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          a = 3;
      }
      var c = H;
      H = a;
      try {
        return b();
      } finally {
        H = c;
      }
    };
    exports.unstable_scheduleCallback = function(a, b, c) {
      var d = f;
      if ("object" === typeof c && null !== c) {
        var e = c.delay;
        e = "number" === typeof e && 0 < e ? d + e : d;
        c = "number" === typeof c.timeout ? c.timeout : O(a);
      } else
        c = O(a), e = d;
      c = e + c;
      a = { id: F++, callback: b, priorityLevel: a, startTime: e, expirationTime: c, sortIndex: -1 };
      e > d ? (a.sortIndex = e, z(E, a), null === B(D) && a === B(E) && (K ? (h = null, k = -1) : K = true, h = M, k = f + (e - d))) : (a.sortIndex = c, z(D, a), J || I || (J = true, g = N));
      return a;
    };
    exports.unstable_shouldYield = function() {
      var a = f;
      L(a);
      var b = B(D);
      return b !== G && null !== G && null !== b && null !== b.callback && b.startTime <= a && b.expirationTime < G.expirationTime || t();
    };
    exports.unstable_wrapCallback = function(a) {
      var b = H;
      return function() {
        var c = H;
        H = b;
        try {
          return a.apply(this, arguments);
        } finally {
          H = c;
        }
      };
    };
    exports.unstable_yieldValue = function(a) {
      null === l ? l = [a] : l.push(a);
    };
  }
});

// node_modules/scheduler/unstable_mock.js
var require_unstable_mock = __commonJS({
  "node_modules/scheduler/unstable_mock.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_scheduler_unstable_mock_production_min();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/scheduler/cjs/scheduler.production.min.js
var require_scheduler_production_min = __commonJS({
  "node_modules/scheduler/cjs/scheduler.production.min.js"(exports) {
    "use strict";
    var f;
    var g;
    var h;
    var k;
    var l;
    if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
      p = null, q = null, t = function() {
        if (null !== p)
          try {
            var a = exports.unstable_now();
            p(true, a);
            p = null;
          } catch (b) {
            throw setTimeout(t, 0), b;
          }
      }, u = Date.now();
      exports.unstable_now = function() {
        return Date.now() - u;
      };
      f = function(a) {
        null !== p ? setTimeout(f, 0, a) : (p = a, setTimeout(t, 0));
      };
      g = function(a, b) {
        q = setTimeout(a, b);
      };
      h = function() {
        clearTimeout(q);
      };
      k = function() {
        return false;
      };
      l = exports.unstable_forceFrameRate = function() {
      };
    } else {
      w = window.performance, x = window.Date, y = window.setTimeout, z = window.clearTimeout;
      if ("undefined" !== typeof console) {
        A = window.cancelAnimationFrame;
        "function" !== typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");
        "function" !== typeof A && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");
      }
      if ("object" === typeof w && "function" === typeof w.now)
        exports.unstable_now = function() {
          return w.now();
        };
      else {
        B = x.now();
        exports.unstable_now = function() {
          return x.now() - B;
        };
      }
      C = false, D = null, E = -1, F = 5, G = 0;
      k = function() {
        return exports.unstable_now() >= G;
      };
      l = function() {
      };
      exports.unstable_forceFrameRate = function(a) {
        0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : F = 0 < a ? Math.floor(1e3 / a) : 5;
      };
      H = new MessageChannel(), I = H.port2;
      H.port1.onmessage = function() {
        if (null !== D) {
          var a = exports.unstable_now();
          G = a + F;
          try {
            D(true, a) ? I.postMessage(null) : (C = false, D = null);
          } catch (b) {
            throw I.postMessage(null), b;
          }
        } else
          C = false;
      };
      f = function(a) {
        D = a;
        C || (C = true, I.postMessage(null));
      };
      g = function(a, b) {
        E = y(function() {
          a(exports.unstable_now());
        }, b);
      };
      h = function() {
        z(E);
        E = -1;
      };
    }
    var p;
    var q;
    var t;
    var u;
    var w;
    var x;
    var y;
    var z;
    var A;
    var B;
    var C;
    var D;
    var E;
    var F;
    var G;
    var H;
    var I;
    function J(a, b) {
      var c = a.length;
      a.push(b);
      a:
        for (; ; ) {
          var d = c - 1 >>> 1, e = a[d];
          if (void 0 !== e && 0 < K(e, b))
            a[d] = b, a[c] = e, c = d;
          else
            break a;
        }
    }
    function L(a) {
      a = a[0];
      return void 0 === a ? null : a;
    }
    function M(a) {
      var b = a[0];
      if (void 0 !== b) {
        var c = a.pop();
        if (c !== b) {
          a[0] = c;
          a:
            for (var d = 0, e = a.length; d < e; ) {
              var m = 2 * (d + 1) - 1, n = a[m], v = m + 1, r = a[v];
              if (void 0 !== n && 0 > K(n, c))
                void 0 !== r && 0 > K(r, n) ? (a[d] = r, a[v] = c, d = v) : (a[d] = n, a[m] = c, d = m);
              else if (void 0 !== r && 0 > K(r, c))
                a[d] = r, a[v] = c, d = v;
              else
                break a;
            }
        }
        return b;
      }
      return null;
    }
    function K(a, b) {
      var c = a.sortIndex - b.sortIndex;
      return 0 !== c ? c : a.id - b.id;
    }
    var N = [];
    var O = [];
    var P = 1;
    var Q = null;
    var R = 3;
    var S = false;
    var T = false;
    var U = false;
    function V(a) {
      for (var b = L(O); null !== b; ) {
        if (null === b.callback)
          M(O);
        else if (b.startTime <= a)
          M(O), b.sortIndex = b.expirationTime, J(N, b);
        else
          break;
        b = L(O);
      }
    }
    function W(a) {
      U = false;
      V(a);
      if (!T)
        if (null !== L(N))
          T = true, f(X);
        else {
          var b = L(O);
          null !== b && g(W, b.startTime - a);
        }
    }
    function X(a, b) {
      T = false;
      U && (U = false, h());
      S = true;
      var c = R;
      try {
        V(b);
        for (Q = L(N); null !== Q && (!(Q.expirationTime > b) || a && !k()); ) {
          var d = Q.callback;
          if (null !== d) {
            Q.callback = null;
            R = Q.priorityLevel;
            var e = d(Q.expirationTime <= b);
            b = exports.unstable_now();
            "function" === typeof e ? Q.callback = e : Q === L(N) && M(N);
            V(b);
          } else
            M(N);
          Q = L(N);
        }
        if (null !== Q)
          var m = true;
        else {
          var n = L(O);
          null !== n && g(W, n.startTime - b);
          m = false;
        }
        return m;
      } finally {
        Q = null, R = c, S = false;
      }
    }
    function Y(a) {
      switch (a) {
        case 1:
          return -1;
        case 2:
          return 250;
        case 5:
          return 1073741823;
        case 4:
          return 1e4;
        default:
          return 5e3;
      }
    }
    var Z = l;
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(a) {
      a.callback = null;
    };
    exports.unstable_continueExecution = function() {
      T || S || (T = true, f(X));
    };
    exports.unstable_getCurrentPriorityLevel = function() {
      return R;
    };
    exports.unstable_getFirstCallbackNode = function() {
      return L(N);
    };
    exports.unstable_next = function(a) {
      switch (R) {
        case 1:
        case 2:
        case 3:
          var b = 3;
          break;
        default:
          b = R;
      }
      var c = R;
      R = b;
      try {
        return a();
      } finally {
        R = c;
      }
    };
    exports.unstable_pauseExecution = function() {
    };
    exports.unstable_requestPaint = Z;
    exports.unstable_runWithPriority = function(a, b) {
      switch (a) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          a = 3;
      }
      var c = R;
      R = a;
      try {
        return b();
      } finally {
        R = c;
      }
    };
    exports.unstable_scheduleCallback = function(a, b, c) {
      var d = exports.unstable_now();
      if ("object" === typeof c && null !== c) {
        var e = c.delay;
        e = "number" === typeof e && 0 < e ? d + e : d;
        c = "number" === typeof c.timeout ? c.timeout : Y(a);
      } else
        c = Y(a), e = d;
      c = e + c;
      a = { id: P++, callback: b, priorityLevel: a, startTime: e, expirationTime: c, sortIndex: -1 };
      e > d ? (a.sortIndex = e, J(O, a), null === L(N) && a === L(O) && (U ? h() : U = true, g(W, e - d))) : (a.sortIndex = c, J(N, a), T || S || (T = true, f(X)));
      return a;
    };
    exports.unstable_shouldYield = function() {
      var a = exports.unstable_now();
      V(a);
      var b = L(N);
      return b !== Q && null !== Q && null !== b && null !== b.callback && b.startTime <= a && b.expirationTime < Q.expirationTime || k();
    };
    exports.unstable_wrapCallback = function(a) {
      var b = R;
      return function() {
        var c = R;
        R = b;
        try {
          return a.apply(this, arguments);
        } finally {
          R = c;
        }
      };
    };
  }
});

// node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_scheduler_production_min();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/react-test-renderer/cjs/react-test-renderer.production.min.js
var require_react_test_renderer_production_min = __commonJS({
  "node_modules/react-test-renderer/cjs/react-test-renderer.production.min.js"(exports, module) {
    "use strict";
    var aa = require_object_assign();
    var ba = require_unstable_mock();
    var ca = require_react();
    var m = require_scheduler();
    function n(a) {
      for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)
        b += "&args[]=" + encodeURIComponent(arguments[c]);
      return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    function da(a, b) {
      for (var c = 0; c < b.length; c++) {
        var d = b[c];
        d.enumerable = d.enumerable || false;
        d.configurable = true;
        "value" in d && (d.writable = true);
        Object.defineProperty(a, d.key, d);
      }
    }
    function ea(a, b, c) {
      b && da(a.prototype, b);
      c && da(a, c);
      return a;
    }
    var t = ca.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    t.hasOwnProperty("ReactCurrentDispatcher") || (t.ReactCurrentDispatcher = { current: null });
    t.hasOwnProperty("ReactCurrentBatchConfig") || (t.ReactCurrentBatchConfig = { suspense: null });
    var y = "function" === typeof Symbol && Symbol.for;
    var fa = y ? Symbol.for("react.element") : 60103;
    var ha = y ? Symbol.for("react.portal") : 60106;
    var ia = y ? Symbol.for("react.fragment") : 60107;
    var ja = y ? Symbol.for("react.strict_mode") : 60108;
    var ka = y ? Symbol.for("react.profiler") : 60114;
    var la = y ? Symbol.for("react.provider") : 60109;
    var ma = y ? Symbol.for("react.context") : 60110;
    var na = y ? Symbol.for("react.concurrent_mode") : 60111;
    var oa = y ? Symbol.for("react.forward_ref") : 60112;
    var pa = y ? Symbol.for("react.suspense") : 60113;
    var qa = y ? Symbol.for("react.suspense_list") : 60120;
    var ra = y ? Symbol.for("react.memo") : 60115;
    var sa = y ? Symbol.for("react.lazy") : 60116;
    var ta = y ? Symbol.for("react.block") : 60121;
    var ua = "function" === typeof Symbol && Symbol.iterator;
    function va(a) {
      if (null === a || "object" !== typeof a)
        return null;
      a = ua && a[ua] || a["@@iterator"];
      return "function" === typeof a ? a : null;
    }
    function wa(a) {
      if (-1 === a._status) {
        a._status = 0;
        var b = a._ctor;
        b = b();
        a._result = b;
        b.then(function(b2) {
          0 === a._status && (b2 = b2.default, a._status = 1, a._result = b2);
        }, function(b2) {
          0 === a._status && (a._status = 2, a._result = b2);
        });
      }
    }
    function xa(a) {
      if (null == a)
        return null;
      if ("function" === typeof a)
        return a.displayName || a.name || null;
      if ("string" === typeof a)
        return a;
      switch (a) {
        case ia:
          return "Fragment";
        case ha:
          return "Portal";
        case ka:
          return "Profiler";
        case ja:
          return "StrictMode";
        case pa:
          return "Suspense";
        case qa:
          return "SuspenseList";
      }
      if ("object" === typeof a)
        switch (a.$$typeof) {
          case ma:
            return "Context.Consumer";
          case la:
            return "Context.Provider";
          case oa:
            var b = a.render;
            b = b.displayName || b.name || "";
            return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");
          case ra:
            return xa(a.type);
          case ta:
            return xa(a.render);
          case sa:
            if (a = 1 === a._status ? a._result : null)
              return xa(a);
        }
      return null;
    }
    function ya(a) {
      var b = a, c = a;
      if (a.alternate)
        for (; b.return; )
          b = b.return;
      else {
        a = b;
        do
          b = a, 0 !== (b.effectTag & 1026) && (c = b.return), a = b.return;
        while (a);
      }
      return 3 === b.tag ? c : null;
    }
    function za(a) {
      if (ya(a) !== a)
        throw Error(n(188));
    }
    function Aa(a) {
      var b = a.alternate;
      if (!b) {
        b = ya(a);
        if (null === b)
          throw Error(n(188));
        return b !== a ? null : a;
      }
      for (var c = a, d = b; ; ) {
        var e = c.return;
        if (null === e)
          break;
        var f = e.alternate;
        if (null === f) {
          d = e.return;
          if (null !== d) {
            c = d;
            continue;
          }
          break;
        }
        if (e.child === f.child) {
          for (f = e.child; f; ) {
            if (f === c)
              return za(e), a;
            if (f === d)
              return za(e), b;
            f = f.sibling;
          }
          throw Error(n(188));
        }
        if (c.return !== d.return)
          c = e, d = f;
        else {
          for (var g = false, h = e.child; h; ) {
            if (h === c) {
              g = true;
              c = e;
              d = f;
              break;
            }
            if (h === d) {
              g = true;
              d = e;
              c = f;
              break;
            }
            h = h.sibling;
          }
          if (!g) {
            for (h = f.child; h; ) {
              if (h === c) {
                g = true;
                c = f;
                d = e;
                break;
              }
              if (h === d) {
                g = true;
                d = f;
                c = e;
                break;
              }
              h = h.sibling;
            }
            if (!g)
              throw Error(n(189));
          }
        }
        if (c.alternate !== d)
          throw Error(n(190));
      }
      if (3 !== c.tag)
        throw Error(n(188));
      return c.stateNode.current === c ? a : b;
    }
    function Ba(a) {
      a = Aa(a);
      if (!a)
        return null;
      for (var b = a; ; ) {
        if (5 === b.tag || 6 === b.tag)
          return b;
        if (b.child)
          b.child.return = b, b = b.child;
        else {
          if (b === a)
            break;
          for (; !b.sibling; ) {
            if (!b.return || b.return === a)
              return null;
            b = b.return;
          }
          b.sibling.return = b.return;
          b = b.sibling;
        }
      }
      return null;
    }
    var Ca = {};
    var Da = {};
    var Ea = /* @__PURE__ */ new WeakMap();
    function Fa(a) {
      switch (a.tag) {
        case "INSTANCE":
          var b = a.rootContainerInstance.createNodeMock;
          b = b({ type: a.type, props: a.props });
          "object" === typeof b && null !== b && Ea.set(b, a);
          return b;
        default:
          return a;
      }
    }
    function Ga(a, b) {
      var c = a.children.indexOf(b);
      -1 !== c && a.children.splice(c, 1);
      a.children.push(b);
    }
    function Ha(a, b, c) {
      var d = a.children.indexOf(b);
      -1 !== d && a.children.splice(d, 1);
      c = a.children.indexOf(c);
      a.children.splice(c, 0, b);
    }
    var Ia = setTimeout;
    var Ja = clearTimeout;
    var Ka = /^(.*)[\\\/]/;
    function La(a) {
      var b = "";
      do {
        a:
          switch (a.tag) {
            case 3:
            case 4:
            case 6:
            case 7:
            case 10:
            case 9:
              var c = "";
              break a;
            default:
              var d = a._debugOwner, e = a._debugSource, f = xa(a.type);
              c = null;
              d && (c = xa(d.type));
              d = f;
              f = "";
              e ? f = " (at " + e.fileName.replace(Ka, "") + ":" + e.lineNumber + ")" : c && (f = " (created by " + c + ")");
              c = "\n    in " + (d || "Unknown") + f;
          }
        b += c;
        a = a.return;
      } while (a);
      return b;
    }
    var Ma = [];
    var Na = -1;
    function B(a) {
      0 > Na || (a.current = Ma[Na], Ma[Na] = null, Na--);
    }
    function C(a, b) {
      Na++;
      Ma[Na] = a.current;
      a.current = b;
    }
    var Oa = {};
    var D = { current: Oa };
    var E = { current: false };
    var Pa = Oa;
    function Qa(a, b) {
      var c = a.type.contextTypes;
      if (!c)
        return Oa;
      var d = a.stateNode;
      if (d && d.__reactInternalMemoizedUnmaskedChildContext === b)
        return d.__reactInternalMemoizedMaskedChildContext;
      var e = {}, f;
      for (f in c)
        e[f] = b[f];
      d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
      return e;
    }
    function F(a) {
      a = a.childContextTypes;
      return null !== a && void 0 !== a;
    }
    function Ra() {
      B(E);
      B(D);
    }
    function Sa(a, b, c) {
      if (D.current !== Oa)
        throw Error(n(168));
      C(D, b);
      C(E, c);
    }
    function Ta(a, b, c) {
      var d = a.stateNode;
      a = b.childContextTypes;
      if ("function" !== typeof d.getChildContext)
        return c;
      d = d.getChildContext();
      for (var e in d)
        if (!(e in a))
          throw Error(n(108, xa(b) || "Unknown", e));
      return aa({}, c, {}, d);
    }
    function Ua(a) {
      a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || Oa;
      Pa = D.current;
      C(D, a);
      C(E, E.current);
      return true;
    }
    function Va(a, b, c) {
      var d = a.stateNode;
      if (!d)
        throw Error(n(169));
      c ? (a = Ta(a, b, Pa), d.__reactInternalMemoizedMergedChildContext = a, B(E), B(D), C(D, a)) : B(E);
      C(E, c);
    }
    var Wa = m.unstable_runWithPriority;
    var Xa = m.unstable_scheduleCallback;
    var Ya = m.unstable_cancelCallback;
    var Za = m.unstable_requestPaint;
    var $a = m.unstable_now;
    var ab = m.unstable_getCurrentPriorityLevel;
    var bb = m.unstable_ImmediatePriority;
    var cb = m.unstable_UserBlockingPriority;
    var db = m.unstable_NormalPriority;
    var eb = m.unstable_LowPriority;
    var fb = m.unstable_IdlePriority;
    var gb = {};
    var hb = m.unstable_shouldYield;
    var ib = void 0 !== Za ? Za : function() {
    };
    var jb = null;
    var kb = null;
    var lb = false;
    var mb = $a();
    var G = 1e4 > mb ? $a : function() {
      return $a() - mb;
    };
    function nb() {
      switch (ab()) {
        case bb:
          return 99;
        case cb:
          return 98;
        case db:
          return 97;
        case eb:
          return 96;
        case fb:
          return 95;
        default:
          throw Error(n(332));
      }
    }
    function ob(a) {
      switch (a) {
        case 99:
          return bb;
        case 98:
          return cb;
        case 97:
          return db;
        case 96:
          return eb;
        case 95:
          return fb;
        default:
          throw Error(n(332));
      }
    }
    function pb(a, b) {
      a = ob(a);
      return Wa(a, b);
    }
    function qb(a, b, c) {
      a = ob(a);
      return Xa(a, b, c);
    }
    function rb(a) {
      null === jb ? (jb = [a], kb = Xa(bb, sb)) : jb.push(a);
      return gb;
    }
    function tb() {
      if (null !== kb) {
        var a = kb;
        kb = null;
        Ya(a);
      }
      sb();
    }
    function sb() {
      if (!lb && null !== jb) {
        lb = true;
        var a = 0;
        try {
          var b = jb;
          pb(99, function() {
            for (; a < b.length; a++) {
              var c = b[a];
              do
                c = c(true);
              while (null !== c);
            }
          });
          jb = null;
        } catch (c) {
          throw null !== jb && (jb = jb.slice(a + 1)), Xa(bb, tb), c;
        } finally {
          lb = false;
        }
      }
    }
    function ub(a, b) {
      return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
    }
    var vb = "function" === typeof Object.is ? Object.is : ub;
    var wb = Object.prototype.hasOwnProperty;
    function xb(a, b) {
      if (vb(a, b))
        return true;
      if ("object" !== typeof a || null === a || "object" !== typeof b || null === b)
        return false;
      var c = Object.keys(a), d = Object.keys(b);
      if (c.length !== d.length)
        return false;
      for (d = 0; d < c.length; d++)
        if (!wb.call(b, c[d]) || !vb(a[c[d]], b[c[d]]))
          return false;
      return true;
    }
    function H(a, b) {
      if (a && a.defaultProps) {
        b = aa({}, b);
        a = a.defaultProps;
        for (var c in a)
          void 0 === b[c] && (b[c] = a[c]);
      }
      return b;
    }
    var yb = { current: null };
    var zb = null;
    var Ab = null;
    var Bb = null;
    function Cb() {
      Bb = Ab = zb = null;
    }
    function Db(a) {
      var b = yb.current;
      B(yb);
      a.type._context._currentValue2 = b;
    }
    function Eb(a, b) {
      for (; null !== a; ) {
        var c = a.alternate;
        if (a.childExpirationTime < b)
          a.childExpirationTime = b, null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);
        else if (null !== c && c.childExpirationTime < b)
          c.childExpirationTime = b;
        else
          break;
        a = a.return;
      }
    }
    function Fb(a, b) {
      zb = a;
      Bb = Ab = null;
      a = a.dependencies;
      null !== a && null !== a.firstContext && (a.expirationTime >= b && (I = true), a.firstContext = null);
    }
    function J(a, b) {
      if (Bb !== a && false !== b && 0 !== b) {
        if ("number" !== typeof b || 1073741823 === b)
          Bb = a, b = 1073741823;
        b = { context: a, observedBits: b, next: null };
        if (null === Ab) {
          if (null === zb)
            throw Error(n(308));
          Ab = b;
          zb.dependencies = { expirationTime: 0, firstContext: b, responders: null };
        } else
          Ab = Ab.next = b;
      }
      return a._currentValue2;
    }
    var Gb = false;
    function Hb(a) {
      a.updateQueue = { baseState: a.memoizedState, baseQueue: null, shared: { pending: null }, effects: null };
    }
    function Ib(a, b) {
      a = a.updateQueue;
      b.updateQueue === a && (b.updateQueue = { baseState: a.baseState, baseQueue: a.baseQueue, shared: a.shared, effects: a.effects });
    }
    function Jb(a, b) {
      a = { expirationTime: a, suspenseConfig: b, tag: 0, payload: null, callback: null, next: null };
      return a.next = a;
    }
    function Kb(a, b) {
      a = a.updateQueue;
      if (null !== a) {
        a = a.shared;
        var c = a.pending;
        null === c ? b.next = b : (b.next = c.next, c.next = b);
        a.pending = b;
      }
    }
    function Lb(a, b) {
      var c = a.alternate;
      null !== c && Ib(c, a);
      a = a.updateQueue;
      c = a.baseQueue;
      null === c ? (a.baseQueue = b.next = b, b.next = b) : (b.next = c.next, c.next = b);
    }
    function Mb(a, b, c, d) {
      var e = a.updateQueue;
      Gb = false;
      var f = e.baseQueue, g = e.shared.pending;
      if (null !== g) {
        if (null !== f) {
          var h = f.next;
          f.next = g.next;
          g.next = h;
        }
        f = g;
        e.shared.pending = null;
        h = a.alternate;
        null !== h && (h = h.updateQueue, null !== h && (h.baseQueue = g));
      }
      if (null !== f) {
        h = f.next;
        var k = e.baseState, l = 0, p = null, q = null, v = null;
        if (null !== h) {
          var x = h;
          do {
            g = x.expirationTime;
            if (g < d) {
              var P = { expirationTime: x.expirationTime, suspenseConfig: x.suspenseConfig, tag: x.tag, payload: x.payload, callback: x.callback, next: null };
              null === v ? (q = v = P, p = k) : v = v.next = P;
              g > l && (l = g);
            } else {
              null !== v && (v = v.next = { expirationTime: 1073741823, suspenseConfig: x.suspenseConfig, tag: x.tag, payload: x.payload, callback: x.callback, next: null });
              Nb(g, x.suspenseConfig);
              a: {
                var z = a, A = x;
                g = b;
                P = c;
                switch (A.tag) {
                  case 1:
                    z = A.payload;
                    if ("function" === typeof z) {
                      k = z.call(P, k, g);
                      break a;
                    }
                    k = z;
                    break a;
                  case 3:
                    z.effectTag = z.effectTag & -4097 | 64;
                  case 0:
                    z = A.payload;
                    g = "function" === typeof z ? z.call(P, k, g) : z;
                    if (null === g || void 0 === g)
                      break a;
                    k = aa({}, k, g);
                    break a;
                  case 2:
                    Gb = true;
                }
              }
              null !== x.callback && (a.effectTag |= 32, g = e.effects, null === g ? e.effects = [x] : g.push(x));
            }
            x = x.next;
            if (null === x || x === h)
              if (g = e.shared.pending, null === g)
                break;
              else
                x = f.next = g.next, g.next = h, e.baseQueue = f = g, e.shared.pending = null;
          } while (1);
        }
        null === v ? p = k : v.next = q;
        e.baseState = p;
        e.baseQueue = v;
        Ob(l);
        a.expirationTime = l;
        a.memoizedState = k;
      }
    }
    function Pb(a, b, c) {
      a = b.effects;
      b.effects = null;
      if (null !== a)
        for (b = 0; b < a.length; b++) {
          var d = a[b], e = d.callback;
          if (null !== e) {
            d.callback = null;
            d = e;
            e = c;
            if ("function" !== typeof d)
              throw Error(n(191, d));
            d.call(e);
          }
        }
    }
    var Qb = t.ReactCurrentBatchConfig;
    var Rb = new ca.Component().refs;
    function Sb(a, b, c, d) {
      b = a.memoizedState;
      c = c(d, b);
      c = null === c || void 0 === c ? b : aa({}, b, c);
      a.memoizedState = c;
      0 === a.expirationTime && (a.updateQueue.baseState = c);
    }
    var Wb = { isMounted: function(a) {
      return (a = a._reactInternalFiber) ? ya(a) === a : false;
    }, enqueueSetState: function(a, b, c) {
      a = a._reactInternalFiber;
      var d = Tb(), e = Qb.suspense;
      d = Ub(d, a, e);
      e = Jb(d, e);
      e.payload = b;
      void 0 !== c && null !== c && (e.callback = c);
      Kb(a, e);
      Vb(a, d);
    }, enqueueReplaceState: function(a, b, c) {
      a = a._reactInternalFiber;
      var d = Tb(), e = Qb.suspense;
      d = Ub(d, a, e);
      e = Jb(d, e);
      e.tag = 1;
      e.payload = b;
      void 0 !== c && null !== c && (e.callback = c);
      Kb(a, e);
      Vb(a, d);
    }, enqueueForceUpdate: function(a, b) {
      a = a._reactInternalFiber;
      var c = Tb(), d = Qb.suspense;
      c = Ub(c, a, d);
      d = Jb(c, d);
      d.tag = 2;
      void 0 !== b && null !== b && (d.callback = b);
      Kb(a, d);
      Vb(a, c);
    } };
    function Xb(a, b, c, d, e, f, g) {
      a = a.stateNode;
      return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !xb(c, d) || !xb(e, f) : true;
    }
    function Yb(a, b, c) {
      var d = false, e = Oa;
      var f = b.contextType;
      "object" === typeof f && null !== f ? f = J(f) : (e = F(b) ? Pa : D.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Qa(a, e) : Oa);
      b = new b(c, f);
      a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;
      b.updater = Wb;
      a.stateNode = b;
      b._reactInternalFiber = a;
      d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
      return b;
    }
    function Zb(a, b, c, d) {
      a = b.state;
      "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
      "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
      b.state !== a && Wb.enqueueReplaceState(b, b.state, null);
    }
    function $b(a, b, c, d) {
      var e = a.stateNode;
      e.props = c;
      e.state = a.memoizedState;
      e.refs = Rb;
      Hb(a);
      var f = b.contextType;
      "object" === typeof f && null !== f ? e.context = J(f) : (f = F(b) ? Pa : D.current, e.context = Qa(a, f));
      Mb(a, c, e, d);
      e.state = a.memoizedState;
      f = b.getDerivedStateFromProps;
      "function" === typeof f && (Sb(a, b, f, c), e.state = a.memoizedState);
      "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && Wb.enqueueReplaceState(e, e.state, null), Mb(a, c, e, d), e.state = a.memoizedState);
      "function" === typeof e.componentDidMount && (a.effectTag |= 4);
    }
    var ac = Array.isArray;
    function bc(a, b, c) {
      a = c.ref;
      if (null !== a && "function" !== typeof a && "object" !== typeof a) {
        if (c._owner) {
          c = c._owner;
          if (c) {
            if (1 !== c.tag)
              throw Error(n(309));
            var d = c.stateNode;
          }
          if (!d)
            throw Error(n(147, a));
          var e = "" + a;
          if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e)
            return b.ref;
          b = function(a2) {
            var b2 = d.refs;
            b2 === Rb && (b2 = d.refs = {});
            null === a2 ? delete b2[e] : b2[e] = a2;
          };
          b._stringRef = e;
          return b;
        }
        if ("string" !== typeof a)
          throw Error(n(284));
        if (!c._owner)
          throw Error(n(290, a));
      }
      return a;
    }
    function cc(a, b) {
      if ("textarea" !== a.type)
        throw Error(n(31, "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, ""));
    }
    function dc(a) {
      function b(b2, c2) {
        if (a) {
          var d2 = b2.lastEffect;
          null !== d2 ? (d2.nextEffect = c2, b2.lastEffect = c2) : b2.firstEffect = b2.lastEffect = c2;
          c2.nextEffect = null;
          c2.effectTag = 8;
        }
      }
      function c(c2, d2) {
        if (!a)
          return null;
        for (; null !== d2; )
          b(c2, d2), d2 = d2.sibling;
        return null;
      }
      function d(a2, b2) {
        for (a2 = /* @__PURE__ */ new Map(); null !== b2; )
          null !== b2.key ? a2.set(b2.key, b2) : a2.set(b2.index, b2), b2 = b2.sibling;
        return a2;
      }
      function e(a2, b2) {
        a2 = ec(a2, b2);
        a2.index = 0;
        a2.sibling = null;
        return a2;
      }
      function f(b2, c2, d2) {
        b2.index = d2;
        if (!a)
          return c2;
        d2 = b2.alternate;
        if (null !== d2)
          return d2 = d2.index, d2 < c2 ? (b2.effectTag = 2, c2) : d2;
        b2.effectTag = 2;
        return c2;
      }
      function g(b2) {
        a && null === b2.alternate && (b2.effectTag = 2);
        return b2;
      }
      function h(a2, b2, c2, d2) {
        if (null === b2 || 6 !== b2.tag)
          return b2 = fc(c2, a2.mode, d2), b2.return = a2, b2;
        b2 = e(b2, c2);
        b2.return = a2;
        return b2;
      }
      function k(a2, b2, c2, d2) {
        if (null !== b2 && b2.elementType === c2.type)
          return d2 = e(b2, c2.props), d2.ref = bc(a2, b2, c2), d2.return = a2, d2;
        d2 = gc(c2.type, c2.key, c2.props, null, a2.mode, d2);
        d2.ref = bc(a2, b2, c2);
        d2.return = a2;
        return d2;
      }
      function l(a2, b2, c2, d2) {
        if (null === b2 || 4 !== b2.tag || b2.stateNode.containerInfo !== c2.containerInfo || b2.stateNode.implementation !== c2.implementation)
          return b2 = hc(c2, a2.mode, d2), b2.return = a2, b2;
        b2 = e(b2, c2.children || []);
        b2.return = a2;
        return b2;
      }
      function p(a2, b2, c2, d2, f2) {
        if (null === b2 || 7 !== b2.tag)
          return b2 = ic(c2, a2.mode, d2, f2), b2.return = a2, b2;
        b2 = e(b2, c2);
        b2.return = a2;
        return b2;
      }
      function q(a2, b2, c2) {
        if ("string" === typeof b2 || "number" === typeof b2)
          return b2 = fc("" + b2, a2.mode, c2), b2.return = a2, b2;
        if ("object" === typeof b2 && null !== b2) {
          switch (b2.$$typeof) {
            case fa:
              return c2 = gc(b2.type, b2.key, b2.props, null, a2.mode, c2), c2.ref = bc(a2, null, b2), c2.return = a2, c2;
            case ha:
              return b2 = hc(b2, a2.mode, c2), b2.return = a2, b2;
          }
          if (ac(b2) || va(b2))
            return b2 = ic(b2, a2.mode, c2, null), b2.return = a2, b2;
          cc(a2, b2);
        }
        return null;
      }
      function v(a2, b2, c2, d2) {
        var e2 = null !== b2 ? b2.key : null;
        if ("string" === typeof c2 || "number" === typeof c2)
          return null !== e2 ? null : h(a2, b2, "" + c2, d2);
        if ("object" === typeof c2 && null !== c2) {
          switch (c2.$$typeof) {
            case fa:
              return c2.key === e2 ? c2.type === ia ? p(a2, b2, c2.props.children, d2, e2) : k(a2, b2, c2, d2) : null;
            case ha:
              return c2.key === e2 ? l(a2, b2, c2, d2) : null;
          }
          if (ac(c2) || va(c2))
            return null !== e2 ? null : p(a2, b2, c2, d2, null);
          cc(a2, c2);
        }
        return null;
      }
      function x(a2, b2, c2, d2, e2) {
        if ("string" === typeof d2 || "number" === typeof d2)
          return a2 = a2.get(c2) || null, h(b2, a2, "" + d2, e2);
        if ("object" === typeof d2 && null !== d2) {
          switch (d2.$$typeof) {
            case fa:
              return a2 = a2.get(null === d2.key ? c2 : d2.key) || null, d2.type === ia ? p(b2, a2, d2.props.children, e2, d2.key) : k(b2, a2, d2, e2);
            case ha:
              return a2 = a2.get(null === d2.key ? c2 : d2.key) || null, l(b2, a2, d2, e2);
          }
          if (ac(d2) || va(d2))
            return a2 = a2.get(c2) || null, p(b2, a2, d2, e2, null);
          cc(b2, d2);
        }
        return null;
      }
      function P(e2, g2, h2, k2) {
        for (var l2 = null, A = null, u = g2, r = g2 = 0, p2 = null; null !== u && r < h2.length; r++) {
          u.index > r ? (p2 = u, u = null) : p2 = u.sibling;
          var w = v(e2, u, h2[r], k2);
          if (null === w) {
            null === u && (u = p2);
            break;
          }
          a && u && null === w.alternate && b(e2, u);
          g2 = f(w, g2, r);
          null === A ? l2 = w : A.sibling = w;
          A = w;
          u = p2;
        }
        if (r === h2.length)
          return c(e2, u), l2;
        if (null === u) {
          for (; r < h2.length; r++)
            u = q(e2, h2[r], k2), null !== u && (g2 = f(u, g2, r), null === A ? l2 = u : A.sibling = u, A = u);
          return l2;
        }
        for (u = d(e2, u); r < h2.length; r++)
          p2 = x(u, e2, r, h2[r], k2), null !== p2 && (a && null !== p2.alternate && u.delete(null === p2.key ? r : p2.key), g2 = f(p2, g2, r), null === A ? l2 = p2 : A.sibling = p2, A = p2);
        a && u.forEach(function(a2) {
          return b(e2, a2);
        });
        return l2;
      }
      function z(e2, g2, h2, l2) {
        var k2 = va(h2);
        if ("function" !== typeof k2)
          throw Error(n(150));
        h2 = k2.call(h2);
        if (null == h2)
          throw Error(n(151));
        for (var u = k2 = null, r = g2, A = g2 = 0, p2 = null, w = h2.next(); null !== r && !w.done; A++, w = h2.next()) {
          r.index > A ? (p2 = r, r = null) : p2 = r.sibling;
          var z2 = v(e2, r, w.value, l2);
          if (null === z2) {
            null === r && (r = p2);
            break;
          }
          a && r && null === z2.alternate && b(e2, r);
          g2 = f(z2, g2, A);
          null === u ? k2 = z2 : u.sibling = z2;
          u = z2;
          r = p2;
        }
        if (w.done)
          return c(e2, r), k2;
        if (null === r) {
          for (; !w.done; A++, w = h2.next())
            w = q(e2, w.value, l2), null !== w && (g2 = f(w, g2, A), null === u ? k2 = w : u.sibling = w, u = w);
          return k2;
        }
        for (r = d(e2, r); !w.done; A++, w = h2.next())
          w = x(r, e2, A, w.value, l2), null !== w && (a && null !== w.alternate && r.delete(null === w.key ? A : w.key), g2 = f(w, g2, A), null === u ? k2 = w : u.sibling = w, u = w);
        a && r.forEach(function(a2) {
          return b(e2, a2);
        });
        return k2;
      }
      return function(a2, d2, f2, h2) {
        var k2 = "object" === typeof f2 && null !== f2 && f2.type === ia && null === f2.key;
        k2 && (f2 = f2.props.children);
        var l2 = "object" === typeof f2 && null !== f2;
        if (l2)
          switch (f2.$$typeof) {
            case fa:
              a: {
                l2 = f2.key;
                for (k2 = d2; null !== k2; ) {
                  if (k2.key === l2) {
                    switch (k2.tag) {
                      case 7:
                        if (f2.type === ia) {
                          c(a2, k2.sibling);
                          d2 = e(k2, f2.props.children);
                          d2.return = a2;
                          a2 = d2;
                          break a;
                        }
                        break;
                      default:
                        if (k2.elementType === f2.type) {
                          c(
                            a2,
                            k2.sibling
                          );
                          d2 = e(k2, f2.props);
                          d2.ref = bc(a2, k2, f2);
                          d2.return = a2;
                          a2 = d2;
                          break a;
                        }
                    }
                    c(a2, k2);
                    break;
                  } else
                    b(a2, k2);
                  k2 = k2.sibling;
                }
                f2.type === ia ? (d2 = ic(f2.props.children, a2.mode, h2, f2.key), d2.return = a2, a2 = d2) : (h2 = gc(f2.type, f2.key, f2.props, null, a2.mode, h2), h2.ref = bc(a2, d2, f2), h2.return = a2, a2 = h2);
              }
              return g(a2);
            case ha:
              a: {
                for (k2 = f2.key; null !== d2; ) {
                  if (d2.key === k2)
                    if (4 === d2.tag && d2.stateNode.containerInfo === f2.containerInfo && d2.stateNode.implementation === f2.implementation) {
                      c(a2, d2.sibling);
                      d2 = e(d2, f2.children || []);
                      d2.return = a2;
                      a2 = d2;
                      break a;
                    } else {
                      c(a2, d2);
                      break;
                    }
                  else
                    b(a2, d2);
                  d2 = d2.sibling;
                }
                d2 = hc(f2, a2.mode, h2);
                d2.return = a2;
                a2 = d2;
              }
              return g(a2);
          }
        if ("string" === typeof f2 || "number" === typeof f2)
          return f2 = "" + f2, null !== d2 && 6 === d2.tag ? (c(a2, d2.sibling), d2 = e(d2, f2), d2.return = a2, a2 = d2) : (c(a2, d2), d2 = fc(f2, a2.mode, h2), d2.return = a2, a2 = d2), g(a2);
        if (ac(f2))
          return P(a2, d2, f2, h2);
        if (va(f2))
          return z(a2, d2, f2, h2);
        l2 && cc(a2, f2);
        if ("undefined" === typeof f2 && !k2)
          switch (a2.tag) {
            case 1:
            case 0:
              throw a2 = a2.type, Error(n(152, a2.displayName || a2.name || "Component"));
          }
        return c(a2, d2);
      };
    }
    var jc = dc(true);
    var kc = dc(false);
    var lc = {};
    var mc = { current: lc };
    var nc = { current: lc };
    var pc = { current: lc };
    function qc(a) {
      if (a === lc)
        throw Error(n(174));
      return a;
    }
    function rc(a, b) {
      C(pc, b);
      C(nc, a);
      C(mc, lc);
      B(mc);
      C(mc, Ca);
    }
    function sc() {
      B(mc);
      B(nc);
      B(pc);
    }
    function tc(a) {
      qc(pc.current);
      qc(mc.current) !== Ca && (C(nc, a), C(mc, Ca));
    }
    function uc(a) {
      nc.current === a && (B(mc), B(nc));
    }
    var K = { current: 0 };
    function vc(a) {
      for (var b = a; null !== b; ) {
        if (13 === b.tag) {
          var c = b.memoizedState, d;
          if (d = null !== c) {
            if (!(c = null === c.dehydrated))
              throw Error(n(305));
            if (!c)
              throw Error(n(305));
            d = c;
          }
          if (d)
            return b;
        } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
          if (0 !== (b.effectTag & 64))
            return b;
        } else if (null !== b.child) {
          b.child.return = b;
          b = b.child;
          continue;
        }
        if (b === a)
          break;
        for (; null === b.sibling; ) {
          if (null === b.return || b.return === a)
            return null;
          b = b.return;
        }
        b.sibling.return = b.return;
        b = b.sibling;
      }
      return null;
    }
    function wc(a, b) {
      return { responder: a, props: b };
    }
    var xc = t.ReactCurrentDispatcher;
    var L = t.ReactCurrentBatchConfig;
    var yc = 0;
    var M = null;
    var N = null;
    var O = null;
    var zc = false;
    function Q() {
      throw Error(n(321));
    }
    function Ac(a, b) {
      if (null === b)
        return false;
      for (var c = 0; c < b.length && c < a.length; c++)
        if (!vb(a[c], b[c]))
          return false;
      return true;
    }
    function Bc(a, b, c, d, e, f) {
      yc = f;
      M = b;
      b.memoizedState = null;
      b.updateQueue = null;
      b.expirationTime = 0;
      xc.current = null === a || null === a.memoizedState ? Cc : Dc;
      a = c(d, e);
      if (b.expirationTime === yc) {
        f = 0;
        do {
          b.expirationTime = 0;
          if (!(25 > f))
            throw Error(n(301));
          f += 1;
          O = N = null;
          b.updateQueue = null;
          xc.current = Ec;
          a = c(d, e);
        } while (b.expirationTime === yc);
      }
      xc.current = Fc;
      b = null !== N && null !== N.next;
      yc = 0;
      O = N = M = null;
      zc = false;
      if (b)
        throw Error(n(300));
      return a;
    }
    function Gc() {
      var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
      null === O ? M.memoizedState = O = a : O = O.next = a;
      return O;
    }
    function Hc() {
      if (null === N) {
        var a = M.alternate;
        a = null !== a ? a.memoizedState : null;
      } else
        a = N.next;
      var b = null === O ? M.memoizedState : O.next;
      if (null !== b)
        O = b, N = a;
      else {
        if (null === a)
          throw Error(n(310));
        N = a;
        a = { memoizedState: N.memoizedState, baseState: N.baseState, baseQueue: N.baseQueue, queue: N.queue, next: null };
        null === O ? M.memoizedState = O = a : O = O.next = a;
      }
      return O;
    }
    function Ic(a, b) {
      return "function" === typeof b ? b(a) : b;
    }
    function Jc(a) {
      var b = Hc(), c = b.queue;
      if (null === c)
        throw Error(n(311));
      c.lastRenderedReducer = a;
      var d = N, e = d.baseQueue, f = c.pending;
      if (null !== f) {
        if (null !== e) {
          var g = e.next;
          e.next = f.next;
          f.next = g;
        }
        d.baseQueue = e = f;
        c.pending = null;
      }
      if (null !== e) {
        e = e.next;
        d = d.baseState;
        var h = g = f = null, k = e;
        do {
          var l = k.expirationTime;
          if (l < yc) {
            var p = { expirationTime: k.expirationTime, suspenseConfig: k.suspenseConfig, action: k.action, eagerReducer: k.eagerReducer, eagerState: k.eagerState, next: null };
            null === h ? (g = h = p, f = d) : h = h.next = p;
            l > M.expirationTime && (M.expirationTime = l, Ob(l));
          } else
            null !== h && (h = h.next = { expirationTime: 1073741823, suspenseConfig: k.suspenseConfig, action: k.action, eagerReducer: k.eagerReducer, eagerState: k.eagerState, next: null }), Nb(l, k.suspenseConfig), d = k.eagerReducer === a ? k.eagerState : a(d, k.action);
          k = k.next;
        } while (null !== k && k !== e);
        null === h ? f = d : h.next = g;
        vb(d, b.memoizedState) || (I = true);
        b.memoizedState = d;
        b.baseState = f;
        b.baseQueue = h;
        c.lastRenderedState = d;
      }
      return [b.memoizedState, c.dispatch];
    }
    function Kc(a) {
      var b = Hc(), c = b.queue;
      if (null === c)
        throw Error(n(311));
      c.lastRenderedReducer = a;
      var d = c.dispatch, e = c.pending, f = b.memoizedState;
      if (null !== e) {
        c.pending = null;
        var g = e = e.next;
        do
          f = a(f, g.action), g = g.next;
        while (g !== e);
        vb(f, b.memoizedState) || (I = true);
        b.memoizedState = f;
        null === b.baseQueue && (b.baseState = f);
        c.lastRenderedState = f;
      }
      return [f, d];
    }
    function Lc(a) {
      var b = Gc();
      "function" === typeof a && (a = a());
      b.memoizedState = b.baseState = a;
      a = b.queue = { pending: null, dispatch: null, lastRenderedReducer: Ic, lastRenderedState: a };
      a = a.dispatch = Mc.bind(null, M, a);
      return [b.memoizedState, a];
    }
    function Nc(a, b, c, d) {
      a = { tag: a, create: b, destroy: c, deps: d, next: null };
      b = M.updateQueue;
      null === b ? (b = { lastEffect: null }, M.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d = c.next, c.next = a, a.next = d, b.lastEffect = a));
      return a;
    }
    function Oc() {
      return Hc().memoizedState;
    }
    function Pc(a, b, c, d) {
      var e = Gc();
      M.effectTag |= a;
      e.memoizedState = Nc(1 | b, c, void 0, void 0 === d ? null : d);
    }
    function Qc(a, b, c, d) {
      var e = Hc();
      d = void 0 === d ? null : d;
      var f = void 0;
      if (null !== N) {
        var g = N.memoizedState;
        f = g.destroy;
        if (null !== d && Ac(d, g.deps)) {
          Nc(b, c, f, d);
          return;
        }
      }
      M.effectTag |= a;
      e.memoizedState = Nc(1 | b, c, f, d);
    }
    function Rc(a, b) {
      return Pc(516, 4, a, b);
    }
    function Sc(a, b) {
      return Qc(516, 4, a, b);
    }
    function Tc(a, b) {
      return Qc(4, 2, a, b);
    }
    function Uc(a, b) {
      if ("function" === typeof b)
        return a = a(), b(a), function() {
          b(null);
        };
      if (null !== b && void 0 !== b)
        return a = a(), b.current = a, function() {
          b.current = null;
        };
    }
    function Vc(a, b, c) {
      c = null !== c && void 0 !== c ? c.concat([a]) : null;
      return Qc(4, 2, Uc.bind(null, b, a), c);
    }
    function Wc() {
    }
    function Xc(a, b) {
      Gc().memoizedState = [a, void 0 === b ? null : b];
      return a;
    }
    function Yc(a, b) {
      var c = Hc();
      b = void 0 === b ? null : b;
      var d = c.memoizedState;
      if (null !== d && null !== b && Ac(b, d[1]))
        return d[0];
      c.memoizedState = [a, b];
      return a;
    }
    function Zc(a, b) {
      var c = Hc();
      b = void 0 === b ? null : b;
      var d = c.memoizedState;
      if (null !== d && null !== b && Ac(b, d[1]))
        return d[0];
      a = a();
      c.memoizedState = [a, b];
      return a;
    }
    function $c(a, b, c) {
      var d = nb();
      pb(98 > d ? 98 : d, function() {
        a(true);
      });
      pb(97 < d ? 97 : d, function() {
        var d2 = L.suspense;
        L.suspense = void 0 === b ? null : b;
        try {
          a(false), c();
        } finally {
          L.suspense = d2;
        }
      });
    }
    function Mc(a, b, c) {
      var d = Tb(), e = Qb.suspense;
      d = Ub(d, a, e);
      e = { expirationTime: d, suspenseConfig: e, action: c, eagerReducer: null, eagerState: null, next: null };
      var f = b.pending;
      null === f ? e.next = e : (e.next = f.next, f.next = e);
      b.pending = e;
      f = a.alternate;
      if (a === M || null !== f && f === M)
        zc = true, e.expirationTime = yc, M.expirationTime = yc;
      else {
        if (0 === a.expirationTime && (null === f || 0 === f.expirationTime) && (f = b.lastRenderedReducer, null !== f))
          try {
            var g = b.lastRenderedState, h = f(g, c);
            e.eagerReducer = f;
            e.eagerState = h;
            if (vb(h, g))
              return;
          } catch (k) {
          } finally {
          }
        Vb(
          a,
          d
        );
      }
    }
    var Fc = { readContext: J, useCallback: Q, useContext: Q, useEffect: Q, useImperativeHandle: Q, useLayoutEffect: Q, useMemo: Q, useReducer: Q, useRef: Q, useState: Q, useDebugValue: Q, useResponder: Q, useDeferredValue: Q, useTransition: Q };
    var Cc = { readContext: J, useCallback: Xc, useContext: J, useEffect: Rc, useImperativeHandle: function(a, b, c) {
      c = null !== c && void 0 !== c ? c.concat([a]) : null;
      return Pc(4, 2, Uc.bind(null, b, a), c);
    }, useLayoutEffect: function(a, b) {
      return Pc(4, 2, a, b);
    }, useMemo: function(a, b) {
      var c = Gc();
      b = void 0 === b ? null : b;
      a = a();
      c.memoizedState = [
        a,
        b
      ];
      return a;
    }, useReducer: function(a, b, c) {
      var d = Gc();
      b = void 0 !== c ? c(b) : b;
      d.memoizedState = d.baseState = b;
      a = d.queue = { pending: null, dispatch: null, lastRenderedReducer: a, lastRenderedState: b };
      a = a.dispatch = Mc.bind(null, M, a);
      return [d.memoizedState, a];
    }, useRef: function(a) {
      var b = Gc();
      a = { current: a };
      return b.memoizedState = a;
    }, useState: Lc, useDebugValue: Wc, useResponder: wc, useDeferredValue: function(a, b) {
      var c = Lc(a), d = c[0], e = c[1];
      Rc(
        function() {
          var c2 = L.suspense;
          L.suspense = void 0 === b ? null : b;
          try {
            e(a);
          } finally {
            L.suspense = c2;
          }
        },
        [a, b]
      );
      return d;
    }, useTransition: function(a) {
      var b = Lc(false), c = b[0];
      b = b[1];
      return [Xc($c.bind(null, b, a), [b, a]), c];
    } };
    var Dc = { readContext: J, useCallback: Yc, useContext: J, useEffect: Sc, useImperativeHandle: Vc, useLayoutEffect: Tc, useMemo: Zc, useReducer: Jc, useRef: Oc, useState: function() {
      return Jc(Ic);
    }, useDebugValue: Wc, useResponder: wc, useDeferredValue: function(a, b) {
      var c = Jc(Ic), d = c[0], e = c[1];
      Sc(function() {
        var c2 = L.suspense;
        L.suspense = void 0 === b ? null : b;
        try {
          e(a);
        } finally {
          L.suspense = c2;
        }
      }, [a, b]);
      return d;
    }, useTransition: function(a) {
      var b = Jc(Ic), c = b[0];
      b = b[1];
      return [Yc($c.bind(null, b, a), [b, a]), c];
    } };
    var Ec = { readContext: J, useCallback: Yc, useContext: J, useEffect: Sc, useImperativeHandle: Vc, useLayoutEffect: Tc, useMemo: Zc, useReducer: Kc, useRef: Oc, useState: function() {
      return Kc(Ic);
    }, useDebugValue: Wc, useResponder: wc, useDeferredValue: function(a, b) {
      var c = Kc(Ic), d = c[0], e = c[1];
      Sc(function() {
        var c2 = L.suspense;
        L.suspense = void 0 === b ? null : b;
        try {
          e(a);
        } finally {
          L.suspense = c2;
        }
      }, [a, b]);
      return d;
    }, useTransition: function(a) {
      var b = Kc(Ic), c = b[0];
      b = b[1];
      return [Yc($c.bind(
        null,
        b,
        a
      ), [b, a]), c];
    } };
    var ad = t.ReactCurrentOwner;
    var I = false;
    function R(a, b, c, d) {
      b.child = null === a ? kc(b, null, c, d) : jc(b, a.child, c, d);
    }
    function bd(a, b, c, d, e) {
      c = c.render;
      var f = b.ref;
      Fb(b, e);
      d = Bc(a, b, c, d, f, e);
      if (null !== a && !I)
        return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), cd(a, b, e);
      b.effectTag |= 1;
      R(a, b, d, e);
      return b.child;
    }
    function dd(a, b, c, d, e, f) {
      if (null === a) {
        var g = c.type;
        if ("function" === typeof g && !ed(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps)
          return b.tag = 15, b.type = g, fd(a, b, g, d, e, f);
        a = gc(c.type, null, d, null, b.mode, f);
        a.ref = b.ref;
        a.return = b;
        return b.child = a;
      }
      g = a.child;
      if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : xb, c(e, d) && a.ref === b.ref))
        return cd(a, b, f);
      b.effectTag |= 1;
      a = ec(g, d);
      a.ref = b.ref;
      a.return = b;
      return b.child = a;
    }
    function fd(a, b, c, d, e, f) {
      return null !== a && xb(a.memoizedProps, d) && a.ref === b.ref && (I = false, e < f) ? (b.expirationTime = a.expirationTime, cd(a, b, f)) : gd(a, b, c, d, f);
    }
    function hd(a, b) {
      var c = b.ref;
      if (null === a && null !== c || null !== a && a.ref !== c)
        b.effectTag |= 128;
    }
    function gd(a, b, c, d, e) {
      var f = F(c) ? Pa : D.current;
      f = Qa(b, f);
      Fb(b, e);
      c = Bc(a, b, c, d, f, e);
      if (null !== a && !I)
        return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), cd(a, b, e);
      b.effectTag |= 1;
      R(a, b, c, e);
      return b.child;
    }
    function id(a, b, c, d, e) {
      if (F(c)) {
        var f = true;
        Ua(b);
      } else
        f = false;
      Fb(b, e);
      if (null === b.stateNode)
        null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), Yb(b, c, d), $b(b, c, d, e), d = true;
      else if (null === a) {
        var g = b.stateNode, h = b.memoizedProps;
        g.props = h;
        var k = g.context, l = c.contextType;
        "object" === typeof l && null !== l ? l = J(l) : (l = F(c) ? Pa : D.current, l = Qa(b, l));
        var p = c.getDerivedStateFromProps, q = "function" === typeof p || "function" === typeof g.getSnapshotBeforeUpdate;
        q || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Zb(b, g, d, l);
        Gb = false;
        var v = b.memoizedState;
        g.state = v;
        Mb(b, d, g, e);
        k = b.memoizedState;
        h !== d || v !== k || E.current || Gb ? ("function" === typeof p && (Sb(b, c, p, d), k = b.memoizedState), (h = Gb || Xb(b, c, h, d, v, k, l)) ? (q || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.effectTag |= 4)) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, d = h) : ("function" === typeof g.componentDidMount && (b.effectTag |= 4), d = false);
      } else
        g = b.stateNode, Ib(a, b), h = b.memoizedProps, g.props = b.type === b.elementType ? h : H(b.type, h), k = g.context, l = c.contextType, "object" === typeof l && null !== l ? l = J(l) : (l = F(c) ? Pa : D.current, l = Qa(b, l)), p = c.getDerivedStateFromProps, (q = "function" === typeof p || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h !== d || k !== l) && Zb(b, g, d, l), Gb = false, k = b.memoizedState, g.state = k, Mb(b, d, g, e), v = b.memoizedState, h !== d || k !== v || E.current || Gb ? ("function" === typeof p && (Sb(b, c, p, d), v = b.memoizedState), (p = Gb || Xb(b, c, h, d, k, v, l)) ? (q || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d, v, l), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, v, l)), "function" === typeof g.componentDidUpdate && (b.effectTag |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = v), g.props = d, g.state = v, g.context = l, d = p) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), d = false);
      return jd(a, b, c, d, f, e);
    }
    function jd(a, b, c, d, e, f) {
      hd(a, b);
      var g = 0 !== (b.effectTag & 64);
      if (!d && !g)
        return e && Va(b, c, false), cd(a, b, f);
      d = b.stateNode;
      ad.current = b;
      var h = g && "function" !== typeof c.getDerivedStateFromError ? null : d.render();
      b.effectTag |= 1;
      null !== a && g ? (b.child = jc(b, a.child, null, f), b.child = jc(b, null, h, f)) : R(a, b, h, f);
      b.memoizedState = d.state;
      e && Va(b, c, true);
      return b.child;
    }
    function kd(a) {
      var b = a.stateNode;
      b.pendingContext ? Sa(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Sa(a, b.context, false);
      rc(a, b.containerInfo);
    }
    var ld = { dehydrated: null, retryTime: 0 };
    function md(a, b, c) {
      var d = b.mode, e = b.pendingProps, f = K.current, g = false, h;
      (h = 0 !== (b.effectTag & 64)) || (h = 0 !== (f & 2) && (null === a || null !== a.memoizedState));
      h ? (g = true, b.effectTag &= -65) : null !== a && null === a.memoizedState || void 0 === e.fallback || true === e.unstable_avoidThisFallback || (f |= 1);
      C(K, f & 1);
      if (null === a) {
        if (g) {
          g = e.fallback;
          e = ic(null, d, 0, null);
          e.return = b;
          if (0 === (b.mode & 2))
            for (a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a; )
              a.return = e, a = a.sibling;
          c = ic(g, d, c, null);
          c.return = b;
          e.sibling = c;
          b.memoizedState = ld;
          b.child = e;
          return c;
        }
        d = e.children;
        b.memoizedState = null;
        return b.child = kc(b, null, d, c);
      }
      if (null !== a.memoizedState) {
        a = a.child;
        d = a.sibling;
        if (g) {
          e = e.fallback;
          c = ec(a, a.pendingProps);
          c.return = b;
          if (0 === (b.mode & 2) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== a.child))
            for (c.child = g; null !== g; )
              g.return = c, g = g.sibling;
          d = ec(d, e);
          d.return = b;
          c.sibling = d;
          c.childExpirationTime = 0;
          b.memoizedState = ld;
          b.child = c;
          return d;
        }
        c = jc(b, a.child, e.children, c);
        b.memoizedState = null;
        return b.child = c;
      }
      a = a.child;
      if (g) {
        g = e.fallback;
        e = ic(null, d, 0, null);
        e.return = b;
        e.child = a;
        null !== a && (a.return = e);
        if (0 === (b.mode & 2))
          for (a = null !== b.memoizedState ? b.child.child : b.child, e.child = a; null !== a; )
            a.return = e, a = a.sibling;
        c = ic(g, d, c, null);
        c.return = b;
        e.sibling = c;
        c.effectTag |= 2;
        e.childExpirationTime = 0;
        b.memoizedState = ld;
        b.child = e;
        return c;
      }
      b.memoizedState = null;
      return b.child = jc(b, a, e.children, c);
    }
    function nd(a, b) {
      a.expirationTime < b && (a.expirationTime = b);
      var c = a.alternate;
      null !== c && c.expirationTime < b && (c.expirationTime = b);
      Eb(a.return, b);
    }
    function od(a, b, c, d, e, f) {
      var g = a.memoizedState;
      null === g ? a.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailExpiration: 0, tailMode: e, lastEffect: f } : (g.isBackwards = b, g.rendering = null, g.renderingStartTime = 0, g.last = d, g.tail = c, g.tailExpiration = 0, g.tailMode = e, g.lastEffect = f);
    }
    function pd(a, b, c) {
      var d = b.pendingProps, e = d.revealOrder, f = d.tail;
      R(a, b, d.children, c);
      d = K.current;
      if (0 !== (d & 2))
        d = d & 1 | 2, b.effectTag |= 64;
      else {
        if (null !== a && 0 !== (a.effectTag & 64))
          a:
            for (a = b.child; null !== a; ) {
              if (13 === a.tag)
                null !== a.memoizedState && nd(a, c);
              else if (19 === a.tag)
                nd(a, c);
              else if (null !== a.child) {
                a.child.return = a;
                a = a.child;
                continue;
              }
              if (a === b)
                break a;
              for (; null === a.sibling; ) {
                if (null === a.return || a.return === b)
                  break a;
                a = a.return;
              }
              a.sibling.return = a.return;
              a = a.sibling;
            }
        d &= 1;
      }
      C(K, d);
      if (0 === (b.mode & 2))
        b.memoizedState = null;
      else
        switch (e) {
          case "forwards":
            c = b.child;
            for (e = null; null !== c; )
              a = c.alternate, null !== a && null === vc(a) && (e = c), c = c.sibling;
            c = e;
            null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
            od(b, false, e, c, f, b.lastEffect);
            break;
          case "backwards":
            c = null;
            e = b.child;
            for (b.child = null; null !== e; ) {
              a = e.alternate;
              if (null !== a && null === vc(a)) {
                b.child = e;
                break;
              }
              a = e.sibling;
              e.sibling = c;
              c = e;
              e = a;
            }
            od(b, true, c, null, f, b.lastEffect);
            break;
          case "together":
            od(b, false, null, null, void 0, b.lastEffect);
            break;
          default:
            b.memoizedState = null;
        }
      return b.child;
    }
    function cd(a, b, c) {
      null !== a && (b.dependencies = a.dependencies);
      var d = b.expirationTime;
      0 !== d && Ob(d);
      if (b.childExpirationTime < c)
        return null;
      if (null !== a && b.child !== a.child)
        throw Error(n(153));
      if (null !== b.child) {
        a = b.child;
        c = ec(a, a.pendingProps);
        b.child = c;
        for (c.return = b; null !== a.sibling; )
          a = a.sibling, c = c.sibling = ec(a, a.pendingProps), c.return = b;
        c.sibling = null;
      }
      return b.child;
    }
    var qd;
    var rd;
    var sd;
    var td;
    qd = function(a, b) {
      for (var c = b.child; null !== c; ) {
        if (5 === c.tag || 6 === c.tag) {
          var d = a, e = c.stateNode, f = d.children.indexOf(e);
          -1 !== f && d.children.splice(f, 1);
          d.children.push(e);
        } else if (4 !== c.tag && null !== c.child) {
          c.child.return = c;
          c = c.child;
          continue;
        }
        if (c === b)
          break;
        for (; null === c.sibling; ) {
          if (null === c.return || c.return === b)
            return;
          c = c.return;
        }
        c.sibling.return = c.return;
        c = c.sibling;
      }
    };
    rd = function() {
    };
    sd = function(a, b, c, d) {
      a.memoizedProps !== d && (qc(mc.current), b.updateQueue = Da) && (b.effectTag |= 4);
    };
    td = function(a, b, c, d) {
      c !== d && (b.effectTag |= 4);
    };
    function ud(a, b) {
      switch (a.tailMode) {
        case "hidden":
          b = a.tail;
          for (var c = null; null !== b; )
            null !== b.alternate && (c = b), b = b.sibling;
          null === c ? a.tail = null : c.sibling = null;
          break;
        case "collapsed":
          c = a.tail;
          for (var d = null; null !== c; )
            null !== c.alternate && (d = c), c = c.sibling;
          null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
      }
    }
    function vd(a, b, c) {
      var d = b.pendingProps;
      switch (b.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
          return null;
        case 1:
          return F(b.type) && Ra(), null;
        case 3:
          return sc(), B(E), B(D), a = b.stateNode, a.pendingContext && (a.context = a.pendingContext, a.pendingContext = null), rd(b), null;
        case 5:
          uc(b);
          var e = qc(pc.current);
          c = b.type;
          if (null !== a && null != b.stateNode)
            sd(a, b, c, d, e), a.ref !== b.ref && (b.effectTag |= 128);
          else {
            if (!d) {
              if (null === b.stateNode)
                throw Error(n(166));
              return null;
            }
            qc(mc.current);
            a = { type: c, props: d, isHidden: false, children: [], internalInstanceHandle: b, rootContainerInstance: e, tag: "INSTANCE" };
            qd(a, b, false, false);
            b.stateNode = a;
            null !== b.ref && (b.effectTag |= 128);
          }
          return null;
        case 6:
          if (a && null != b.stateNode)
            td(a, b, a.memoizedProps, d);
          else {
            if ("string" !== typeof d && null === b.stateNode)
              throw Error(n(166));
            qc(pc.current);
            qc(mc.current);
            b.stateNode = { text: d, isHidden: false, tag: "TEXT" };
          }
          return null;
        case 13:
          B(K);
          d = b.memoizedState;
          if (0 !== (b.effectTag & 64))
            return b.expirationTime = c, b;
          d = null !== d;
          e = false;
          if (null !== a && (c = a.memoizedState, e = null !== c, !d && null !== c && (c = a.child.sibling, null !== c))) {
            var f = b.firstEffect;
            null !== f ? (b.firstEffect = c, c.nextEffect = f) : (b.firstEffect = b.lastEffect = c, c.nextEffect = null);
            c.effectTag = 8;
          }
          if (d && !e && 0 !== (b.mode & 2))
            if (null === a && true !== b.memoizedProps.unstable_avoidThisFallback || 0 !== (K.current & 1))
              S === wd && (S = xd);
            else {
              if (S === wd || S === xd)
                S = yd;
              0 !== zd && null !== T && (Ad(T, U), Bd(T, zd));
            }
          if (d || e)
            b.effectTag |= 4;
          return null;
        case 4:
          return sc(), rd(b), null;
        case 10:
          return Db(b), null;
        case 17:
          return F(b.type) && Ra(), null;
        case 19:
          B(K);
          d = b.memoizedState;
          if (null === d)
            return null;
          e = 0 !== (b.effectTag & 64);
          f = d.rendering;
          if (null === f)
            if (e)
              ud(d, false);
            else {
              if (S !== wd || null !== a && 0 !== (a.effectTag & 64))
                for (a = b.child; null !== a; ) {
                  f = vc(a);
                  if (null !== f) {
                    b.effectTag |= 64;
                    ud(d, false);
                    a = f.updateQueue;
                    null !== a && (b.updateQueue = a, b.effectTag |= 4);
                    null === d.lastEffect && (b.firstEffect = null);
                    b.lastEffect = d.lastEffect;
                    a = c;
                    for (d = b.child; null !== d; )
                      e = d, c = a, e.effectTag &= 2, e.nextEffect = null, e.firstEffect = null, e.lastEffect = null, f = e.alternate, null === f ? (e.childExpirationTime = 0, e.expirationTime = c, e.child = null, e.memoizedProps = null, e.memoizedState = null, e.updateQueue = null, e.dependencies = null) : (e.childExpirationTime = f.childExpirationTime, e.expirationTime = f.expirationTime, e.child = f.child, e.memoizedProps = f.memoizedProps, e.memoizedState = f.memoizedState, e.updateQueue = f.updateQueue, c = f.dependencies, e.dependencies = null === c ? null : { expirationTime: c.expirationTime, firstContext: c.firstContext, responders: c.responders }), d = d.sibling;
                    C(K, K.current & 1 | 2);
                    return b.child;
                  }
                  a = a.sibling;
                }
            }
          else {
            if (!e)
              if (a = vc(f), null !== a) {
                if (b.effectTag |= 64, e = true, a = a.updateQueue, null !== a && (b.updateQueue = a, b.effectTag |= 4), ud(d, true), null === d.tail && "hidden" === d.tailMode && !f.alternate)
                  return b = b.lastEffect = d.lastEffect, null !== b && (b.nextEffect = null), null;
              } else
                2 * G() - d.renderingStartTime > d.tailExpiration && 1 < c && (b.effectTag |= 64, e = true, ud(d, false), b.expirationTime = b.childExpirationTime = c - 1);
            d.isBackwards ? (f.sibling = b.child, b.child = f) : (a = d.last, null !== a ? a.sibling = f : b.child = f, d.last = f);
          }
          return null !== d.tail ? (0 === d.tailExpiration && (d.tailExpiration = G() + 500), a = d.tail, d.rendering = a, d.tail = a.sibling, d.lastEffect = b.lastEffect, d.renderingStartTime = G(), a.sibling = null, b = K.current, C(K, e ? b & 1 | 2 : b & 1), a) : null;
      }
      throw Error(n(156, b.tag));
    }
    function Cd(a) {
      switch (a.tag) {
        case 1:
          F(a.type) && Ra();
          var b = a.effectTag;
          return b & 4096 ? (a.effectTag = b & -4097 | 64, a) : null;
        case 3:
          sc();
          B(E);
          B(D);
          b = a.effectTag;
          if (0 !== (b & 64))
            throw Error(n(285));
          a.effectTag = b & -4097 | 64;
          return a;
        case 5:
          return uc(a), null;
        case 13:
          return B(K), b = a.effectTag, b & 4096 ? (a.effectTag = b & -4097 | 64, a) : null;
        case 19:
          return B(K), null;
        case 4:
          return sc(), null;
        case 10:
          return Db(a), null;
        default:
          return null;
      }
    }
    function Dd(a, b) {
      return { value: a, source: b, stack: La(b) };
    }
    var Ed = "function" === typeof WeakSet ? WeakSet : Set;
    function Fd(a, b) {
      var c = b.source, d = b.stack;
      null === d && null !== c && (d = La(c));
      null !== c && xa(c.type);
      b = b.value;
      null !== a && 1 === a.tag && xa(a.type);
      try {
        console.error(b);
      } catch (e) {
        setTimeout(function() {
          throw e;
        });
      }
    }
    function Gd(a, b) {
      try {
        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();
      } catch (c) {
        Hd(a, c);
      }
    }
    function Id(a) {
      var b = a.ref;
      if (null !== b)
        if ("function" === typeof b)
          try {
            b(null);
          } catch (c) {
            Hd(a, c);
          }
        else
          b.current = null;
    }
    function Jd(a, b) {
      switch (b.tag) {
        case 0:
        case 11:
        case 15:
        case 22:
          return;
        case 1:
          if (b.effectTag & 256 && null !== a) {
            var c = a.memoizedProps, d = a.memoizedState;
            a = b.stateNode;
            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : H(b.type, c), d);
            a.__reactInternalSnapshotBeforeUpdate = b;
          }
          return;
        case 3:
        case 5:
        case 6:
        case 4:
        case 17:
          return;
      }
      throw Error(n(163));
    }
    function Kd(a, b) {
      b = b.updateQueue;
      b = null !== b ? b.lastEffect : null;
      if (null !== b) {
        var c = b = b.next;
        do {
          if ((c.tag & a) === a) {
            var d = c.destroy;
            c.destroy = void 0;
            void 0 !== d && d();
          }
          c = c.next;
        } while (c !== b);
      }
    }
    function Md(a, b) {
      b = b.updateQueue;
      b = null !== b ? b.lastEffect : null;
      if (null !== b) {
        var c = b = b.next;
        do {
          if ((c.tag & a) === a) {
            var d = c.create;
            c.destroy = d();
          }
          c = c.next;
        } while (c !== b);
      }
    }
    function Nd(a, b, c) {
      switch (c.tag) {
        case 0:
        case 11:
        case 15:
        case 22:
          Md(3, c);
          return;
        case 1:
          a = c.stateNode;
          if (c.effectTag & 4)
            if (null === b)
              a.componentDidMount();
            else {
              var d = c.elementType === c.type ? b.memoizedProps : H(c.type, b.memoizedProps);
              a.componentDidUpdate(d, b.memoizedState, a.__reactInternalSnapshotBeforeUpdate);
            }
          b = c.updateQueue;
          null !== b && Pb(c, b, a);
          return;
        case 3:
          b = c.updateQueue;
          if (null !== b) {
            a = null;
            if (null !== c.child)
              switch (c.child.tag) {
                case 5:
                  a = Fa(c.child.stateNode);
                  break;
                case 1:
                  a = c.child.stateNode;
              }
            Pb(c, b, a);
          }
          return;
        case 5:
          return;
        case 6:
          return;
        case 4:
          return;
        case 12:
          return;
        case 13:
          return;
        case 19:
        case 17:
        case 20:
        case 21:
          return;
      }
      throw Error(n(163));
    }
    function Od(a, b, c) {
      "function" === typeof Pd && Pd(b);
      switch (b.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
          a = b.updateQueue;
          if (null !== a && (a = a.lastEffect, null !== a)) {
            var d = a.next;
            pb(97 < c ? 97 : c, function() {
              var a2 = d;
              do {
                var c2 = a2.destroy;
                if (void 0 !== c2) {
                  var g = b;
                  try {
                    c2();
                  } catch (h) {
                    Hd(g, h);
                  }
                }
                a2 = a2.next;
              } while (a2 !== d);
            });
          }
          break;
        case 1:
          Id(b);
          c = b.stateNode;
          "function" === typeof c.componentWillUnmount && Gd(b, c);
          break;
        case 5:
          Id(b);
          break;
        case 4:
          Qd(a, b, c);
      }
    }
    function Rd(a) {
      var b = a.alternate;
      a.return = null;
      a.child = null;
      a.memoizedState = null;
      a.updateQueue = null;
      a.dependencies = null;
      a.alternate = null;
      a.firstEffect = null;
      a.lastEffect = null;
      a.pendingProps = null;
      a.memoizedProps = null;
      a.stateNode = null;
      null !== b && Rd(b);
    }
    function Sd(a) {
      return 5 === a.tag || 3 === a.tag || 4 === a.tag;
    }
    function Td(a) {
      a: {
        for (var b = a.return; null !== b; ) {
          if (Sd(b)) {
            var c = b;
            break a;
          }
          b = b.return;
        }
        throw Error(n(160));
      }
      b = c.stateNode;
      switch (c.tag) {
        case 5:
          var d = false;
          break;
        case 3:
          b = b.containerInfo;
          d = true;
          break;
        case 4:
          b = b.containerInfo;
          d = true;
          break;
        default:
          throw Error(n(161));
      }
      c.effectTag & 16 && (c.effectTag &= -17);
      a:
        b:
          for (c = a; ; ) {
            for (; null === c.sibling; ) {
              if (null === c.return || Sd(c.return)) {
                c = null;
                break a;
              }
              c = c.return;
            }
            c.sibling.return = c.return;
            for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag; ) {
              if (c.effectTag & 2)
                continue b;
              if (null === c.child || 4 === c.tag)
                continue b;
              else
                c.child.return = c, c = c.child;
            }
            if (!(c.effectTag & 2)) {
              c = c.stateNode;
              break a;
            }
          }
      d ? Ud(a, c, b) : Vd(a, c, b);
    }
    function Ud(a, b, c) {
      var d = a.tag, e = 5 === d || 6 === d;
      if (e)
        a = e ? a.stateNode : a.stateNode.instance, b ? Ha(c, a, b) : Ga(c, a);
      else if (4 !== d && (a = a.child, null !== a))
        for (Ud(a, b, c), a = a.sibling; null !== a; )
          Ud(a, b, c), a = a.sibling;
    }
    function Vd(a, b, c) {
      var d = a.tag, e = 5 === d || 6 === d;
      if (e)
        a = e ? a.stateNode : a.stateNode.instance, b ? Ha(c, a, b) : Ga(c, a);
      else if (4 !== d && (a = a.child, null !== a))
        for (Vd(a, b, c), a = a.sibling; null !== a; )
          Vd(a, b, c), a = a.sibling;
    }
    function Qd(a, b, c) {
      for (var d = b, e = false, f; ; ) {
        if (!e) {
          e = d.return;
          a:
            for (; ; ) {
              if (null === e)
                throw Error(n(160));
              f = e.stateNode;
              switch (e.tag) {
                case 5:
                  break a;
                case 3:
                  f = f.containerInfo;
                  break a;
                case 4:
                  f = f.containerInfo;
                  break a;
              }
              e = e.return;
            }
          e = true;
        }
        if (5 === d.tag || 6 === d.tag) {
          a:
            for (var g = a, h = d, k = c, l = h; ; )
              if (Od(g, l, k), null !== l.child && 4 !== l.tag)
                l.child.return = l, l = l.child;
              else {
                if (l === h)
                  break a;
                for (; null === l.sibling; ) {
                  if (null === l.return || l.return === h)
                    break a;
                  l = l.return;
                }
                l.sibling.return = l.return;
                l = l.sibling;
              }
          g = f;
          h = g.children.indexOf(d.stateNode);
          g.children.splice(h, 1);
        } else if (4 === d.tag) {
          if (null !== d.child) {
            f = d.stateNode.containerInfo;
            d.child.return = d;
            d = d.child;
            continue;
          }
        } else if (Od(a, d, c), null !== d.child) {
          d.child.return = d;
          d = d.child;
          continue;
        }
        if (d === b)
          break;
        for (; null === d.sibling; ) {
          if (null === d.return || d.return === b)
            return;
          d = d.return;
          4 === d.tag && (e = false);
        }
        d.sibling.return = d.return;
        d = d.sibling;
      }
    }
    function Wd(a, b) {
      switch (b.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
          Kd(3, b);
          return;
        case 1:
          return;
        case 5:
          a = b.stateNode;
          if (null != a) {
            var c = b.memoizedProps, d = b.type, e = b.updateQueue;
            b.updateQueue = null;
            null !== e && (a.type = d, a.props = c);
          }
          return;
        case 6:
          if (null === b.stateNode)
            throw Error(n(162));
          b.stateNode.text = b.memoizedProps;
          return;
        case 3:
          return;
        case 12:
          return;
        case 13:
          a = b;
          null === b.memoizedState ? c = false : (c = true, a = b.child, Xd = G());
          if (null !== a)
            a:
              for (d = a; ; ) {
                if (5 === d.tag)
                  e = d.stateNode, c ? e.isHidden = true : d.stateNode.isHidden = false;
                else if (6 === d.tag)
                  d.stateNode.isHidden = c ? true : false;
                else if (13 === d.tag && null !== d.memoizedState && null === d.memoizedState.dehydrated) {
                  e = d.child.sibling;
                  e.return = d;
                  d = e;
                  continue;
                } else if (null !== d.child) {
                  d.child.return = d;
                  d = d.child;
                  continue;
                }
                if (d === a)
                  break;
                for (; null === d.sibling; ) {
                  if (null === d.return || d.return === a)
                    break a;
                  d = d.return;
                }
                d.sibling.return = d.return;
                d = d.sibling;
              }
          Yd(b);
          return;
        case 19:
          Yd(b);
          return;
        case 17:
          return;
      }
      throw Error(n(163));
    }
    function Yd(a) {
      var b = a.updateQueue;
      if (null !== b) {
        a.updateQueue = null;
        var c = a.stateNode;
        null === c && (c = a.stateNode = new Ed());
        b.forEach(function(b2) {
          var d = Zd.bind(null, a, b2);
          c.has(b2) || (c.add(b2), b2.then(d, d));
        });
      }
    }
    var $d = "function" === typeof WeakMap ? WeakMap : Map;
    function ae(a, b, c) {
      c = Jb(c, null);
      c.tag = 3;
      c.payload = { element: null };
      var d = b.value;
      c.callback = function() {
        be || (be = true, ce = d);
        Fd(a, b);
      };
      return c;
    }
    function de(a, b, c) {
      c = Jb(c, null);
      c.tag = 3;
      var d = a.type.getDerivedStateFromError;
      if ("function" === typeof d) {
        var e = b.value;
        c.payload = function() {
          Fd(a, b);
          return d(e);
        };
      }
      var f = a.stateNode;
      null !== f && "function" === typeof f.componentDidCatch && (c.callback = function() {
        "function" !== typeof d && (null === ee ? ee = /* @__PURE__ */ new Set([this]) : ee.add(this), Fd(a, b));
        var c2 = b.stack;
        this.componentDidCatch(b.value, { componentStack: null !== c2 ? c2 : "" });
      });
      return c;
    }
    var fe = Math.ceil;
    var ge = t.ReactCurrentDispatcher;
    var he = t.ReactCurrentOwner;
    var V = 0;
    var ie = 8;
    var je = 16;
    var ke = 32;
    var wd = 0;
    var le = 1;
    var me = 2;
    var xd = 3;
    var yd = 4;
    var ne = 5;
    var W = V;
    var T = null;
    var X = null;
    var U = 0;
    var S = wd;
    var oe = null;
    var pe = 1073741823;
    var qe = 1073741823;
    var re = null;
    var zd = 0;
    var se = false;
    var Xd = 0;
    var te = 500;
    var Y = null;
    var be = false;
    var ce = null;
    var ee = null;
    var ue = false;
    var ve = null;
    var we = 90;
    var xe = null;
    var ye = 0;
    var ze = null;
    var Ae = 0;
    function Tb() {
      return (W & (je | ke)) !== V ? 1073741821 - (G() / 10 | 0) : 0 !== Ae ? Ae : Ae = 1073741821 - (G() / 10 | 0);
    }
    function Ub(a, b, c) {
      b = b.mode;
      if (0 === (b & 2))
        return 1073741823;
      var d = nb();
      if (0 === (b & 4))
        return 99 === d ? 1073741823 : 1073741822;
      if ((W & je) !== V)
        return U;
      if (null !== c)
        a = 1073741821 - 25 * (((1073741821 - a + (c.timeoutMs | 0 || 5e3) / 10) / 25 | 0) + 1);
      else
        switch (d) {
          case 99:
            a = 1073741823;
            break;
          case 98:
            a = 1073741821 - 10 * (((1073741821 - a + 15) / 10 | 0) + 1);
            break;
          case 97:
          case 96:
            a = 1073741821 - 25 * (((1073741821 - a + 500) / 25 | 0) + 1);
            break;
          case 95:
            a = 2;
            break;
          default:
            throw Error(n(326));
        }
      null !== T && a === U && --a;
      return a;
    }
    function Vb(a, b) {
      if (50 < ye)
        throw ye = 0, ze = null, Error(n(185));
      a = Be(a, b);
      if (null !== a) {
        var c = nb();
        1073741823 === b ? (W & ie) !== V && (W & (je | ke)) === V ? Ce(a) : (Z(a), W === V && tb()) : Z(a);
        (W & 4) === V || 98 !== c && 99 !== c || (null === xe ? xe = /* @__PURE__ */ new Map([[a, b]]) : (c = xe.get(a), (void 0 === c || c > b) && xe.set(a, b)));
      }
    }
    function Be(a, b) {
      a.expirationTime < b && (a.expirationTime = b);
      var c = a.alternate;
      null !== c && c.expirationTime < b && (c.expirationTime = b);
      var d = a.return, e = null;
      if (null === d && 3 === a.tag)
        e = a.stateNode;
      else
        for (; null !== d; ) {
          c = d.alternate;
          d.childExpirationTime < b && (d.childExpirationTime = b);
          null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);
          if (null === d.return && 3 === d.tag) {
            e = d.stateNode;
            break;
          }
          d = d.return;
        }
      null !== e && (T === e && (Ob(b), S === yd && Ad(e, U)), Bd(e, b));
      return e;
    }
    function De(a) {
      var b = a.lastExpiredTime;
      if (0 !== b)
        return b;
      b = a.firstPendingTime;
      if (!Ee(a, b))
        return b;
      var c = a.lastPingedTime;
      a = a.nextKnownPendingLevel;
      a = c > a ? c : a;
      return 2 >= a && b !== a ? 0 : a;
    }
    function Z(a) {
      if (0 !== a.lastExpiredTime)
        a.callbackExpirationTime = 1073741823, a.callbackPriority = 99, a.callbackNode = rb(Ce.bind(null, a));
      else {
        var b = De(a), c = a.callbackNode;
        if (0 === b)
          null !== c && (a.callbackNode = null, a.callbackExpirationTime = 0, a.callbackPriority = 90);
        else {
          var d = Tb();
          1073741823 === b ? d = 99 : 1 === b || 2 === b ? d = 95 : (d = 10 * (1073741821 - b) - 10 * (1073741821 - d), d = 0 >= d ? 99 : 250 >= d ? 98 : 5250 >= d ? 97 : 95);
          if (null !== c) {
            var e = a.callbackPriority;
            if (a.callbackExpirationTime === b && e >= d)
              return;
            c !== gb && Ya(c);
          }
          a.callbackExpirationTime = b;
          a.callbackPriority = d;
          b = 1073741823 === b ? rb(Ce.bind(null, a)) : qb(d, Fe.bind(null, a), { timeout: 10 * (1073741821 - b) - G() });
          a.callbackNode = b;
        }
      }
    }
    function Fe(a, b) {
      Ae = 0;
      if (b) {
        b = Tb();
        var c = a.lastExpiredTime;
        if (0 === c || c > b)
          a.lastExpiredTime = b;
        Z(a);
        return null;
      }
      c = De(a);
      if (0 !== c) {
        b = a.callbackNode;
        if ((W & (je | ke)) !== V)
          throw Error(n(327));
        Ge();
        a === T && c === U || He(a, c);
        if (null !== X) {
          var d = W;
          W |= je;
          var e = Ie();
          do
            try {
              Je();
              break;
            } catch (h) {
              Ke(a, h);
            }
          while (1);
          Cb();
          W = d;
          ge.current = e;
          if (S === le)
            throw b = oe, He(a, c), Ad(a, c), Z(a), b;
          if (null === X)
            switch (e = a.finishedWork = a.current.alternate, a.finishedExpirationTime = c, d = S, T = null, d) {
              case wd:
              case le:
                throw Error(n(345));
              case me:
                c = 2 < c ? 2 : c;
                d = a.lastExpiredTime;
                if (0 === d || d > c)
                  a.lastExpiredTime = c;
                break;
              case xd:
                Ad(a, c);
                d = a.lastSuspendedTime;
                c === d && (a.nextKnownPendingLevel = Le(e));
                if (1073741823 === pe && (e = Xd + te - G(), 10 < e)) {
                  if (se) {
                    var f = a.lastPingedTime;
                    if (0 === f || f >= c) {
                      a.lastPingedTime = c;
                      He(a, c);
                      break;
                    }
                  }
                  f = De(a);
                  if (0 !== f && f !== c)
                    break;
                  if (0 !== d && d !== c) {
                    a.lastPingedTime = d;
                    break;
                  }
                  a.timeoutHandle = Ia(Me.bind(null, a), e);
                  break;
                }
                Me(a);
                break;
              case yd:
                Ad(a, c);
                d = a.lastSuspendedTime;
                c === d && (a.nextKnownPendingLevel = Le(e));
                if (se && (e = a.lastPingedTime, 0 === e || e >= c)) {
                  a.lastPingedTime = c;
                  He(a, c);
                  break;
                }
                e = De(a);
                if (0 !== e && e !== c)
                  break;
                if (0 !== d && d !== c) {
                  a.lastPingedTime = d;
                  break;
                }
                1073741823 !== qe ? d = 10 * (1073741821 - qe) - G() : 1073741823 === pe ? d = 0 : (d = 10 * (1073741821 - pe) - 5e3, e = G(), c = 10 * (1073741821 - c) - e, d = e - d, 0 > d && (d = 0), d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * fe(d / 1960)) - d, c < d && (d = c));
                if (10 < d) {
                  a.timeoutHandle = Ia(Me.bind(null, a), d);
                  break;
                }
                Me(a);
                break;
              case ne:
                if (1073741823 !== pe && null !== re) {
                  f = pe;
                  var g = re;
                  d = g.busyMinDurationMs | 0;
                  0 >= d ? d = 0 : (e = g.busyDelayMs | 0, f = G() - (10 * (1073741821 - f) - (g.timeoutMs | 0 || 5e3)), d = f <= e ? 0 : e + d - f);
                  if (10 < d) {
                    Ad(a, c);
                    a.timeoutHandle = Ia(Me.bind(null, a), d);
                    break;
                  }
                }
                Me(a);
                break;
              default:
                throw Error(n(329));
            }
          Z(a);
          if (a.callbackNode === b)
            return Fe.bind(null, a);
        }
      }
      return null;
    }
    function Ce(a) {
      var b = a.lastExpiredTime;
      b = 0 !== b ? b : 1073741823;
      if ((W & (je | ke)) !== V)
        throw Error(n(327));
      Ge();
      a === T && b === U || He(a, b);
      if (null !== X) {
        var c = W;
        W |= je;
        var d = Ie();
        do
          try {
            Ne();
            break;
          } catch (e) {
            Ke(a, e);
          }
        while (1);
        Cb();
        W = c;
        ge.current = d;
        if (S === le)
          throw c = oe, He(a, b), Ad(a, b), Z(a), c;
        if (null !== X)
          throw Error(n(261));
        a.finishedWork = a.current.alternate;
        a.finishedExpirationTime = b;
        T = null;
        Me(a);
        Z(a);
      }
      return null;
    }
    function Oe(a, b) {
      var c = W;
      W |= 1;
      try {
        return a(b);
      } finally {
        W = c, W === V && tb();
      }
    }
    function He(a, b) {
      a.finishedWork = null;
      a.finishedExpirationTime = 0;
      var c = a.timeoutHandle;
      -1 !== c && (a.timeoutHandle = -1, Ja(c));
      if (null !== X)
        for (c = X.return; null !== c; ) {
          var d = c;
          switch (d.tag) {
            case 1:
              d = d.type.childContextTypes;
              null !== d && void 0 !== d && Ra();
              break;
            case 3:
              sc();
              B(E);
              B(D);
              break;
            case 5:
              uc(d);
              break;
            case 4:
              sc();
              break;
            case 13:
              B(K);
              break;
            case 19:
              B(K);
              break;
            case 10:
              Db(d);
          }
          c = c.return;
        }
      T = a;
      X = ec(a.current, null);
      U = b;
      S = wd;
      oe = null;
      qe = pe = 1073741823;
      re = null;
      zd = 0;
      se = false;
    }
    function Ke(a, b) {
      do {
        try {
          Cb();
          xc.current = Fc;
          if (zc)
            for (var c = M.memoizedState; null !== c; ) {
              var d = c.queue;
              null !== d && (d.pending = null);
              c = c.next;
            }
          yc = 0;
          O = N = M = null;
          zc = false;
          if (null === X || null === X.return)
            return S = le, oe = b, X = null;
          a: {
            var e = a, f = X.return, g = X, h = b;
            b = U;
            g.effectTag |= 2048;
            g.firstEffect = g.lastEffect = null;
            if (null !== h && "object" === typeof h && "function" === typeof h.then) {
              var k = h;
              if (0 === (g.mode & 2)) {
                var l = g.alternate;
                l ? (g.updateQueue = l.updateQueue, g.memoizedState = l.memoizedState, g.expirationTime = l.expirationTime) : (g.updateQueue = null, g.memoizedState = null);
              }
              var p = 0 !== (K.current & 1), q = f;
              do {
                var v;
                if (v = 13 === q.tag) {
                  var x = q.memoizedState;
                  if (null !== x)
                    v = null !== x.dehydrated ? true : false;
                  else {
                    var P = q.memoizedProps;
                    v = void 0 === P.fallback ? false : true !== P.unstable_avoidThisFallback ? true : p ? false : true;
                  }
                }
                if (v) {
                  var z = q.updateQueue;
                  if (null === z) {
                    var A = /* @__PURE__ */ new Set();
                    A.add(k);
                    q.updateQueue = A;
                  } else
                    z.add(k);
                  if (0 === (q.mode & 2)) {
                    q.effectTag |= 64;
                    g.effectTag &= -2981;
                    if (1 === g.tag)
                      if (null === g.alternate)
                        g.tag = 17;
                      else {
                        var u = Jb(1073741823, null);
                        u.tag = 2;
                        Kb(g, u);
                      }
                    g.expirationTime = 1073741823;
                    break a;
                  }
                  h = void 0;
                  g = b;
                  var r = e.pingCache;
                  null === r ? (r = e.pingCache = new $d(), h = /* @__PURE__ */ new Set(), r.set(k, h)) : (h = r.get(k), void 0 === h && (h = /* @__PURE__ */ new Set(), r.set(k, h)));
                  if (!h.has(g)) {
                    h.add(g);
                    var Ld = Pe.bind(null, e, k, g);
                    k.then(Ld, Ld);
                  }
                  q.effectTag |= 4096;
                  q.expirationTime = b;
                  break a;
                }
                q = q.return;
              } while (null !== q);
              h = Error((xa(g.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + La(g));
            }
            S !== ne && (S = me);
            h = Dd(h, g);
            q = f;
            do {
              switch (q.tag) {
                case 3:
                  k = h;
                  q.effectTag |= 4096;
                  q.expirationTime = b;
                  var $e = ae(q, k, b);
                  Lb(q, $e);
                  break a;
                case 1:
                  k = h;
                  var af = q.type, oc = q.stateNode;
                  if (0 === (q.effectTag & 64) && ("function" === typeof af.getDerivedStateFromError || null !== oc && "function" === typeof oc.componentDidCatch && (null === ee || !ee.has(oc)))) {
                    q.effectTag |= 4096;
                    q.expirationTime = b;
                    var bf = de(q, k, b);
                    Lb(q, bf);
                    break a;
                  }
              }
              q = q.return;
            } while (null !== q);
          }
          X = Qe(X);
        } catch (cf) {
          b = cf;
          continue;
        }
        break;
      } while (1);
    }
    function Ie() {
      var a = ge.current;
      ge.current = Fc;
      return null === a ? Fc : a;
    }
    function Nb(a, b) {
      a < pe && 2 < a && (pe = a);
      null !== b && a < qe && 2 < a && (qe = a, re = b);
    }
    function Ob(a) {
      a > zd && (zd = a);
    }
    function Ne() {
      for (; null !== X; )
        X = Re(X);
    }
    function Je() {
      for (; null !== X && !hb(); )
        X = Re(X);
    }
    function Re(a) {
      var b = Se(a.alternate, a, U);
      a.memoizedProps = a.pendingProps;
      null === b && (b = Qe(a));
      he.current = null;
      return b;
    }
    function Qe(a) {
      X = a;
      do {
        var b = X.alternate;
        a = X.return;
        if (0 === (X.effectTag & 2048)) {
          b = vd(b, X, U);
          if (1 === U || 1 !== X.childExpirationTime) {
            for (var c = 0, d = X.child; null !== d; ) {
              var e = d.expirationTime, f = d.childExpirationTime;
              e > c && (c = e);
              f > c && (c = f);
              d = d.sibling;
            }
            X.childExpirationTime = c;
          }
          if (null !== b)
            return b;
          null !== a && 0 === (a.effectTag & 2048) && (null === a.firstEffect && (a.firstEffect = X.firstEffect), null !== X.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = X.firstEffect), a.lastEffect = X.lastEffect), 1 < X.effectTag && (null !== a.lastEffect ? a.lastEffect.nextEffect = X : a.firstEffect = X, a.lastEffect = X));
        } else {
          b = Cd(X);
          if (null !== b)
            return b.effectTag &= 2047, b;
          null !== a && (a.firstEffect = a.lastEffect = null, a.effectTag |= 2048);
        }
        b = X.sibling;
        if (null !== b)
          return b;
        X = a;
      } while (null !== X);
      S === wd && (S = ne);
      return null;
    }
    function Le(a) {
      var b = a.expirationTime;
      a = a.childExpirationTime;
      return b > a ? b : a;
    }
    function Me(a) {
      var b = nb();
      pb(99, Te.bind(null, a, b));
      return null;
    }
    function Te(a, b) {
      do
        Ge();
      while (null !== ve);
      if ((W & (je | ke)) !== V)
        throw Error(n(327));
      var c = a.finishedWork, d = a.finishedExpirationTime;
      if (null === c)
        return null;
      a.finishedWork = null;
      a.finishedExpirationTime = 0;
      if (c === a.current)
        throw Error(n(177));
      a.callbackNode = null;
      a.callbackExpirationTime = 0;
      a.callbackPriority = 90;
      a.nextKnownPendingLevel = 0;
      var e = Le(c);
      a.firstPendingTime = e;
      d <= a.lastSuspendedTime ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : d <= a.firstSuspendedTime && (a.firstSuspendedTime = d - 1);
      d <= a.lastPingedTime && (a.lastPingedTime = 0);
      d <= a.lastExpiredTime && (a.lastExpiredTime = 0);
      a === T && (X = T = null, U = 0);
      1 < c.effectTag ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, e = c.firstEffect) : e = c : e = c.firstEffect;
      if (null !== e) {
        var f = W;
        W |= ke;
        he.current = null;
        Y = e;
        do
          try {
            Ue();
          } catch (z) {
            if (null === Y)
              throw Error(n(330));
            Hd(Y, z);
            Y = Y.nextEffect;
          }
        while (null !== Y);
        Y = e;
        do
          try {
            for (var g = a, h = b; null !== Y; ) {
              var k = Y.effectTag;
              if (k & 128) {
                var l = Y.alternate;
                if (null !== l) {
                  var p = l.ref;
                  null !== p && ("function" === typeof p ? p(null) : p.current = null);
                }
              }
              switch (k & 1038) {
                case 2:
                  Td(Y);
                  Y.effectTag &= -3;
                  break;
                case 6:
                  Td(Y);
                  Y.effectTag &= -3;
                  Wd(Y.alternate, Y);
                  break;
                case 1024:
                  Y.effectTag &= -1025;
                  break;
                case 1028:
                  Y.effectTag &= -1025;
                  Wd(Y.alternate, Y);
                  break;
                case 4:
                  Wd(Y.alternate, Y);
                  break;
                case 8:
                  var q = Y;
                  Qd(g, q, h);
                  Rd(q);
              }
              Y = Y.nextEffect;
            }
          } catch (z) {
            if (null === Y)
              throw Error(n(330));
            Hd(Y, z);
            Y = Y.nextEffect;
          }
        while (null !== Y);
        a.current = c;
        Y = e;
        do
          try {
            for (k = a; null !== Y; ) {
              var v = Y.effectTag;
              v & 36 && Nd(k, Y.alternate, Y);
              if (v & 128) {
                l = void 0;
                var x = Y.ref;
                if (null !== x) {
                  var P = Y.stateNode;
                  switch (Y.tag) {
                    case 5:
                      l = Fa(P);
                      break;
                    default:
                      l = P;
                  }
                  "function" === typeof x ? x(l) : x.current = l;
                }
              }
              Y = Y.nextEffect;
            }
          } catch (z) {
            if (null === Y)
              throw Error(n(330));
            Hd(Y, z);
            Y = Y.nextEffect;
          }
        while (null !== Y);
        Y = null;
        ib();
        W = f;
      } else
        a.current = c;
      if (ue)
        ue = false, ve = a, we = b;
      else
        for (Y = e; null !== Y; )
          b = Y.nextEffect, Y.nextEffect = null, Y = b;
      b = a.firstPendingTime;
      0 === b && (ee = null);
      1073741823 === b ? a === ze ? ye++ : (ye = 0, ze = a) : ye = 0;
      "function" === typeof Ve && Ve(c.stateNode, d);
      Z(a);
      if (be)
        throw be = false, a = ce, ce = null, a;
      if ((W & ie) !== V)
        return null;
      tb();
      return null;
    }
    function Ue() {
      for (; null !== Y; ) {
        var a = Y.effectTag;
        0 !== (a & 256) && Jd(Y.alternate, Y);
        0 === (a & 512) || ue || (ue = true, qb(97, function() {
          Ge();
          return null;
        }));
        Y = Y.nextEffect;
      }
    }
    function Ge() {
      if (90 !== we) {
        var a = 97 < we ? 97 : we;
        we = 90;
        return pb(a, We);
      }
    }
    function We() {
      if (null === ve)
        return false;
      var a = ve;
      ve = null;
      if ((W & (je | ke)) !== V)
        throw Error(n(331));
      var b = W;
      W |= ke;
      for (a = a.current.firstEffect; null !== a; ) {
        try {
          var c = a;
          if (0 !== (c.effectTag & 512))
            switch (c.tag) {
              case 0:
              case 11:
              case 15:
              case 22:
                Kd(5, c), Md(5, c);
            }
        } catch (d) {
          if (null === a)
            throw Error(n(330));
          Hd(a, d);
        }
        c = a.nextEffect;
        a.nextEffect = null;
        a = c;
      }
      W = b;
      tb();
      return true;
    }
    function Xe(a, b, c) {
      b = Dd(c, b);
      b = ae(a, b, 1073741823);
      Kb(a, b);
      a = Be(a, 1073741823);
      null !== a && Z(a);
    }
    function Hd(a, b) {
      if (3 === a.tag)
        Xe(a, a, b);
      else
        for (var c = a.return; null !== c; ) {
          if (3 === c.tag) {
            Xe(c, a, b);
            break;
          } else if (1 === c.tag) {
            var d = c.stateNode;
            if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d.componentDidCatch && (null === ee || !ee.has(d))) {
              a = Dd(b, a);
              a = de(c, a, 1073741823);
              Kb(c, a);
              c = Be(c, 1073741823);
              null !== c && Z(c);
              break;
            }
          }
          c = c.return;
        }
    }
    function Pe(a, b, c) {
      var d = a.pingCache;
      null !== d && d.delete(b);
      T === a && U === c ? S === yd || S === xd && 1073741823 === pe && G() - Xd < te ? He(a, U) : se = true : Ee(a, c) && (b = a.lastPingedTime, 0 !== b && b < c || (a.lastPingedTime = c, Z(a)));
    }
    function Zd(a, b) {
      var c = a.stateNode;
      null !== c && c.delete(b);
      b = 0;
      0 === b && (b = Tb(), b = Ub(b, a, null));
      a = Be(a, b);
      null !== a && Z(a);
    }
    var Se;
    Se = function(a, b, c) {
      var d = b.expirationTime;
      if (null !== a)
        if (a.memoizedProps !== b.pendingProps || E.current)
          I = true;
        else {
          if (d < c) {
            I = false;
            switch (b.tag) {
              case 3:
                kd(b);
                break;
              case 5:
                tc(b);
                break;
              case 1:
                F(b.type) && Ua(b);
                break;
              case 4:
                rc(b, b.stateNode.containerInfo);
                break;
              case 10:
                d = b.memoizedProps.value;
                var e = b.type._context;
                C(yb, e._currentValue2);
                e._currentValue2 = d;
                break;
              case 13:
                if (null !== b.memoizedState) {
                  d = b.child.childExpirationTime;
                  if (0 !== d && d >= c)
                    return md(a, b, c);
                  C(K, K.current & 1);
                  b = cd(a, b, c);
                  return null !== b ? b.sibling : null;
                }
                C(K, K.current & 1);
                break;
              case 19:
                d = b.childExpirationTime >= c;
                if (0 !== (a.effectTag & 64)) {
                  if (d)
                    return pd(a, b, c);
                  b.effectTag |= 64;
                }
                e = b.memoizedState;
                null !== e && (e.rendering = null, e.tail = null);
                C(K, K.current);
                if (!d)
                  return null;
            }
            return cd(a, b, c);
          }
          I = false;
        }
      else
        I = false;
      b.expirationTime = 0;
      switch (b.tag) {
        case 2:
          d = b.type;
          null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);
          a = b.pendingProps;
          e = Qa(b, D.current);
          Fb(b, c);
          e = Bc(null, b, d, a, e, c);
          b.effectTag |= 1;
          if ("object" === typeof e && null !== e && "function" === typeof e.render && void 0 === e.$$typeof) {
            b.tag = 1;
            b.memoizedState = null;
            b.updateQueue = null;
            if (F(d)) {
              var f = true;
              Ua(b);
            } else
              f = false;
            b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;
            Hb(b);
            var g = d.getDerivedStateFromProps;
            "function" === typeof g && Sb(b, d, g, a);
            e.updater = Wb;
            b.stateNode = e;
            e._reactInternalFiber = b;
            $b(b, d, a, c);
            b = jd(null, b, d, true, f, c);
          } else
            b.tag = 0, R(null, b, e, c), b = b.child;
          return b;
        case 16:
          a: {
            e = b.elementType;
            null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);
            a = b.pendingProps;
            wa(e);
            if (1 !== e._status)
              throw e._result;
            e = e._result;
            b.type = e;
            f = b.tag = Ye(e);
            a = H(e, a);
            switch (f) {
              case 0:
                b = gd(null, b, e, a, c);
                break a;
              case 1:
                b = id(null, b, e, a, c);
                break a;
              case 11:
                b = bd(null, b, e, a, c);
                break a;
              case 14:
                b = dd(null, b, e, H(e.type, a), d, c);
                break a;
            }
            throw Error(n(306, e, ""));
          }
          return b;
        case 0:
          return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : H(d, e), gd(a, b, d, e, c);
        case 1:
          return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : H(d, e), id(a, b, d, e, c);
        case 3:
          kd(b);
          d = b.updateQueue;
          if (null === a || null === d)
            throw Error(n(282));
          d = b.pendingProps;
          e = b.memoizedState;
          e = null !== e ? e.element : null;
          Ib(a, b);
          Mb(b, d, null, c);
          d = b.memoizedState.element;
          d === e ? b = cd(a, b, c) : (R(a, b, d, c), b = b.child);
          return b;
        case 5:
          return tc(b), d = b.pendingProps.children, hd(a, b), R(a, b, d, c), b = b.child, b;
        case 6:
          return null;
        case 13:
          return md(a, b, c);
        case 4:
          return rc(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = jc(b, null, d, c) : R(a, b, d, c), b.child;
        case 11:
          return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : H(d, e), bd(a, b, d, e, c);
        case 7:
          return R(a, b, b.pendingProps, c), b.child;
        case 8:
          return R(
            a,
            b,
            b.pendingProps.children,
            c
          ), b.child;
        case 12:
          return R(a, b, b.pendingProps.children, c), b.child;
        case 10:
          a: {
            d = b.type._context;
            e = b.pendingProps;
            g = b.memoizedProps;
            f = e.value;
            var h = b.type._context;
            C(yb, h._currentValue2);
            h._currentValue2 = f;
            if (null !== g)
              if (h = g.value, f = vb(h, f) ? 0 : ("function" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0, 0 === f) {
                if (g.children === e.children && !E.current) {
                  b = cd(a, b, c);
                  break a;
                }
              } else
                for (h = b.child, null !== h && (h.return = b); null !== h; ) {
                  var k = h.dependencies;
                  if (null !== k) {
                    g = h.child;
                    for (var l = k.firstContext; null !== l; ) {
                      if (l.context === d && 0 !== (l.observedBits & f)) {
                        1 === h.tag && (l = Jb(c, null), l.tag = 2, Kb(h, l));
                        h.expirationTime < c && (h.expirationTime = c);
                        l = h.alternate;
                        null !== l && l.expirationTime < c && (l.expirationTime = c);
                        Eb(h.return, c);
                        k.expirationTime < c && (k.expirationTime = c);
                        break;
                      }
                      l = l.next;
                    }
                  } else
                    g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;
                  if (null !== g)
                    g.return = h;
                  else
                    for (g = h; null !== g; ) {
                      if (g === b) {
                        g = null;
                        break;
                      }
                      h = g.sibling;
                      if (null !== h) {
                        h.return = g.return;
                        g = h;
                        break;
                      }
                      g = g.return;
                    }
                  h = g;
                }
            R(a, b, e.children, c);
            b = b.child;
          }
          return b;
        case 9:
          return e = b.type, f = b.pendingProps, d = f.children, Fb(b, c), e = J(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, R(a, b, d, c), b.child;
        case 14:
          return e = b.type, f = H(e, b.pendingProps), f = H(e.type, f), dd(a, b, e, f, d, c);
        case 15:
          return fd(a, b, b.type, b.pendingProps, d, c);
        case 17:
          return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : H(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, F(d) ? (a = true, Ua(b)) : a = false, Fb(b, c), Yb(b, d, e), $b(b, d, e, c), jd(
            null,
            b,
            d,
            true,
            a,
            c
          );
        case 19:
          return pd(a, b, c);
      }
      throw Error(n(156, b.tag));
    };
    var Ve = null;
    var Pd = null;
    function Ze(a) {
      if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)
        return false;
      var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
      if (b.isDisabled || !b.supportsFiber)
        return true;
      try {
        var c = b.inject(a);
        Ve = function(a2) {
          try {
            b.onCommitFiberRoot(c, a2, void 0, 64 === (a2.current.effectTag & 64));
          } catch (e) {
          }
        };
        Pd = function(a2) {
          try {
            b.onCommitFiberUnmount(c, a2);
          } catch (e) {
          }
        };
      } catch (d) {
      }
      return true;
    }
    function df(a, b, c, d) {
      this.tag = a;
      this.key = c;
      this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
      this.index = 0;
      this.ref = null;
      this.pendingProps = b;
      this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
      this.mode = d;
      this.effectTag = 0;
      this.lastEffect = this.firstEffect = this.nextEffect = null;
      this.childExpirationTime = this.expirationTime = 0;
      this.alternate = null;
    }
    function ed(a) {
      a = a.prototype;
      return !(!a || !a.isReactComponent);
    }
    function Ye(a) {
      if ("function" === typeof a)
        return ed(a) ? 1 : 0;
      if (void 0 !== a && null !== a) {
        a = a.$$typeof;
        if (a === oa)
          return 11;
        if (a === ra)
          return 14;
      }
      return 2;
    }
    function ec(a, b) {
      var c = a.alternate;
      null === c ? (c = new df(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);
      c.childExpirationTime = a.childExpirationTime;
      c.expirationTime = a.expirationTime;
      c.child = a.child;
      c.memoizedProps = a.memoizedProps;
      c.memoizedState = a.memoizedState;
      c.updateQueue = a.updateQueue;
      b = a.dependencies;
      c.dependencies = null === b ? null : {
        expirationTime: b.expirationTime,
        firstContext: b.firstContext,
        responders: b.responders
      };
      c.sibling = a.sibling;
      c.index = a.index;
      c.ref = a.ref;
      return c;
    }
    function gc(a, b, c, d, e, f) {
      var g = 2;
      d = a;
      if ("function" === typeof a)
        ed(a) && (g = 1);
      else if ("string" === typeof a)
        g = 5;
      else
        a:
          switch (a) {
            case ia:
              return ic(c.children, e, f, b);
            case na:
              g = 8;
              e |= 7;
              break;
            case ja:
              g = 8;
              e |= 1;
              break;
            case ka:
              return a = new df(12, c, b, e | 8), a.elementType = ka, a.type = ka, a.expirationTime = f, a;
            case pa:
              return a = new df(13, c, b, e), a.type = pa, a.elementType = pa, a.expirationTime = f, a;
            case qa:
              return a = new df(19, c, b, e), a.elementType = qa, a.expirationTime = f, a;
            default:
              if ("object" === typeof a && null !== a)
                switch (a.$$typeof) {
                  case la:
                    g = 10;
                    break a;
                  case ma:
                    g = 9;
                    break a;
                  case oa:
                    g = 11;
                    break a;
                  case ra:
                    g = 14;
                    break a;
                  case sa:
                    g = 16;
                    d = null;
                    break a;
                  case ta:
                    g = 22;
                    break a;
                }
              throw Error(n(130, null == a ? a : typeof a, ""));
          }
      b = new df(g, c, b, e);
      b.elementType = a;
      b.type = d;
      b.expirationTime = f;
      return b;
    }
    function ic(a, b, c, d) {
      a = new df(7, a, d, b);
      a.expirationTime = c;
      return a;
    }
    function fc(a, b, c) {
      a = new df(6, a, null, b);
      a.expirationTime = c;
      return a;
    }
    function hc(a, b, c) {
      b = new df(4, null !== a.children ? a.children : [], a.key, b);
      b.expirationTime = c;
      b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };
      return b;
    }
    function ef(a, b, c) {
      this.tag = b;
      this.current = null;
      this.containerInfo = a;
      this.pingCache = this.pendingChildren = null;
      this.finishedExpirationTime = 0;
      this.finishedWork = null;
      this.timeoutHandle = -1;
      this.pendingContext = this.context = null;
      this.hydrate = c;
      this.callbackNode = null;
      this.callbackPriority = 90;
      this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0;
    }
    function ff(a, b, c) {
      a = new ef(a, b, c);
      b = new df(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
      a.current = b;
      b.stateNode = a;
      Hb(b);
      return a;
    }
    function Ee(a, b) {
      var c = a.firstSuspendedTime;
      a = a.lastSuspendedTime;
      return 0 !== c && c >= b && a <= b;
    }
    function Ad(a, b) {
      var c = a.firstSuspendedTime, d = a.lastSuspendedTime;
      c < b && (a.firstSuspendedTime = b);
      if (d > b || 0 === c)
        a.lastSuspendedTime = b;
      b <= a.lastPingedTime && (a.lastPingedTime = 0);
      b <= a.lastExpiredTime && (a.lastExpiredTime = 0);
    }
    function Bd(a, b) {
      b > a.firstPendingTime && (a.firstPendingTime = b);
      var c = a.firstSuspendedTime;
      0 !== c && (b >= c ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : b >= a.lastSuspendedTime && (a.lastSuspendedTime = b + 1), b > a.nextKnownPendingLevel && (a.nextKnownPendingLevel = b));
    }
    var gf = null;
    function hf(a) {
      if (null === gf)
        try {
          var b = ("require" + Math.random()).slice(0, 7);
          gf = (module && module[b])("timers").setImmediate;
        } catch (c) {
          gf = function(a2) {
            var b2 = new MessageChannel();
            b2.port1.onmessage = a2;
            b2.port2.postMessage(void 0);
          };
        }
      return gf(a);
    }
    function jf(a, b, c, d) {
      var e = b.current, f = Tb(), g = Qb.suspense;
      f = Ub(f, e, g);
      a:
        if (c) {
          c = c._reactInternalFiber;
          b: {
            if (ya(c) !== c || 1 !== c.tag)
              throw Error(n(170));
            var h = c;
            do {
              switch (h.tag) {
                case 3:
                  h = h.stateNode.context;
                  break b;
                case 1:
                  if (F(h.type)) {
                    h = h.stateNode.__reactInternalMemoizedMergedChildContext;
                    break b;
                  }
              }
              h = h.return;
            } while (null !== h);
            throw Error(n(171));
          }
          if (1 === c.tag) {
            var k = c.type;
            if (F(k)) {
              c = Ta(c, k, h);
              break a;
            }
          }
          c = h;
        } else
          c = Oa;
      null === b.context ? b.context = c : b.pendingContext = c;
      b = Jb(f, g);
      b.payload = { element: a };
      d = void 0 === d ? null : d;
      null !== d && (b.callback = d);
      Kb(e, b);
      Vb(e, f);
      return f;
    }
    var kf = t.IsSomeRendererActing;
    var lf = "function" === typeof m.unstable_flushAllWithoutAsserting;
    var mf = m.unstable_flushAllWithoutAsserting || function() {
      for (var a = false; Ge(); )
        a = true;
      return a;
    };
    function nf(a) {
      try {
        mf(), hf(function() {
          mf() ? nf(a) : a();
        });
      } catch (b) {
        a(b);
      }
    }
    var of = 0;
    var pf = false;
    var qf = { createNodeMock: function() {
      return null;
    } };
    function rf(a) {
      if (a.isHidden)
        return null;
      switch (a.tag) {
        case "TEXT":
          return a.text;
        case "INSTANCE":
          var b = a.props;
          var c = ["children"];
          if (null == b)
            b = {};
          else {
            var d = {}, e = Object.keys(b), f;
            for (f = 0; f < e.length; f++) {
              var g = e[f];
              0 <= c.indexOf(g) || (d[g] = b[g]);
            }
            b = d;
          }
          c = null;
          if (a.children && a.children.length)
            for (d = 0; d < a.children.length; d++)
              e = rf(a.children[d]), null !== e && (null === c ? c = [e] : c.push(e));
          a = { type: a.type, props: b, children: c };
          Object.defineProperty(a, "$$typeof", { value: Symbol.for("react.test.json") });
          return a;
        default:
          throw Error("Unexpected node type in toJSON: " + a.tag);
      }
    }
    function sf(a) {
      if (!a)
        return null;
      a = tf(a);
      return 0 === a.length ? null : 1 === a.length ? uf(a[0]) : vf(a.map(uf));
    }
    function tf(a) {
      for (var b = []; null != a; )
        b.push(a), a = a.sibling;
      return b;
    }
    function vf(a) {
      var b = [];
      for (a = [{ i: 0, array: a }]; a.length; )
        for (var c = a.pop(); c.i < c.array.length; ) {
          var d = c.array[c.i];
          c.i += 1;
          if (Array.isArray(d)) {
            a.push(c);
            a.push({ i: 0, array: d });
            break;
          }
          b.push(d);
        }
      return b;
    }
    function uf(a) {
      if (null == a)
        return null;
      switch (a.tag) {
        case 3:
          return sf(a.child);
        case 4:
          return sf(a.child);
        case 1:
          return { nodeType: "component", type: a.type, props: aa({}, a.memoizedProps), instance: a.stateNode, rendered: sf(a.child) };
        case 0:
        case 15:
          return { nodeType: "component", type: a.type, props: aa({}, a.memoizedProps), instance: null, rendered: sf(a.child) };
        case 22:
          return { nodeType: "block", type: a.type, props: aa({}, a.memoizedProps), instance: null, rendered: sf(a.child) };
        case 5:
          return { nodeType: "host", type: a.type, props: aa(
            {},
            a.memoizedProps
          ), instance: null, rendered: vf(tf(a.child).map(uf)) };
        case 6:
          return a.stateNode.text;
        case 7:
        case 10:
        case 9:
        case 8:
        case 12:
        case 11:
        case 14:
        case 17:
        case 21:
          return sf(a.child);
        default:
          throw Error(n(214, a.tag));
      }
    }
    var wf = /* @__PURE__ */ new Set([0, 1, 5, 11, 14, 15, 22, 3]);
    function xf(a) {
      var b = [], c = a;
      if (null === c.child)
        return b;
      c.child.return = c;
      c = c.child;
      a:
        for (; ; ) {
          var d = false;
          wf.has(c.tag) ? b.push(yf(c)) : 6 === c.tag ? b.push("" + c.memoizedProps) : d = true;
          if (d && null !== c.child)
            c.child.return = c, c = c.child;
          else {
            for (; null === c.sibling; ) {
              if (c.return === a)
                break a;
              c = c.return;
            }
            c.sibling.return = c.return;
            c = c.sibling;
          }
        }
      return b;
    }
    var Bf = function() {
      function a(a2) {
        if (!wf.has(a2.tag))
          throw Error(n(225, a2.tag));
        this._fiber = a2;
      }
      var b = a.prototype;
      b._currentFiber = function() {
        var a2 = Aa(this._fiber);
        if (null === a2)
          throw Error(n(224));
        return a2;
      };
      b.find = function(a2) {
        return zf(this.findAll(a2, { deep: false }), "matching custom predicate: " + a2.toString());
      };
      b.findByType = function(a2) {
        return zf(this.findAllByType(a2, { deep: false }), 'with node type: "' + (a2.displayName || a2.name) + '"');
      };
      b.findByProps = function(a2) {
        return zf(this.findAllByProps(a2, { deep: false }), "with props: " + JSON.stringify(a2));
      };
      b.findAll = function(a2) {
        return Af(this, a2, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : null);
      };
      b.findAllByType = function(a2) {
        return Af(this, function(b2) {
          return b2.type === a2;
        }, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : null);
      };
      b.findAllByProps = function(a2) {
        return Af(this, function(b2) {
          var c;
          if (c = b2.props)
            a: {
              for (var d in a2)
                if (b2.props[d] !== a2[d]) {
                  c = false;
                  break a;
                }
              c = true;
            }
          return c;
        }, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : null);
      };
      ea(a, [{ key: "instance", get: function() {
        return 5 === this._fiber.tag ? Fa(this._fiber.stateNode) : this._fiber.stateNode;
      } }, { key: "type", get: function() {
        return this._fiber.type;
      } }, { key: "props", get: function() {
        return this._currentFiber().memoizedProps;
      } }, { key: "parent", get: function() {
        for (var a2 = this._fiber.return; null !== a2; ) {
          if (wf.has(a2.tag)) {
            if (3 === a2.tag && 2 > xf(a2).length)
              break;
            return yf(a2);
          }
          a2 = a2.return;
        }
        return null;
      } }, { key: "children", get: function() {
        return xf(this._currentFiber());
      } }]);
      return a;
    }();
    function Af(a, b, c) {
      var d = c ? c.deep : true, e = [];
      if (b(a) && (e.push(a), !d))
        return e;
      a.children.forEach(function(a2) {
        "string" !== typeof a2 && e.push.apply(e, Af(a2, b, c));
      });
      return e;
    }
    function zf(a, b) {
      if (1 === a.length)
        return a[0];
      throw Error((0 === a.length ? "No instances found " : "Expected 1 but found " + a.length + " instances ") + b);
    }
    var Cf = { _Scheduler: ba, create: function(a, b) {
      var c = qf.createNodeMock, d = false;
      "object" === typeof b && null !== b && ("function" === typeof b.createNodeMock && (c = b.createNodeMock), true === b.unstable_isConcurrent && (d = true));
      var e = { children: [], createNodeMock: c, tag: "CONTAINER" }, f = ff(e, d ? 2 : 0, false);
      if (null == f)
        throw Error(n(215));
      jf(a, f, null, null);
      a = { _Scheduler: ba, root: void 0, toJSON: function() {
        if (null == f || null == f.current || null == e || 0 === e.children.length)
          return null;
        if (1 === e.children.length)
          return rf(e.children[0]);
        if (2 === e.children.length && true === e.children[0].isHidden && false === e.children[1].isHidden)
          return rf(e.children[1]);
        var a2 = null;
        if (e.children && e.children.length)
          for (var b2 = 0; b2 < e.children.length; b2++) {
            var c2 = rf(e.children[b2]);
            null !== c2 && (null === a2 ? a2 = [c2] : a2.push(c2));
          }
        return a2;
      }, toTree: function() {
        return null == f || null == f.current ? null : uf(f.current);
      }, update: function(a2) {
        null != f && null != f.current && jf(a2, f, null, null);
      }, unmount: function() {
        null != f && null != f.current && (jf(null, f, null, null), f = e = null);
      }, getInstance: function() {
        if (null == f || null == f.current)
          return null;
        a: {
          var a2 = f.current;
          if (a2.child)
            switch (a2.child.tag) {
              case 5:
                a2 = Fa(a2.child.stateNode);
                break a;
              default:
                a2 = a2.child.stateNode;
            }
          else
            a2 = null;
        }
        return a2;
      }, unstable_flushSync: function(a2) {
        a: {
          if ((W & (je | ke)) !== V)
            throw Error(n(187));
          var b2 = W;
          W |= 1;
          try {
            var c2 = pb(99, a2.bind(null, void 0));
            break a;
          } finally {
            W = b2, tb();
          }
          c2 = void 0;
        }
        return c2;
      } };
      Object.defineProperty(a, "root", { configurable: true, enumerable: true, get: function() {
        if (null === f)
          throw Error("Can't access .root on unmounted test renderer");
        var a2 = xf(f.current);
        if (0 === a2.length)
          throw Error("Can't access .root on unmounted test renderer");
        return 1 === a2.length ? a2[0] : yf(f.current);
      } });
      return a;
    }, unstable_batchedUpdates: Oe, act: function(a) {
      function b() {
        of--;
        kf.current = c;
      }
      false === pf && (pf = true, console.error("act(...) is not supported in production builds of React, and might not behave as expected."));
      of++;
      var c = kf.current;
      kf.current = true;
      try {
        var d = Oe(a);
      } catch (e) {
        throw b(), e;
      }
      if (null !== d && "object" === typeof d && "function" === typeof d.then)
        return { then: function(a2, f) {
          d.then(function() {
            1 < of || true === lf && true === c ? (b(), a2()) : nf(function(c2) {
              b();
              c2 ? f(c2) : a2();
            });
          }, function(a3) {
            b();
            f(a3);
          });
        } };
      try {
        1 !== of || false !== lf && false !== c || mf(), b();
      } catch (e) {
        throw b(), e;
      }
      return { then: function(a2) {
        a2();
      } };
    } };
    var Df = /* @__PURE__ */ new WeakMap();
    function yf(a) {
      var b = Df.get(a);
      void 0 === b && null !== a.alternate && (b = Df.get(a.alternate));
      void 0 === b && (b = new Bf(a), Df.set(a, b));
      return b;
    }
    (function(a) {
      var b = a.findFiberByHostInstance;
      return Ze(aa({}, a, { overrideHookState: null, overrideProps: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: t.ReactCurrentDispatcher, findHostInstanceByFiber: function(a2) {
        a2 = Ba(a2);
        return null === a2 ? null : a2.stateNode;
      }, findFiberByHostInstance: function(a2) {
        return b ? b(a2) : null;
      }, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null }));
    })({ findFiberByHostInstance: function() {
      throw Error("TestRenderer does not support findFiberByHostInstance()");
    }, bundleType: 0, version: "16.14.0", rendererPackageName: "react-test-renderer" });
    module.exports = Cf.default || Cf;
  }
});

// node_modules/react-test-renderer/index.js
var require_react_test_renderer = __commonJS({
  "node_modules/react-test-renderer/index.js"(exports, module) {
    "use strict";
    if (true) {
      module.exports = require_react_test_renderer_production_min();
    } else {
      module.exports = null;
    }
  }
});

// node_modules/load-script/index.js
var require_load_script = __commonJS({
  "node_modules/load-script/index.js"(exports, module) {
    module.exports = function load(src, opts, cb) {
      var head = document.head || document.getElementsByTagName("head")[0];
      var script = document.createElement("script");
      if (typeof opts === "function") {
        cb = opts;
        opts = {};
      }
      opts = opts || {};
      cb = cb || function() {
      };
      script.type = opts.type || "text/javascript";
      script.charset = opts.charset || "utf8";
      script.async = "async" in opts ? !!opts.async : true;
      script.src = src;
      if (opts.attrs) {
        setAttributes(script, opts.attrs);
      }
      if (opts.text) {
        script.text = "" + opts.text;
      }
      var onend = "onload" in script ? stdOnEnd : ieOnEnd;
      onend(script, cb);
      if (!script.onload) {
        stdOnEnd(script, cb);
      }
      head.appendChild(script);
    };
    function setAttributes(script, attrs) {
      for (var attr in attrs) {
        script.setAttribute(attr, attrs[attr]);
      }
    }
    function stdOnEnd(script, cb) {
      script.onload = function() {
        this.onerror = this.onload = null;
        cb(null, script);
      };
      script.onerror = function() {
        this.onerror = this.onload = null;
        cb(new Error("Failed to load " + this.src), script);
      };
    }
    function ieOnEnd(script, cb) {
      script.onreadystatechange = function() {
        if (this.readyState != "complete" && this.readyState != "loaded")
          return;
        this.onreadystatechange = null;
        cb(null, script);
      };
    }
  }
});

// node_modules/deepmerge/dist/cjs.js
var require_cjs = __commonJS({
  "node_modules/deepmerge/dist/cjs.js"(exports, module) {
    "use strict";
    var isMergeableObject = function isMergeableObject2(value) {
      return isNonNullObject(value) && !isSpecial(value);
    };
    function isNonNullObject(value) {
      return !!value && typeof value === "object";
    }
    function isSpecial(value) {
      var stringValue = Object.prototype.toString.call(value);
      return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
    }
    var canUseSymbol = typeof Symbol === "function" && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
    function isReactElement(value) {
      return value.$$typeof === REACT_ELEMENT_TYPE;
    }
    function emptyTarget(val) {
      return Array.isArray(val) ? [] : {};
    }
    function cloneUnlessOtherwiseSpecified(value, options) {
      return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;
    }
    function defaultArrayMerge(target, source, options) {
      return target.concat(source).map(function(element) {
        return cloneUnlessOtherwiseSpecified(element, options);
      });
    }
    function getMergeFunction(key, options) {
      if (!options.customMerge) {
        return deepmerge;
      }
      var customMerge = options.customMerge(key);
      return typeof customMerge === "function" ? customMerge : deepmerge;
    }
    function getEnumerableOwnPropertySymbols(target) {
      return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol) {
        return Object.propertyIsEnumerable.call(target, symbol);
      }) : [];
    }
    function getKeys(target) {
      return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
    }
    function propertyIsOnObject(object, property) {
      try {
        return property in object;
      } catch (_) {
        return false;
      }
    }
    function propertyIsUnsafe(target, key) {
      return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
    }
    function mergeObject(target, source, options) {
      var destination = {};
      if (options.isMergeableObject(target)) {
        getKeys(target).forEach(function(key) {
          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
        });
      }
      getKeys(source).forEach(function(key) {
        if (propertyIsUnsafe(target, key)) {
          return;
        }
        if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
          destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
        } else {
          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
        }
      });
      return destination;
    }
    function deepmerge(target, source, options) {
      options = options || {};
      options.arrayMerge = options.arrayMerge || defaultArrayMerge;
      options.isMergeableObject = options.isMergeableObject || isMergeableObject;
      options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
      var sourceIsArray = Array.isArray(source);
      var targetIsArray = Array.isArray(target);
      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
      if (!sourceAndTargetTypesMatch) {
        return cloneUnlessOtherwiseSpecified(source, options);
      } else if (sourceIsArray) {
        return options.arrayMerge(target, source, options);
      } else {
        return mergeObject(target, source, options);
      }
    }
    deepmerge.all = function deepmergeAll(array, options) {
      if (!Array.isArray(array)) {
        throw new Error("first argument should be an array");
      }
      return array.reduce(function(prev, next) {
        return deepmerge(prev, next, options);
      }, {});
    };
    var deepmerge_1 = deepmerge;
    module.exports = deepmerge_1;
  }
});

// test/players/Kaltura.js
var import_react3 = __toESM(require_react());
var import_react_test_renderer2 = __toESM(require_react_test_renderer());
import { test as test2 } from "zora";
import sinon2 from "sinon";

// test/helpers/server-safe-globals.js
var Element = class _Element extends EventTarget {
  style = {};
  querySelector = () => new _Element();
  contains = () => true;
};
var MediaStream = class {
};
var document2 = {
  head: new Element(),
  body: new Element(),
  createElement: () => new Element(),
  getElementById: () => new Element()
};
var globalThisShim = {
  location: { origin: "origin" },
  navigator: {},
  URL: { createObjectURL: () => "mockObjectURL" },
  document: document2,
  MediaStream
};
globalThis.document = document2;
globalThis.window = globalThisShim;
Object.assign(globalThis, globalThisShim);

// test/helpers/helpers.js
var import_react = __toESM(require_react());
var import_react_test_renderer = __toESM(require_react_test_renderer());
import { test } from "zora";
import sinon from "sinon";
function testPlayerMethods(Player, methods, props) {
  for (const method of Object.keys(methods)) {
    test(`${method}()`, (t) => {
      const callPlayer2 = sinon.fake();
      const instance = (0, import_react_test_renderer.create)(/* @__PURE__ */ import_react.default.createElement(Player, { ...props })).getInstance();
      t.truthy(instance[method]);
      instance.callPlayer = callPlayer2;
      instance[method]();
      if (methods[method]) {
        t.ok(callPlayer2.calledWith(methods[method]));
      }
      sinon.restore();
    });
  }
}

// src/utils.js
var import_load_script = __toESM(require_load_script());
var import_deepmerge = __toESM(require_cjs());
function getGlobal(key) {
  if (window[key]) {
    return window[key];
  }
  if (window.exports && window.exports[key]) {
    return window.exports[key];
  }
  if (window.module && window.module.exports && window.module.exports[key]) {
    return window.module.exports[key];
  }
  return null;
}
var requests = {};
var getSDK = enableStubOn(function getSDK2(url, sdkGlobal, sdkReady = null, isLoaded = () => true, fetchScript = import_load_script.default) {
  const existingGlobal = getGlobal(sdkGlobal);
  if (existingGlobal && isLoaded(existingGlobal)) {
    return Promise.resolve(existingGlobal);
  }
  return new Promise((resolve, reject) => {
    if (requests[url]) {
      requests[url].push({ resolve, reject });
      return;
    }
    requests[url] = [{ resolve, reject }];
    const onLoaded = (sdk) => {
      requests[url].forEach((request) => request.resolve(sdk));
    };
    if (sdkReady) {
      const previousOnReady = window[sdkReady];
      window[sdkReady] = function() {
        if (previousOnReady)
          previousOnReady();
        onLoaded(getGlobal(sdkGlobal));
      };
    }
    fetchScript(url, (err) => {
      if (err) {
        requests[url].forEach((request) => request.reject(err));
        requests[url] = null;
      } else if (!sdkReady) {
        onLoaded(getGlobal(sdkGlobal));
      }
    });
  });
});
function callPlayer(method, ...args) {
  if (!this.player || !this.player[method]) {
    let message = `ReactPlayer: ${this.constructor.displayName} player could not call %c${method}%c \u2013 `;
    if (!this.player) {
      message += "The player was not available";
    } else if (!this.player[method]) {
      message += "The method was not available";
    }
    console.warn(message, "font-weight: bold", "");
    return null;
  }
  return this.player[method](...args);
}
function isMediaStream(url) {
  return typeof window !== "undefined" && typeof window.MediaStream !== "undefined" && url instanceof window.MediaStream;
}
function isBlobUrl(url) {
  return /^blob:/.test(url);
}
function enableStubOn(fn) {
  if (true) {
    const wrap = (...args) => wrap.stub(...args);
    wrap.stub = fn;
    return wrap;
  }
  return fn;
}

// src/players/Kaltura.js
var import_react2 = __toESM(require_react());

// src/patterns.js
var MATCH_URL_YOUTUBE = /(?:youtu\.be\/|youtube(?:-nocookie|education)?\.com\/(?:embed\/|v\/|watch\/|watch\?v=|watch\?.+&v=|shorts\/|live\/))((\w|-){11})|youtube\.com\/playlist\?list=|youtube\.com\/user\//;
var MATCH_URL_SOUNDCLOUD = /(?:soundcloud\.com|snd\.sc)\/[^.]+$/;
var MATCH_URL_VIMEO = /vimeo\.com\/(?!progressive_redirect).+/;
var MATCH_URL_FACEBOOK = /^https?:\/\/(www\.)?facebook\.com.*\/(video(s)?|watch|story)(\.php?|\/).+$/;
var MATCH_URL_FACEBOOK_WATCH = /^https?:\/\/fb\.watch\/.+$/;
var MATCH_URL_STREAMABLE = /streamable\.com\/([a-z0-9]+)$/;
var MATCH_URL_WISTIA = /(?:wistia\.(?:com|net)|wi\.st)\/(?:medias|embed)\/(?:iframe\/)?([^?]+)/;
var MATCH_URL_TWITCH_VIDEO = /(?:www\.|go\.)?twitch\.tv\/videos\/(\d+)($|\?)/;
var MATCH_URL_TWITCH_CHANNEL = /(?:www\.|go\.)?twitch\.tv\/([a-zA-Z0-9_]+)($|\?)/;
var MATCH_URL_DAILYMOTION = /^(?:(?:https?):)?(?:\/\/)?(?:www\.)?(?:(?:dailymotion\.com(?:\/embed)?\/video)|dai\.ly)\/([a-zA-Z0-9]+)(?:_[\w_-]+)?(?:[\w.#_-]+)?/;
var MATCH_URL_MIXCLOUD = /mixcloud\.com\/([^/]+\/[^/]+)/;
var MATCH_URL_VIDYARD = /vidyard.com\/(?:watch\/)?([a-zA-Z0-9-_]+)/;
var MATCH_URL_KALTURA = /^https?:\/\/[a-zA-Z]+\.kaltura.(com|org)\/p\/([0-9]+)\/sp\/([0-9]+)00\/embedIframeJs\/uiconf_id\/([0-9]+)\/partner_id\/([0-9]+)(.*)entry_id.([a-zA-Z0-9-_].*)$/;
var AUDIO_EXTENSIONS = /\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\?)/i;
var VIDEO_EXTENSIONS = /\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\d+]+)?($|\?)/i;
var HLS_EXTENSIONS = /\.(m3u8)($|\?)/i;
var DASH_EXTENSIONS = /\.(mpd)($|\?)/i;
var FLV_EXTENSIONS = /\.(flv)($|\?)/i;
var canPlayFile = (url) => {
  if (url instanceof Array) {
    for (const item of url) {
      if (typeof item === "string" && canPlayFile(item)) {
        return true;
      }
      if (canPlayFile(item.src)) {
        return true;
      }
    }
    return false;
  }
  if (isMediaStream(url) || isBlobUrl(url)) {
    return true;
  }
  return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url) || FLV_EXTENSIONS.test(url);
};
var canPlay = {
  youtube: (url) => {
    if (url instanceof Array) {
      return url.every((item) => MATCH_URL_YOUTUBE.test(item));
    }
    return MATCH_URL_YOUTUBE.test(url);
  },
  soundcloud: (url) => MATCH_URL_SOUNDCLOUD.test(url) && !AUDIO_EXTENSIONS.test(url),
  vimeo: (url) => MATCH_URL_VIMEO.test(url) && !VIDEO_EXTENSIONS.test(url) && !HLS_EXTENSIONS.test(url),
  facebook: (url) => MATCH_URL_FACEBOOK.test(url) || MATCH_URL_FACEBOOK_WATCH.test(url),
  streamable: (url) => MATCH_URL_STREAMABLE.test(url),
  wistia: (url) => MATCH_URL_WISTIA.test(url),
  twitch: (url) => MATCH_URL_TWITCH_VIDEO.test(url) || MATCH_URL_TWITCH_CHANNEL.test(url),
  dailymotion: (url) => MATCH_URL_DAILYMOTION.test(url),
  mixcloud: (url) => MATCH_URL_MIXCLOUD.test(url),
  vidyard: (url) => MATCH_URL_VIDYARD.test(url),
  kaltura: (url) => MATCH_URL_KALTURA.test(url),
  file: canPlayFile
};

// src/players/Kaltura.js
var SDK_URL = "https://cdn.embed.ly/player-0.1.0.min.js";
var SDK_GLOBAL = "playerjs";
var Kaltura = class extends import_react2.Component {
  static displayName = "Kaltura";
  static canPlay = canPlay.kaltura;
  callPlayer = callPlayer;
  duration = null;
  currentTime = null;
  secondsLoaded = null;
  componentDidMount() {
    this.props.onMount && this.props.onMount(this);
  }
  load(url) {
    getSDK(SDK_URL, SDK_GLOBAL).then((playerjs) => {
      if (!this.iframe)
        return;
      this.player = new playerjs.Player(this.iframe);
      this.player.on("ready", () => {
        setTimeout(() => {
          this.player.isReady = true;
          this.player.setLoop(this.props.loop);
          if (this.props.muted) {
            this.player.mute();
          }
          this.addListeners(this.player, this.props);
          this.props.onReady();
        }, 500);
      });
    }, this.props.onError);
  }
  addListeners(player, props) {
    player.on("play", props.onPlay);
    player.on("pause", props.onPause);
    player.on("ended", props.onEnded);
    player.on("error", props.onError);
    player.on("timeupdate", ({ duration, seconds }) => {
      this.duration = duration;
      this.currentTime = seconds;
    });
  }
  play() {
    this.callPlayer("play");
  }
  pause() {
    this.callPlayer("pause");
  }
  stop() {
  }
  seekTo(seconds, keepPlaying = true) {
    this.callPlayer("setCurrentTime", seconds);
    if (!keepPlaying) {
      this.pause();
    }
  }
  setVolume(fraction) {
    this.callPlayer("setVolume", fraction);
  }
  setLoop(loop) {
    this.callPlayer("setLoop", loop);
  }
  mute = () => {
    this.callPlayer("mute");
  };
  unmute = () => {
    this.callPlayer("unmute");
  };
  getDuration() {
    return this.duration;
  }
  getCurrentTime() {
    return this.currentTime;
  }
  getSecondsLoaded() {
    return this.secondsLoaded;
  }
  ref = (iframe) => {
    this.iframe = iframe;
  };
  render() {
    const style = {
      width: "100%",
      height: "100%"
    };
    return /* @__PURE__ */ import_react2.default.createElement(
      "iframe",
      {
        ref: this.ref,
        src: this.props.url,
        frameBorder: "0",
        scrolling: "no",
        style,
        allow: "encrypted-media; autoplay; fullscreen;",
        referrerPolicy: "no-referrer-when-downgrade"
      }
    );
  }
};

// test/players/Kaltura.js
var TEST_URL = "https://cdnapisec.kaltura.com/p/2507381/sp/250738100/embedIframeJs/uiconf_id/44372392/partner_id/2507381?iframeembed=true&playerId=kaltura_player_1605622336&entry_id=1_i1jmzcn3";
var TEST_CONFIG = {
  options: {}
};
testPlayerMethods(Kaltura, {
  play: "play",
  pause: "pause",
  stop: null,
  seekTo: "setCurrentTime",
  setVolume: "setVolume",
  mute: "mute",
  unmute: "unmute"
}, { url: TEST_URL });
test2("load()", (t) => {
  class Player {
    constructor(iframe) {
      t.ok(iframe === "mock-iframe");
    }
    on = (event, fn) => {
      if (event === "ready")
        setTimeout(fn, 100);
    };
    setLoop = () => null;
  }
  const getSDK3 = sinon2.stub(getSDK, "stub").resolves({ Player });
  return new Promise((resolve) => {
    const onReady = () => {
      t.ok(true);
      resolve();
    };
    const instance = (0, import_react_test_renderer2.create)(
      /* @__PURE__ */ import_react3.default.createElement(Kaltura, { url: TEST_URL, onReady, config: TEST_CONFIG })
    ).getInstance();
    instance.iframe = "mock-iframe";
    instance.load(TEST_URL);
    t.ok(getSDK3.calledOnce);
    getSDK3.restore();
  });
});
test2("getDuration()", (t) => {
  const instance = (0, import_react_test_renderer2.create)(/* @__PURE__ */ import_react3.default.createElement(Kaltura, { url: TEST_URL })).getInstance();
  instance.duration = 10;
  t.ok(instance.getDuration() === 10);
});
test2("getCurrentTime()", (t) => {
  const instance = (0, import_react_test_renderer2.create)(/* @__PURE__ */ import_react3.default.createElement(Kaltura, { url: TEST_URL })).getInstance();
  instance.currentTime = 5;
  t.ok(instance.getCurrentTime() === 5);
});
test2("getSecondsLoaded()", (t) => {
  const instance = (0, import_react_test_renderer2.create)(/* @__PURE__ */ import_react3.default.createElement(Kaltura, { url: TEST_URL })).getInstance();
  instance.secondsLoaded = 5;
  t.ok(instance.getSecondsLoaded() === 5);
});
test2("render()", (t) => {
  const style = { width: "100%", height: "100%" };
  t.deepEqual(
    (0, import_react_test_renderer2.create)(/* @__PURE__ */ import_react3.default.createElement(Kaltura, { url: TEST_URL })).toJSON(),
    (0, import_react_test_renderer2.create)(/* @__PURE__ */ import_react3.default.createElement(
      "iframe",
      {
        src: TEST_URL,
        frameBorder: "0",
        scrolling: "no",
        style,
        allow: "encrypted-media; autoplay; fullscreen;",
        referrerPolicy: "no-referrer-when-downgrade"
      }
    )).toJSON()
  );
});
/*! Bundled license information:

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

react/cjs/react.production.min.js:
  (** @license React v16.14.0
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler-unstable_mock.production.min.js:
  (** @license React v0.19.1
   * scheduler-unstable_mock.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.production.min.js:
  (** @license React v0.19.1
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-test-renderer/cjs/react-test-renderer.production.min.js:
  (** @license React v16.14.0
   * react-test-renderer.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCAiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsICIuLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanMiLCAiLi4vLi4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLXVuc3RhYmxlX21vY2sucHJvZHVjdGlvbi5taW4uanMiLCAiLi4vLi4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci91bnN0YWJsZV9tb2NrLmpzIiwgIi4uLy4uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsICIuLi8uLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2luZGV4LmpzIiwgIi4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC10ZXN0LXJlbmRlcmVyL2Nqcy9yZWFjdC10ZXN0LXJlbmRlcmVyLnByb2R1Y3Rpb24ubWluLmpzIiwgIi4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC10ZXN0LXJlbmRlcmVyL2luZGV4LmpzIiwgIi4uLy4uL25vZGVfbW9kdWxlcy9sb2FkLXNjcmlwdC9pbmRleC5qcyIsICIuLi8uLi9ub2RlX21vZHVsZXMvZGVlcG1lcmdlL2Rpc3QvY2pzLmpzIiwgIi4uLy4uL3Rlc3QvcGxheWVycy9LYWx0dXJhLmpzIiwgIi4uLy4uL3Rlc3QvaGVscGVycy9zZXJ2ZXItc2FmZS1nbG9iYWxzLmpzIiwgIi4uLy4uL3Rlc3QvaGVscGVycy9oZWxwZXJzLmpzIiwgIi4uLy4uL3NyYy91dGlscy5qcyIsICIuLi8uLi9zcmMvcGxheWVycy9LYWx0dXJhLmpzIiwgIi4uLy4uL3NyYy9wYXR0ZXJucy5qcyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsICIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjE0LjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHo9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxBPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6XG42MDExNixCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBDKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEQ9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEU9e307ZnVuY3Rpb24gRihhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfUYucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Ri5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKEMoODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0YucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRygpe31HLnByb3RvdHlwZT1GLnByb3RvdHlwZTtmdW5jdGlvbiBIKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9dmFyIEk9SC5wcm90b3R5cGU9bmV3IEc7SS5jb25zdHJ1Y3Rvcj1IO2woSSxGLnByb3RvdHlwZSk7SS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsYyl7dmFyIGUsZD17fSxnPW51bGwsaz1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixlKSYmIUwuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaD1BcnJheShmKSxtPTA7bTxmO20rKyloW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtlXSYmKGRbZV09ZltlXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjprLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBOKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZyxRPVtdO2Z1bmN0aW9uIFIoYSxiLGMsZSl7aWYoUS5sZW5ndGgpe3ZhciBkPVEucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1jO2QuY29udGV4dD1lO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpjLGNvbnRleHQ6ZSxjb3VudDowfX1cbmZ1bmN0aW9uIFMoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5RLmxlbmd0aCYmUS5wdXNoKGEpfVxuZnVuY3Rpb24gVChhLGIsYyxlKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gYyhlLGEsXCJcIj09PWI/XCIuXCIrVShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtkPWFba107dmFyIGY9YitVKGQsayk7Zys9VChkLGYsYyxlKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUImJmFbQl18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaz1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1UoZCxrKyspLGcrPVQoZCxmLGMsZSk7ZWxzZSBpZihcIm9iamVjdFwiPT09ZCl0aHJvdyBjPVwiXCIrYSxFcnJvcihDKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1jP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmMsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGMpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixjKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBXKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGFhKGEsYixjKXt2YXIgZT1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1goYSxlLGMsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTyhhKSYmKGE9TihhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2MpKSxlLnB1c2goYSkpfWZ1bmN0aW9uIFgoYSxiLGMsZSxkKXt2YXIgZz1cIlwiO251bGwhPWMmJihnPShcIlwiK2MpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIik7Yj1SKGIsZyxlLGQpO1YoYSxhYSxiKTtTKGIpfXZhciBZPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFooKXt2YXIgYT1ZLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoQygzMjEpKTtyZXR1cm4gYX1cbnZhciBiYT17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpZLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOntzdXNwZW5zZTpudWxsfSxSZWFjdEN1cnJlbnRPd25lcjpKLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07ZXhwb3J0cy5DaGlsZHJlbj17bWFwOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdO1goYSxlLG51bGwsYixjKTtyZXR1cm4gZX0sZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVIobnVsbCxudWxsLGIsYyk7VihhLFcsYik7UyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFYoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtYKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU8oYSkpdGhyb3cgRXJyb3IoQygxNDMpKTtyZXR1cm4gYX19O1xuZXhwb3J0cy5Db21wb25lbnQ9RjtleHBvcnRzLkZyYWdtZW50PXI7ZXhwb3J0cy5Qcm9maWxlcj11O2V4cG9ydHMuUHVyZUNvbXBvbmVudD1IO2V4cG9ydHMuU3RyaWN0TW9kZT10O2V4cG9ydHMuU3VzcGVuc2U9eTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWJhO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKEMoMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSy5jYWxsKGIsaCkmJiFMLmhhc093blByb3BlcnR5KGgpJiYoZVtoXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIG09MDttPGg7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmcscHJvcHM6ZSxfb3duZXI6a319O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp4LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1PO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpBLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6eix0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTQuMFwiO1xuIiwgIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwgIi8qKiBAbGljZW5zZSBSZWFjdCB2MC4xOS4xXG4gKiBzY2hlZHVsZXItdW5zdGFibGVfbW9jay5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgZj0wLGc9bnVsbCxoPW51bGwsaz0tMSxsPW51bGwsbT0tMSxuPSExLHA9ITEscT0hMSxyPSExO2Z1bmN0aW9uIHQoKXtyZXR1cm4tMSE9PW0mJm51bGwhPT1sJiZsLmxlbmd0aD49bXx8ciYmcT9uPSEwOiExfWZ1bmN0aW9uIHgoKXtpZihwKXRocm93IEVycm9yKFwiQWxyZWFkeSBmbHVzaGluZyB3b3JrLlwiKTtpZihudWxsIT09Zyl7dmFyIGE9ZztwPSEwO3RyeXt2YXIgYj0hMDtkbyBiPWEoITAsZik7d2hpbGUoYik7Ynx8KGc9bnVsbCk7cmV0dXJuITB9ZmluYWxseXtwPSExfX1lbHNlIHJldHVybiExfWZ1bmN0aW9uIHooYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8QShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gQihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gQyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIHU9MiooZCsxKS0xLHY9YVt1XSx3PXUrMSx5PWFbd107aWYodm9pZCAwIT09diYmMD5BKHYsYykpdm9pZCAwIT09eSYmMD5BKHksdik/KGFbZF09eSxhW3ddPWMsZD13KTooYVtkXT12LGFbdV09YyxkPXUpO2Vsc2UgaWYodm9pZCAwIT09eSYmMD5BKHksYykpYVtkXT15LGFbd109YyxkPXc7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBBKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBEPVtdLEU9W10sRj0xLEc9bnVsbCxIPTMsST0hMSxKPSExLEs9ITE7XG5mdW5jdGlvbiBMKGEpe2Zvcih2YXIgYj1CKEUpO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spQyhFKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUMoRSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSx6KEQsYik7ZWxzZSBicmVhaztiPUIoRSl9fWZ1bmN0aW9uIE0oYSl7Sz0hMTtMKGEpO2lmKCFKKWlmKG51bGwhPT1CKEQpKUo9ITAsZz1OO2Vsc2V7dmFyIGI9QihFKTtudWxsIT09YiYmKGE9Yi5zdGFydFRpbWUtYSxoPU0saz1mK2EpfX1cbmZ1bmN0aW9uIE4oYSxiKXtKPSExO0smJihLPSExLGg9bnVsbCxrPS0xKTtJPSEwO3ZhciBjPUg7dHJ5e0woYik7Zm9yKEc9QihEKTtudWxsIT09RyYmKCEoRy5leHBpcmF0aW9uVGltZT5iKXx8YSYmIXQoKSk7KXt2YXIgZD1HLmNhbGxiYWNrO2lmKG51bGwhPT1kKXtHLmNhbGxiYWNrPW51bGw7SD1HLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChHLmV4cGlyYXRpb25UaW1lPD1iKTtiPWY7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/Ry5jYWxsYmFjaz1lOkc9PT1CKEQpJiZDKEQpO0woYil9ZWxzZSBDKEQpO0c9QihEKX1pZihudWxsIT09Ryl2YXIgdT0hMDtlbHNle3ZhciB2PUIoRSk7aWYobnVsbCE9PXYpe3ZhciB3PXYuc3RhcnRUaW1lLWI7aD1NO2s9Zit3fXU9ITF9cmV0dXJuIHV9ZmluYWxseXtHPW51bGwsSD1jLEk9ITF9fVxuZnVuY3Rpb24gTyhhKXtzd2l0Y2goYSl7Y2FzZSAxOnJldHVybi0xO2Nhc2UgMjpyZXR1cm4gMjUwO2Nhc2UgNTpyZXR1cm4gMTA3Mzc0MTgyMztjYXNlIDQ6cmV0dXJuIDFFNDtkZWZhdWx0OnJldHVybiA1RTN9fWV4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9hZHZhbmNlVGltZT1mdW5jdGlvbihhKXtmKz1hO251bGwhPT1oJiZrPD1mJiYoaChmKSxrPS0xLGg9bnVsbCl9O2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtcbmV4cG9ydHMudW5zdGFibGVfY2xlYXJZaWVsZHM9ZnVuY3Rpb24oKXtpZihudWxsPT09bClyZXR1cm5bXTt2YXIgYT1sO2w9bnVsbDtyZXR1cm4gYX07ZXhwb3J0cy51bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbj1mdW5jdGlvbigpe0p8fEl8fChKPSEwLGc9Til9O2V4cG9ydHMudW5zdGFibGVfZmx1c2hBbGw9ZnVuY3Rpb24oKXtpZihudWxsIT09bCl0aHJvdyBFcnJvcihcIkxvZyBpcyBub3QgZW1wdHkuIEFzc2VydCBvbiB0aGUgbG9nIG9mIHlpZWxkZWQgdmFsdWVzIGJlZm9yZSBmbHVzaGluZyBhZGRpdGlvbmFsIHdvcmsuXCIpO3goKTtpZihudWxsIT09bCl0aHJvdyBFcnJvcihcIldoaWxlIGZsdXNoaW5nIHdvcmssIHNvbWV0aGluZyB5aWVsZGVkIGEgdmFsdWUuIFVzZSBhbiBhc3NlcnRpb24gaGVscGVyIHRvIGFzc2VydCBvbiB0aGUgbG9nIG9mIHlpZWxkZWQgdmFsdWVzLCBlLmcuIGV4cGVjdChTY2hlZHVsZXIpLnRvRmx1c2hBbmRZaWVsZChbLi4uXSlcIik7fTtcbmV4cG9ydHMudW5zdGFibGVfZmx1c2hBbGxXaXRob3V0QXNzZXJ0aW5nPXg7ZXhwb3J0cy51bnN0YWJsZV9mbHVzaEV4cGlyZWQ9ZnVuY3Rpb24oKXtpZihwKXRocm93IEVycm9yKFwiQWxyZWFkeSBmbHVzaGluZyB3b3JrLlwiKTtpZihudWxsIT09Zyl7cD0hMDt0cnl7ZyghMSxmKXx8KGc9bnVsbCl9ZmluYWxseXtwPSExfX19O2V4cG9ydHMudW5zdGFibGVfZmx1c2hOdW1iZXJPZllpZWxkcz1mdW5jdGlvbihhKXtpZihwKXRocm93IEVycm9yKFwiQWxyZWFkeSBmbHVzaGluZyB3b3JrLlwiKTtpZihudWxsIT09Zyl7dmFyIGI9ZzttPWE7cD0hMDt0cnl7YT0hMDtkbyBhPWIoITAsZik7d2hpbGUoYSYmIW4pO2F8fChnPW51bGwpfWZpbmFsbHl7bT0tMSxwPW49ITF9fX07XG5leHBvcnRzLnVuc3RhYmxlX2ZsdXNoVW50aWxOZXh0UGFpbnQ9ZnVuY3Rpb24oKXtpZihwKXRocm93IEVycm9yKFwiQWxyZWFkeSBmbHVzaGluZyB3b3JrLlwiKTtpZihudWxsIT09Zyl7dmFyIGE9ZztyPSEwO3E9ITE7cD0hMDt0cnl7dmFyIGI9ITA7ZG8gYj1hKCEwLGYpO3doaWxlKGImJiFuKTtifHwoZz1udWxsKX1maW5hbGx5e3A9bj1yPSExfX19O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gSH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBCKEQpfTtleHBvcnRzLnVuc3RhYmxlX25leHQ9ZnVuY3Rpb24oYSl7c3dpdGNoKEgpe2Nhc2UgMTpjYXNlIDI6Y2FzZSAzOnZhciBiPTM7YnJlYWs7ZGVmYXVsdDpiPUh9dmFyIGM9SDtIPWI7dHJ5e3JldHVybiBhKCl9ZmluYWxseXtIPWN9fTtcbmV4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIGZ9O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PWZ1bmN0aW9uKCl7cT0hMH07ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1IO0g9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e0g9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1mO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3ZhciBlPWMuZGVsYXk7ZT1cIm51bWJlclwiPT09dHlwZW9mIGUmJjA8ZT9kK2U6ZDtjPVwibnVtYmVyXCI9PT10eXBlb2YgYy50aW1lb3V0P2MudGltZW91dDpPKGEpfWVsc2UgYz1PKGEpLGU9ZDtjPWUrYzthPXtpZDpGKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmUsZXhwaXJhdGlvblRpbWU6Yyxzb3J0SW5kZXg6LTF9O2U+ZD8oYS5zb3J0SW5kZXg9ZSx6KEUsYSksbnVsbD09PUIoRCkmJmE9PT1CKEUpJiYoSz8oaD1udWxsLGs9LTEpOks9ITAsaD1NLGs9ZisoZS1kKSkpOihhLnNvcnRJbmRleD1jLHooRCxhKSxKfHxJfHwoSj0hMCxnPU4pKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZjtMKGEpO3ZhciBiPUIoRCk7cmV0dXJuIGIhPT1HJiZudWxsIT09RyYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxHLmV4cGlyYXRpb25UaW1lfHx0KCl9O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPUg7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9SDtIPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e0g9Y319fTtleHBvcnRzLnVuc3RhYmxlX3lpZWxkVmFsdWU9ZnVuY3Rpb24oYSl7bnVsbD09PWw/bD1bYV06bC5wdXNoKGEpfTtcbiIsICIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLXVuc3RhYmxlX21vY2sucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLXVuc3RhYmxlX21vY2suZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsICIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTkuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrLGw7XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgcD1udWxsLHE9bnVsbCx0PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXApdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7cCghMCxhKTtwPW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh0LDApLGI7fX0sdT1EYXRlLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCktdX07Zj1mdW5jdGlvbihhKXtudWxsIT09cD9zZXRUaW1lb3V0KGYsMCxhKToocD1hLHNldFRpbWVvdXQodCwwKSl9O2c9ZnVuY3Rpb24oYSxiKXtxPXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChxKX07az1mdW5jdGlvbigpe3JldHVybiExfTtsPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHc9d2luZG93LnBlcmZvcm1hbmNlLHg9d2luZG93LkRhdGUsXG55PXdpbmRvdy5zZXRUaW1lb3V0LHo9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciBBPXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpfWlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiB3JiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5ub3cpZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gdy5ub3coKX07ZWxzZXt2YXIgQj14Lm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCktQn19dmFyIEM9ITEsRD1udWxsLEU9LTEsRj01LEc9MDtrPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PUd9O2w9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWVyYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCB1bnN1cHBvcnRlZFwiKTpGPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgSD1uZXcgTWVzc2FnZUNoYW5uZWwsST1ILnBvcnQyO0gucG9ydDEub25tZXNzYWdlPVxuZnVuY3Rpb24oKXtpZihudWxsIT09RCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtHPWErRjt0cnl7RCghMCxhKT9JLnBvc3RNZXNzYWdlKG51bGwpOihDPSExLEQ9bnVsbCl9Y2F0Y2goYil7dGhyb3cgSS5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBDPSExfTtmPWZ1bmN0aW9uKGEpe0Q9YTtDfHwoQz0hMCxJLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0U9eShmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eihFKTtFPS0xfX1mdW5jdGlvbiBKKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEsoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEwoYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIE0oYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SyhuLGMpKXZvaWQgMCE9PXImJjA+SyhyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SyhyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTj1bXSxPPVtdLFA9MSxRPW51bGwsUj0zLFM9ITEsVD0hMSxVPSExO1xuZnVuY3Rpb24gVihhKXtmb3IodmFyIGI9TChPKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKU0oTyk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlNKE8pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSihOLGIpO2Vsc2UgYnJlYWs7Yj1MKE8pfX1mdW5jdGlvbiBXKGEpe1U9ITE7VihhKTtpZighVClpZihudWxsIT09TChOKSlUPSEwLGYoWCk7ZWxzZXt2YXIgYj1MKE8pO251bGwhPT1iJiZnKFcsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gWChhLGIpe1Q9ITE7VSYmKFU9ITEsaCgpKTtTPSEwO3ZhciBjPVI7dHJ5e1YoYik7Zm9yKFE9TChOKTtudWxsIT09USYmKCEoUS5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWsoKSk7KXt2YXIgZD1RLmNhbGxiYWNrO2lmKG51bGwhPT1kKXtRLmNhbGxiYWNrPW51bGw7Uj1RLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChRLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/US5jYWxsYmFjaz1lOlE9PT1MKE4pJiZNKE4pO1YoYil9ZWxzZSBNKE4pO1E9TChOKX1pZihudWxsIT09USl2YXIgbT0hMDtlbHNle3ZhciBuPUwoTyk7bnVsbCE9PW4mJmcoVyxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7UT1udWxsLFI9YyxTPSExfX1cbmZ1bmN0aW9uIFkoYSl7c3dpdGNoKGEpe2Nhc2UgMTpyZXR1cm4tMTtjYXNlIDI6cmV0dXJuIDI1MDtjYXNlIDU6cmV0dXJuIDEwNzM3NDE4MjM7Y2FzZSA0OnJldHVybiAxRTQ7ZGVmYXVsdDpyZXR1cm4gNUUzfX12YXIgWj1sO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtUfHxTfHwoVD0hMCxmKFgpKX07XG5leHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFJ9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChSKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1SfXZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Uj1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9WjtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7dmFyIGU9Yy5kZWxheTtlPVwibnVtYmVyXCI9PT10eXBlb2YgZSYmMDxlP2QrZTpkO2M9XCJudW1iZXJcIj09PXR5cGVvZiBjLnRpbWVvdXQ/Yy50aW1lb3V0OlkoYSl9ZWxzZSBjPVkoYSksZT1kO2M9ZStjO2E9e2lkOlArKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6ZSxleHBpcmF0aW9uVGltZTpjLHNvcnRJbmRleDotMX07ZT5kPyhhLnNvcnRJbmRleD1lLEooTyxhKSxudWxsPT09TChOKSYmYT09PUwoTykmJihVP2goKTpVPSEwLGcoVyxlLWQpKSk6KGEuc29ydEluZGV4PWMsSihOLGEpLFR8fFN8fChUPSEwLGYoWCkpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVI7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1I9Y319fTtcbiIsICIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwgIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTQuMFxuICogcmVhY3QtdGVzdC1yZW5kZXJlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksYmE9cmVxdWlyZShcInNjaGVkdWxlci91bnN0YWJsZV9tb2NrXCIpLGNhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24gbihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbmZ1bmN0aW9uIGRhKGEsYil7Zm9yKHZhciBjPTA7YzxiLmxlbmd0aDtjKyspe3ZhciBkPWJbY107ZC5lbnVtZXJhYmxlPWQuZW51bWVyYWJsZXx8ITE7ZC5jb25maWd1cmFibGU9ITA7XCJ2YWx1ZVwiaW4gZCYmKGQud3JpdGFibGU9ITApO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGQua2V5LGQpfX1mdW5jdGlvbiBlYShhLGIsYyl7YiYmZGEoYS5wcm90b3R5cGUsYik7YyYmZGEoYSxjKTtyZXR1cm4gYX12YXIgdD1jYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDt0Lmhhc093blByb3BlcnR5KFwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlclwiKXx8KHQuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcj17Y3VycmVudDpudWxsfSk7dC5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwodC5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZz17c3VzcGVuc2U6bnVsbH0pO1xudmFyIHk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixmYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGhhPXk/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixpYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyxqYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxrYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxsYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSxtYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLG5hPXk/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxvYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKTo2MDExMyxxYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHJhPVxueT9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxzYT15P1N5bWJvbC5mb3IoXCJyZWFjdC5sYXp5XCIpOjYwMTE2LHRhPXk/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHVhPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiB2YShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9dWEmJmFbdWFdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24gd2EoYSl7aWYoLTE9PT1hLl9zdGF0dXMpe2EuX3N0YXR1cz0wO3ZhciBiPWEuX2N0b3I7Yj1iKCk7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX19XG5mdW5jdGlvbiB4YShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIGlhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIGhhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSBrYTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSBqYTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIHBhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIHFhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIG1hOnJldHVyblwiQ29udGV4dC5Db25zdW1lclwiO2Nhc2UgbGE6cmV0dXJuXCJDb250ZXh0LlByb3ZpZGVyXCI7Y2FzZSBvYTp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtyZXR1cm4gYS5kaXNwbGF5TmFtZXx8KFwiXCIhPT1iP1wiRm9yd2FyZFJlZihcIitiK1wiKVwiOlxuXCJGb3J3YXJkUmVmXCIpO2Nhc2UgcmE6cmV0dXJuIHhhKGEudHlwZSk7Y2FzZSB0YTpyZXR1cm4geGEoYS5yZW5kZXIpO2Nhc2Ugc2E6aWYoYT0xPT09YS5fc3RhdHVzP2EuX3Jlc3VsdDpudWxsKXJldHVybiB4YShhKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB5YShhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZWZmZWN0VGFnJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiB6YShhKXtpZih5YShhKSE9PWEpdGhyb3cgRXJyb3IobigxODgpKTt9XG5mdW5jdGlvbiBBYShhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj15YShhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcihuKDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiB6YShlKSxhO2lmKGY9PT1kKXJldHVybiB6YShlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKG4oMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IobigxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcihuKDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IobigxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIEJhKGEpe2E9QWEoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9dmFyIENhPXt9LERhPXt9LEVhPW5ldyBXZWFrTWFwO1xuZnVuY3Rpb24gRmEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIFwiSU5TVEFOQ0VcIjp2YXIgYj1hLnJvb3RDb250YWluZXJJbnN0YW5jZS5jcmVhdGVOb2RlTW9jaztiPWIoe3R5cGU6YS50eXBlLHByb3BzOmEucHJvcHN9KTtcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiZFYS5zZXQoYixhKTtyZXR1cm4gYjtkZWZhdWx0OnJldHVybiBhfX1mdW5jdGlvbiBHYShhLGIpe3ZhciBjPWEuY2hpbGRyZW4uaW5kZXhPZihiKTstMSE9PWMmJmEuY2hpbGRyZW4uc3BsaWNlKGMsMSk7YS5jaGlsZHJlbi5wdXNoKGIpfWZ1bmN0aW9uIEhhKGEsYixjKXt2YXIgZD1hLmNoaWxkcmVuLmluZGV4T2YoYik7LTEhPT1kJiZhLmNoaWxkcmVuLnNwbGljZShkLDEpO2M9YS5jaGlsZHJlbi5pbmRleE9mKGMpO2EuY2hpbGRyZW4uc3BsaWNlKGMsMCxiKX12YXIgSWE9c2V0VGltZW91dCxKYT1jbGVhclRpbWVvdXQsS2E9L14oLiopW1xcXFxcXC9dLztcbmZ1bmN0aW9uIExhKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj14YShhLnR5cGUpO2M9bnVsbDtkJiYoYz14YShkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKEthLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9dmFyIE1hPVtdLE5hPS0xO2Z1bmN0aW9uIEIoYSl7MD5OYXx8KGEuY3VycmVudD1NYVtOYV0sTWFbTmFdPW51bGwsTmEtLSl9ZnVuY3Rpb24gQyhhLGIpe05hKys7TWFbTmFdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn1cbnZhciBPYT17fSxEPXtjdXJyZW50Ok9hfSxFPXtjdXJyZW50OiExfSxQYT1PYTtmdW5jdGlvbiBRYShhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIE9hO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBSYSgpe0IoRSk7QihEKX1cbmZ1bmN0aW9uIFNhKGEsYixjKXtpZihELmN1cnJlbnQhPT1PYSl0aHJvdyBFcnJvcihuKDE2OCkpO0MoRCxiKTtDKEUsYyl9ZnVuY3Rpb24gVGEoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcihuKDEwOCx4YShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBhYSh7fSxjLHt9LGQpfWZ1bmN0aW9uIFVhKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxPYTtQYT1ELmN1cnJlbnQ7QyhELGEpO0MoRSxFLmN1cnJlbnQpO3JldHVybiEwfVxuZnVuY3Rpb24gVmEoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKG4oMTY5KSk7Yz8oYT1UYShhLGIsUGEpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxCKEUpLEIoRCksQyhELGEpKTpCKEUpO0MoRSxjKX1cbnZhciBXYT1tLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSxYYT1tLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2ssWWE9bS51bnN0YWJsZV9jYW5jZWxDYWxsYmFjayxaYT1tLnVuc3RhYmxlX3JlcXVlc3RQYWludCwkYT1tLnVuc3RhYmxlX25vdyxhYj1tLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLGJiPW0udW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksY2I9bS51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxkYj1tLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LGViPW0udW5zdGFibGVfTG93UHJpb3JpdHksZmI9bS51bnN0YWJsZV9JZGxlUHJpb3JpdHksZ2I9e30saGI9bS51bnN0YWJsZV9zaG91bGRZaWVsZCxpYj12b2lkIDAhPT1aYT9aYTpmdW5jdGlvbigpe30samI9bnVsbCxrYj1udWxsLGxiPSExLG1iPSRhKCksRz0xRTQ+bWI/JGE6ZnVuY3Rpb24oKXtyZXR1cm4gJGEoKS1tYn07XG5mdW5jdGlvbiBuYigpe3N3aXRjaChhYigpKXtjYXNlIGJiOnJldHVybiA5OTtjYXNlIGNiOnJldHVybiA5ODtjYXNlIGRiOnJldHVybiA5NztjYXNlIGViOnJldHVybiA5NjtjYXNlIGZiOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKG4oMzMyKSk7fX1mdW5jdGlvbiBvYihhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gYmI7Y2FzZSA5ODpyZXR1cm4gY2I7Y2FzZSA5NzpyZXR1cm4gZGI7Y2FzZSA5NjpyZXR1cm4gZWI7Y2FzZSA5NTpyZXR1cm4gZmI7ZGVmYXVsdDp0aHJvdyBFcnJvcihuKDMzMikpO319ZnVuY3Rpb24gcGIoYSxiKXthPW9iKGEpO3JldHVybiBXYShhLGIpfWZ1bmN0aW9uIHFiKGEsYixjKXthPW9iKGEpO3JldHVybiBYYShhLGIsYyl9ZnVuY3Rpb24gcmIoYSl7bnVsbD09PWpiPyhqYj1bYV0sa2I9WGEoYmIsc2IpKTpqYi5wdXNoKGEpO3JldHVybiBnYn1mdW5jdGlvbiB0Yigpe2lmKG51bGwhPT1rYil7dmFyIGE9a2I7a2I9bnVsbDtZYShhKX1zYigpfVxuZnVuY3Rpb24gc2IoKXtpZighbGImJm51bGwhPT1qYil7bGI9ITA7dmFyIGE9MDt0cnl7dmFyIGI9amI7cGIoOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO2piPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PWpiJiYoamI9amIuc2xpY2UoYSsxKSksWGEoYmIsdGIpLGM7fWZpbmFsbHl7bGI9ITF9fX1mdW5jdGlvbiB1YihhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIHZiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOnViLHdiPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiB4YihhLGIpe2lmKHZiKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighd2IuY2FsbChiLGNbZF0pfHwhdmIoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBIKGEsYil7aWYoYSYmYS5kZWZhdWx0UHJvcHMpe2I9YWEoe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn12YXIgeWI9e2N1cnJlbnQ6bnVsbH0semI9bnVsbCxBYj1udWxsLEJiPW51bGw7ZnVuY3Rpb24gQ2IoKXtCYj1BYj16Yj1udWxsfVxuZnVuY3Rpb24gRGIoYSl7dmFyIGI9eWIuY3VycmVudDtCKHliKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZTI9Yn1mdW5jdGlvbiBFYihhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZihhLmNoaWxkRXhwaXJhdGlvblRpbWU8YilhLmNoaWxkRXhwaXJhdGlvblRpbWU9YixudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihjLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7ZWxzZSBpZihudWxsIT09YyYmYy5jaGlsZEV4cGlyYXRpb25UaW1lPGIpYy5jaGlsZEV4cGlyYXRpb25UaW1lPWI7ZWxzZSBicmVhazthPWEucmV0dXJufX1mdW5jdGlvbiBGYihhLGIpe3piPWE7QmI9QWI9bnVsbDthPWEuZGVwZW5kZW5jaWVzO251bGwhPT1hJiZudWxsIT09YS5maXJzdENvbnRleHQmJihhLmV4cGlyYXRpb25UaW1lPj1iJiYoST0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBKKGEsYil7aWYoQmIhPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKUJiPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1BYil7aWYobnVsbD09PXpiKXRocm93IEVycm9yKG4oMzA4KSk7QWI9Yjt6Yi5kZXBlbmRlbmNpZXM9e2V4cGlyYXRpb25UaW1lOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIEFiPUFiLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlMn12YXIgR2I9ITE7ZnVuY3Rpb24gSGIoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxiYXNlUXVldWU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIEliKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGJhc2VRdWV1ZTphLmJhc2VRdWV1ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiBKYihhLGIpe2E9e2V4cGlyYXRpb25UaW1lOmEsc3VzcGVuc2VDb25maWc6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9O3JldHVybiBhLm5leHQ9YX1mdW5jdGlvbiBLYihhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIExiKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJkliKGMsYSk7YT1hLnVwZGF0ZVF1ZXVlO2M9YS5iYXNlUXVldWU7bnVsbD09PWM/KGEuYmFzZVF1ZXVlPWIubmV4dD1iLGIubmV4dD1iKTooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yil9XG5mdW5jdGlvbiBNYihhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO0diPSExO3ZhciBmPWUuYmFzZVF1ZXVlLGc9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09Zyl7aWYobnVsbCE9PWYpe3ZhciBoPWYubmV4dDtmLm5leHQ9Zy5uZXh0O2cubmV4dD1ofWY9ZztlLnNoYXJlZC5wZW5kaW5nPW51bGw7aD1hLmFsdGVybmF0ZTtudWxsIT09aCYmKGg9aC51cGRhdGVRdWV1ZSxudWxsIT09aCYmKGguYmFzZVF1ZXVlPWcpKX1pZihudWxsIT09Zil7aD1mLm5leHQ7dmFyIGs9ZS5iYXNlU3RhdGUsbD0wLHA9bnVsbCxxPW51bGwsdj1udWxsO2lmKG51bGwhPT1oKXt2YXIgeD1oO2Rve2c9eC5leHBpcmF0aW9uVGltZTtpZihnPGQpe3ZhciBQPXtleHBpcmF0aW9uVGltZTp4LmV4cGlyYXRpb25UaW1lLHN1c3BlbnNlQ29uZmlnOnguc3VzcGVuc2VDb25maWcsdGFnOngudGFnLHBheWxvYWQ6eC5wYXlsb2FkLGNhbGxiYWNrOnguY2FsbGJhY2ssbmV4dDpudWxsfTtudWxsPT09dj8ocT12PVAsXG5wPWspOnY9di5uZXh0PVA7Zz5sJiYobD1nKX1lbHNle251bGwhPT12JiYodj12Lm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6eC5zdXNwZW5zZUNvbmZpZyx0YWc6eC50YWcscGF5bG9hZDp4LnBheWxvYWQsY2FsbGJhY2s6eC5jYWxsYmFjayxuZXh0Om51bGx9KTtOYihnLHguc3VzcGVuc2VDb25maWcpO2E6e3ZhciB6PWEsQT14O2c9YjtQPWM7c3dpdGNoKEEudGFnKXtjYXNlIDE6ej1BLnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHope2s9ei5jYWxsKFAsayxnKTticmVhayBhfWs9ejticmVhayBhO2Nhc2UgMzp6LmVmZmVjdFRhZz16LmVmZmVjdFRhZyYtNDA5N3w2NDtjYXNlIDA6ej1BLnBheWxvYWQ7Zz1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygej96LmNhbGwoUCxrLGcpOno7aWYobnVsbD09PWd8fHZvaWQgMD09PWcpYnJlYWsgYTtrPWFhKHt9LGssZyk7YnJlYWsgYTtjYXNlIDI6R2I9ITB9fW51bGwhPT14LmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PVxuMzIsZz1lLmVmZmVjdHMsbnVsbD09PWc/ZS5lZmZlY3RzPVt4XTpnLnB1c2goeCkpfXg9eC5uZXh0O2lmKG51bGw9PT14fHx4PT09aClpZihnPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWcpYnJlYWs7ZWxzZSB4PWYubmV4dD1nLm5leHQsZy5uZXh0PWgsZS5iYXNlUXVldWU9Zj1nLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKX1udWxsPT09dj9wPWs6di5uZXh0PXE7ZS5iYXNlU3RhdGU9cDtlLmJhc2VRdWV1ZT12O09iKGwpO2EuZXhwaXJhdGlvblRpbWU9bDthLm1lbW9pemVkU3RhdGU9a319ZnVuY3Rpb24gUGIoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1lO2U9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCl0aHJvdyBFcnJvcihuKDE5MSxkKSk7ZC5jYWxsKGUpfX19XG52YXIgUWI9dC5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxSYj0obmV3IGNhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBTYihhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6YWEoe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5leHBpcmF0aW9uVGltZSYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIFdiPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT95YShhKT09PWE6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9VGIoKSxlPVFiLnN1c3BlbnNlO2Q9VWIoZCxhLGUpO2U9SmIoZCxlKTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7S2IoYSxlKTtWYihhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1UYigpLGU9UWIuc3VzcGVuc2U7ZD1VYihkLGEsZSk7ZT1KYihkLGUpO2UudGFnPTE7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO0tiKGEsZSk7VmIoYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9VGIoKSxkPVFiLnN1c3BlbnNlO1xuYz1VYihjLGEsZCk7ZD1KYihjLGQpO2QudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihkLmNhbGxiYWNrPWIpO0tiKGEsZCk7VmIoYSxjKX19O2Z1bmN0aW9uIFhiKGEsYixjLGQsZSxmLGcpe2E9YS5zdGF0ZU5vZGU7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuc2hvdWxkQ29tcG9uZW50VXBkYXRlP2Euc2hvdWxkQ29tcG9uZW50VXBkYXRlKGQsZixnKTpiLnByb3RvdHlwZSYmYi5wcm90b3R5cGUuaXNQdXJlUmVhY3RDb21wb25lbnQ/IXhiKGMsZCl8fCF4YihlLGYpOiEwfVxuZnVuY3Rpb24gWWIoYSxiLGMpe3ZhciBkPSExLGU9T2E7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2Y9SihmKTooZT1GKGIpP1BhOkQuY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP1FhKGEsZSk6T2EpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1XYjthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBaYihhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmV2IuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiAkYihhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPVJiO0hiKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9SihmKTooZj1GKGIpP1BhOkQuY3VycmVudCxlLmNvbnRleHQ9UWEoYSxmKSk7TWIoYSxjLGUsZCk7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7Zj1iLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKFNiKGEsYixmLGMpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHN8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnR8fFxuKGI9ZS5zdGF0ZSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnRXaWxsTW91bnQmJmUuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCksYiE9PWUuc3RhdGUmJldiLmVucXVldWVSZXBsYWNlU3RhdGUoZSxlLnN0YXRlLG51bGwpLE1iKGEsYyxlLGQpLGUuc3RhdGU9YS5tZW1vaXplZFN0YXRlKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5jb21wb25lbnREaWRNb3VudCYmKGEuZWZmZWN0VGFnfD00KX12YXIgYWM9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIGJjKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IobigzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcihuKDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1SYiYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcihuKDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcihuKDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gY2MoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IobigzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIikpO31cbmZ1bmN0aW9uIGRjKGEpe2Z1bmN0aW9uIGIoYixjKXtpZihhKXt2YXIgZD1iLmxhc3RFZmZlY3Q7bnVsbCE9PWQ/KGQubmV4dEVmZmVjdD1jLGIubGFzdEVmZmVjdD1jKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1jO2MubmV4dEVmZmVjdD1udWxsO2MuZWZmZWN0VGFnPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPWVjKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmVmZmVjdFRhZz1cbjIsYyk6ZDtiLmVmZmVjdFRhZz0yO3JldHVybiBjfWZ1bmN0aW9uIGcoYil7YSYmbnVsbD09PWIuYWx0ZXJuYXRlJiYoYi5lZmZlY3RUYWc9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPWZjKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPWJjKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1nYyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1iYyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09XG5jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPWhjKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1pYyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIHEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPWZjKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIGZhOnJldHVybiBjPWdjKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPWJjKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSBoYTpyZXR1cm4gYj1oYyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoYWMoYil8fFxudmEoYikpcmV0dXJuIGI9aWMoYixhLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7Y2MoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB2KGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIGZhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09aWE/cChhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIGhhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKGFjKGMpfHx2YShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpwKGEsYixjLGQsbnVsbCk7Y2MoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9XG5hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2UgZmE6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PWlhP3AoYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIGhhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKGFjKGQpfHx2YShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxwKGIsYSxkLGUsbnVsbCk7Y2MoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBQKGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLEE9bnVsbCx1PWcscj1nPTAscD1udWxsO251bGwhPT11JiZyPGgubGVuZ3RoO3IrKyl7dS5pbmRleD5yPyhwPXUsdT1udWxsKTpwPXUuc2libGluZzt2YXIgdz12KGUsdSxoW3JdLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cCk7YnJlYWt9YSYmXG51JiZudWxsPT09dy5hbHRlcm5hdGUmJmIoZSx1KTtnPWYodyxnLHIpO251bGw9PT1BP2w9dzpBLnNpYmxpbmc9dztBPXc7dT1wfWlmKHI9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7cjxoLmxlbmd0aDtyKyspdT1xKGUsaFtyXSxrKSxudWxsIT09dSYmKGc9Zih1LGcsciksbnVsbD09PUE/bD11OkEuc2libGluZz11LEE9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3I8aC5sZW5ndGg7cisrKXA9eCh1LGUscixoW3JdLGspLG51bGwhPT1wJiYoYSYmbnVsbCE9PXAuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cC5rZXk/cjpwLmtleSksZz1mKHAsZyxyKSxudWxsPT09QT9sPXA6QS5zaWJsaW5nPXAsQT1wKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHooZSxnLGgsbCl7dmFyIGs9dmEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGspdGhyb3cgRXJyb3IobigxNTApKTtoPWsuY2FsbChoKTtcbmlmKG51bGw9PWgpdGhyb3cgRXJyb3IobigxNTEpKTtmb3IodmFyIHU9az1udWxsLHI9ZyxBPWc9MCxwPW51bGwsdz1oLm5leHQoKTtudWxsIT09ciYmIXcuZG9uZTtBKyssdz1oLm5leHQoKSl7ci5pbmRleD5BPyhwPXIscj1udWxsKTpwPXIuc2libGluZzt2YXIgej12KGUscix3LnZhbHVlLGwpO2lmKG51bGw9PT16KXtudWxsPT09ciYmKHI9cCk7YnJlYWt9YSYmciYmbnVsbD09PXouYWx0ZXJuYXRlJiZiKGUscik7Zz1mKHosZyxBKTtudWxsPT09dT9rPXo6dS5zaWJsaW5nPXo7dT16O3I9cH1pZih3LmRvbmUpcmV0dXJuIGMoZSxyKSxrO2lmKG51bGw9PT1yKXtmb3IoOyF3LmRvbmU7QSsrLHc9aC5uZXh0KCkpdz1xKGUsdy52YWx1ZSxsKSxudWxsIT09dyYmKGc9Zih3LGcsQSksbnVsbD09PXU/az13OnUuc2libGluZz13LHU9dyk7cmV0dXJuIGt9Zm9yKHI9ZChlLHIpOyF3LmRvbmU7QSsrLHc9aC5uZXh0KCkpdz14KHIsZSxBLHcudmFsdWUsbCksbnVsbCE9PXcmJihhJiZudWxsIT09XG53LmFsdGVybmF0ZSYmci5kZWxldGUobnVsbD09PXcua2V5P0E6dy5rZXkpLGc9Zih3LGcsQSksbnVsbD09PXU/az13OnUuc2libGluZz13LHU9dyk7YSYmci5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4ga31yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09aWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2UgZmE6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT1pYSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxcbmsuc2libGluZyk7ZD1lKGssZi5wcm9wcyk7ZC5yZWY9YmMoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1pYT8oZD1pYyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9Z2MoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9YmMoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIGhhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPVxuZC5zaWJsaW5nfWQ9aGMoZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9ZmMoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoYWMoZikpcmV0dXJuIFAoYSxkLGYsaCk7aWYodmEoZikpcmV0dXJuIHooYSxkLGYsaCk7bCYmY2MoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcihuKDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIGpjPWRjKCEwKSxrYz1kYyghMSksbGM9e30sbWM9e2N1cnJlbnQ6bGN9LG5jPXtjdXJyZW50OmxjfSxwYz17Y3VycmVudDpsY307XG5mdW5jdGlvbiBxYyhhKXtpZihhPT09bGMpdGhyb3cgRXJyb3IobigxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiByYyhhLGIpe0MocGMsYik7QyhuYyxhKTtDKG1jLGxjKTtCKG1jKTtDKG1jLENhKX1mdW5jdGlvbiBzYygpe0IobWMpO0IobmMpO0IocGMpfWZ1bmN0aW9uIHRjKGEpe3FjKHBjLmN1cnJlbnQpO3FjKG1jLmN1cnJlbnQpIT09Q2EmJihDKG5jLGEpLEMobWMsQ2EpKX1mdW5jdGlvbiB1YyhhKXtuYy5jdXJyZW50PT09YSYmKEIobWMpLEIobmMpKX12YXIgSz17Y3VycmVudDowfTtcbmZ1bmN0aW9uIHZjKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlLGQ7aWYoZD1udWxsIT09Yyl7aWYoIShjPW51bGw9PT1jLmRlaHlkcmF0ZWQpKXRocm93IEVycm9yKG4oMzA1KSk7aWYoIWMpdGhyb3cgRXJyb3IobigzMDUpKTtkPWN9aWYoZClyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfVxuZnVuY3Rpb24gd2MoYSxiKXtyZXR1cm57cmVzcG9uZGVyOmEscHJvcHM6Yn19dmFyIHhjPXQuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixMPXQuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcseWM9MCxNPW51bGwsTj1udWxsLE89bnVsbCx6Yz0hMTtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IobigzMjEpKTt9ZnVuY3Rpb24gQWMoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighdmIoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIEJjKGEsYixjLGQsZSxmKXt5Yz1mO009YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5leHBpcmF0aW9uVGltZT0wO3hjLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/Q2M6RGM7YT1jKGQsZSk7aWYoYi5leHBpcmF0aW9uVGltZT09PXljKXtmPTA7ZG97Yi5leHBpcmF0aW9uVGltZT0wO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IobigzMDEpKTtmKz0xO089Tj1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt4Yy5jdXJyZW50PUVjO2E9YyhkLGUpfXdoaWxlKGIuZXhwaXJhdGlvblRpbWU9PT15Yyl9eGMuY3VycmVudD1GYztiPW51bGwhPT1OJiZudWxsIT09Ti5uZXh0O3ljPTA7Tz1OPU09bnVsbDt6Yz0hMTtpZihiKXRocm93IEVycm9yKG4oMzAwKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBHYygpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1PP00ubWVtb2l6ZWRTdGF0ZT1PPWE6Tz1PLm5leHQ9YTtyZXR1cm4gT31mdW5jdGlvbiBIYygpe2lmKG51bGw9PT1OKXt2YXIgYT1NLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1OLm5leHQ7dmFyIGI9bnVsbD09PU8/TS5tZW1vaXplZFN0YXRlOk8ubmV4dDtpZihudWxsIT09YilPPWIsTj1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IobigzMTApKTtOPWE7YT17bWVtb2l6ZWRTdGF0ZTpOLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk4uYmFzZVN0YXRlLGJhc2VRdWV1ZTpOLmJhc2VRdWV1ZSxxdWV1ZTpOLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PU8/TS5tZW1vaXplZFN0YXRlPU89YTpPPU8ubmV4dD1hfXJldHVybiBPfVxuZnVuY3Rpb24gSWMoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBKYyhhKXt2YXIgYj1IYygpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcihuKDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU4sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5leHBpcmF0aW9uVGltZTtpZihsPHljKXt2YXIgcD17ZXhwaXJhdGlvblRpbWU6ay5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPXAsZj1kKTpoPWgubmV4dD1wO2w+TS5leHBpcmF0aW9uVGltZSYmXG4oTS5leHBpcmF0aW9uVGltZT1sLE9iKGwpKX1lbHNlIG51bGwhPT1oJiYoaD1oLm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLE5iKGwsay5zdXNwZW5zZUNvbmZpZyksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7dmIoZCxiLm1lbW9pemVkU3RhdGUpfHwoST0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gS2MoYSl7dmFyIGI9SGMoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IobigzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO3ZiKGYsYi5tZW1vaXplZFN0YXRlKXx8KEk9ITApO2IubWVtb2l6ZWRTdGF0ZT1mO251bGw9PT1iLmJhc2VRdWV1ZSYmKGIuYmFzZVN0YXRlPWYpO2MubGFzdFJlbmRlcmVkU3RhdGU9Zn1yZXR1cm5bZixkXX1cbmZ1bmN0aW9uIExjKGEpe3ZhciBiPUdjKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkljLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD1NYy5iaW5kKG51bGwsTSxhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfWZ1bmN0aW9uIE5jKGEsYixjLGQpe2E9e3RhZzphLGNyZWF0ZTpiLGRlc3Ryb3k6YyxkZXBzOmQsbmV4dDpudWxsfTtiPU0udXBkYXRlUXVldWU7bnVsbD09PWI/KGI9e2xhc3RFZmZlY3Q6bnVsbH0sTS51cGRhdGVRdWV1ZT1iLGIubGFzdEVmZmVjdD1hLm5leHQ9YSk6KGM9Yi5sYXN0RWZmZWN0LG51bGw9PT1jP2IubGFzdEVmZmVjdD1hLm5leHQ9YTooZD1jLm5leHQsYy5uZXh0PWEsYS5uZXh0PWQsYi5sYXN0RWZmZWN0PWEpKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIE9jKCl7cmV0dXJuIEhjKCkubWVtb2l6ZWRTdGF0ZX1mdW5jdGlvbiBQYyhhLGIsYyxkKXt2YXIgZT1HYygpO00uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1OYygxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfWZ1bmN0aW9uIFFjKGEsYixjLGQpe3ZhciBlPUhjKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PU4pe3ZhciBnPU4ubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmQWMoZCxnLmRlcHMpKXtOYyhiLGMsZixkKTtyZXR1cm59fU0uZWZmZWN0VGFnfD1hO2UubWVtb2l6ZWRTdGF0ZT1OYygxfGIsYyxmLGQpfWZ1bmN0aW9uIFJjKGEsYil7cmV0dXJuIFBjKDUxNiw0LGEsYil9ZnVuY3Rpb24gU2MoYSxiKXtyZXR1cm4gUWMoNTE2LDQsYSxiKX1mdW5jdGlvbiBUYyhhLGIpe3JldHVybiBRYyg0LDIsYSxiKX1cbmZ1bmN0aW9uIFVjKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19ZnVuY3Rpb24gVmMoYSxiLGMpe2M9bnVsbCE9PWMmJnZvaWQgMCE9PWM/Yy5jb25jYXQoW2FdKTpudWxsO3JldHVybiBRYyg0LDIsVWMuYmluZChudWxsLGIsYSksYyl9ZnVuY3Rpb24gV2MoKXt9ZnVuY3Rpb24gWGMoYSxiKXtHYygpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfWZ1bmN0aW9uIFljKGEsYil7dmFyIGM9SGMoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkFjKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gWmMoYSxiKXt2YXIgYz1IYygpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmQWMoYixkWzFdKSlyZXR1cm4gZFswXTthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9ZnVuY3Rpb24gJGMoYSxiLGMpe3ZhciBkPW5iKCk7cGIoOTg+ZD85ODpkLGZ1bmN0aW9uKCl7YSghMCl9KTtwYig5NzxkPzk3OmQsZnVuY3Rpb24oKXt2YXIgZD1MLnN1c3BlbnNlO0wuc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2EoITEpLGMoKX1maW5hbGx5e0wuc3VzcGVuc2U9ZH19KX1cbmZ1bmN0aW9uIE1jKGEsYixjKXt2YXIgZD1UYigpLGU9UWIuc3VzcGVuc2U7ZD1VYihkLGEsZSk7ZT17ZXhwaXJhdGlvblRpbWU6ZCxzdXNwZW5zZUNvbmZpZzplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9O3ZhciBmPWIucGVuZGluZztudWxsPT09Zj9lLm5leHQ9ZTooZS5uZXh0PWYubmV4dCxmLm5leHQ9ZSk7Yi5wZW5kaW5nPWU7Zj1hLmFsdGVybmF0ZTtpZihhPT09TXx8bnVsbCE9PWYmJmY9PT1NKXpjPSEwLGUuZXhwaXJhdGlvblRpbWU9eWMsTS5leHBpcmF0aW9uVGltZT15YztlbHNle2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lJiYobnVsbD09PWZ8fDA9PT1mLmV4cGlyYXRpb25UaW1lKSYmKGY9Yi5sYXN0UmVuZGVyZWRSZWR1Y2VyLG51bGwhPT1mKSl0cnl7dmFyIGc9Yi5sYXN0UmVuZGVyZWRTdGF0ZSxoPWYoZyxjKTtlLmVhZ2VyUmVkdWNlcj1mO2UuZWFnZXJTdGF0ZT1oO2lmKHZiKGgsZykpcmV0dXJufWNhdGNoKGspe31maW5hbGx5e31WYihhLFxuZCl9fVxudmFyIEZjPXtyZWFkQ29udGV4dDpKLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZVJlc3BvbmRlcjpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlF9LENjPXtyZWFkQ29udGV4dDpKLHVzZUNhbGxiYWNrOlhjLHVzZUNvbnRleHQ6Six1c2VFZmZlY3Q6UmMsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFBjKDQsMixVYy5iaW5kKG51bGwsYixhKSxjKX0sdXNlTGF5b3V0RWZmZWN0OmZ1bmN0aW9uKGEsYil7cmV0dXJuIFBjKDQsMixhLGIpfSx1c2VNZW1vOmZ1bmN0aW9uKGEsYil7dmFyIGM9R2MoKTtiPXZvaWQgMD09PWI/bnVsbDpiO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxcbmJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1HYygpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPU1jLmJpbmQobnVsbCxNLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpmdW5jdGlvbihhKXt2YXIgYj1HYygpO2E9e2N1cnJlbnQ6YX07cmV0dXJuIGIubWVtb2l6ZWRTdGF0ZT1hfSx1c2VTdGF0ZTpMYyx1c2VEZWJ1Z1ZhbHVlOldjLHVzZVJlc3BvbmRlcjp3Yyx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9TGMoYSksZD1jWzBdLGU9Y1sxXTtSYyhmdW5jdGlvbigpe3ZhciBjPUwuc3VzcGVuc2U7TC5zdXNwZW5zZT12b2lkIDA9PT1iP251bGw6Yjt0cnl7ZShhKX1maW5hbGx5e0wuc3VzcGVuc2U9Y319LFxuW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPUxjKCExKSxjPWJbMF07Yj1iWzFdO3JldHVybltYYygkYy5iaW5kKG51bGwsYixhKSxbYixhXSksY119fSxEYz17cmVhZENvbnRleHQ6Six1c2VDYWxsYmFjazpZYyx1c2VDb250ZXh0OkosdXNlRWZmZWN0OlNjLHVzZUltcGVyYXRpdmVIYW5kbGU6VmMsdXNlTGF5b3V0RWZmZWN0OlRjLHVzZU1lbW86WmMsdXNlUmVkdWNlcjpKYyx1c2VSZWY6T2MsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gSmMoSWMpfSx1c2VEZWJ1Z1ZhbHVlOldjLHVzZVJlc3BvbmRlcjp3Yyx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEsYil7dmFyIGM9SmMoSWMpLGQ9Y1swXSxlPWNbMV07U2MoZnVuY3Rpb24oKXt2YXIgYz1MLnN1c3BlbnNlO0wuc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtMLnN1c3BlbnNlPWN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9XG5KYyhJYyksYz1iWzBdO2I9YlsxXTtyZXR1cm5bWWMoJGMuYmluZChudWxsLGIsYSksW2IsYV0pLGNdfX0sRWM9e3JlYWRDb250ZXh0OkosdXNlQ2FsbGJhY2s6WWMsdXNlQ29udGV4dDpKLHVzZUVmZmVjdDpTYyx1c2VJbXBlcmF0aXZlSGFuZGxlOlZjLHVzZUxheW91dEVmZmVjdDpUYyx1c2VNZW1vOlpjLHVzZVJlZHVjZXI6S2MsdXNlUmVmOk9jLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIEtjKEljKX0sdXNlRGVidWdWYWx1ZTpXYyx1c2VSZXNwb25kZXI6d2MsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPUtjKEljKSxkPWNbMF0sZT1jWzFdO1NjKGZ1bmN0aW9uKCl7dmFyIGM9TC5zdXNwZW5zZTtMLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXtlKGEpfWZpbmFsbHl7TC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPUtjKEljKSxjPWJbMF07Yj1iWzFdO3JldHVybltZYygkYy5iaW5kKG51bGwsXG5iLGEpLFtiLGFdKSxjXX19LGFkPXQuUmVhY3RDdXJyZW50T3duZXIsST0hMTtmdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/a2MoYixudWxsLGMsZCk6amMoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gYmQoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO0ZiKGIsZSk7ZD1CYyhhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFJKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5lZmZlY3RUYWcmPS01MTcsYS5leHBpcmF0aW9uVGltZTw9ZSYmKGEuZXhwaXJhdGlvblRpbWU9MCksY2QoYSxiLGUpO2IuZWZmZWN0VGFnfD0xO1IoYSxiLGQsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBkZChhLGIsYyxkLGUsZil7aWYobnVsbD09PWEpe3ZhciBnPWMudHlwZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmIWVkKGcpJiZ2b2lkIDA9PT1nLmRlZmF1bHRQcm9wcyYmbnVsbD09PWMuY29tcGFyZSYmdm9pZCAwPT09Yy5kZWZhdWx0UHJvcHMpcmV0dXJuIGIudGFnPTE1LGIudHlwZT1nLGZkKGEsYixnLGQsZSxmKTthPWdjKGMudHlwZSxudWxsLGQsbnVsbCxiLm1vZGUsZik7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfWc9YS5jaGlsZDtpZihlPGYmJihlPWcubWVtb2l6ZWRQcm9wcyxjPWMuY29tcGFyZSxjPW51bGwhPT1jP2M6eGIsYyhlLGQpJiZhLnJlZj09PWIucmVmKSlyZXR1cm4gY2QoYSxiLGYpO2IuZWZmZWN0VGFnfD0xO2E9ZWMoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBmZChhLGIsYyxkLGUsZil7cmV0dXJuIG51bGwhPT1hJiZ4YihhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYmJihJPSExLGU8Zik/KGIuZXhwaXJhdGlvblRpbWU9YS5leHBpcmF0aW9uVGltZSxjZChhLGIsZikpOmdkKGEsYixjLGQsZil9ZnVuY3Rpb24gaGQoYSxiKXt2YXIgYz1iLnJlZjtpZihudWxsPT09YSYmbnVsbCE9PWN8fG51bGwhPT1hJiZhLnJlZiE9PWMpYi5lZmZlY3RUYWd8PTEyOH1mdW5jdGlvbiBnZChhLGIsYyxkLGUpe3ZhciBmPUYoYyk/UGE6RC5jdXJyZW50O2Y9UWEoYixmKTtGYihiLGUpO2M9QmMoYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhSSlyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLGNkKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWQoYSxiLGMsZCxlKXtpZihGKGMpKXt2YXIgZj0hMDtVYShiKX1lbHNlIGY9ITE7RmIoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLFliKGIsYyxkKSwkYihiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1KKGwpOihsPUYoYyk/UGE6RC5jdXJyZW50LGw9UWEoYixsKSk7dmFyIHA9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMscT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgcHx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7cXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJlpiKGIsZyxkLGwpO0diPSExO3ZhciB2PWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXY7TWIoYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHYhPT1rfHxFLmN1cnJlbnR8fEdiPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgcCYmKFNiKGIsYyxwLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD1HYnx8WGIoYixjLGgsZCx2LGssbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9ayksZy5wcm9wcz1kLGcuc3RhdGU9ayxnLmNvbnRleHQ9bCxkPWgpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGc9Yi5zdGF0ZU5vZGUsSWIoYSxiKSxoPWIubWVtb2l6ZWRQcm9wcyxnLnByb3BzPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpIKGIudHlwZSxoKSxrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGUsXCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPUoobCk6KGw9RihjKT9QYTpELmN1cnJlbnQsbD1RYShiLGwpKSxwPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChxPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBwfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZaYihiLGcsZCxsKSxHYj0hMSxrPWIubWVtb2l6ZWRTdGF0ZSxnLnN0YXRlPWssTWIoYixkLGcsZSksdj1iLm1lbW9pemVkU3RhdGUsaCE9PWR8fGshPT12fHxFLmN1cnJlbnR8fEdiPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgcCYmKFNiKGIsYyxwLGQpLHY9Yi5tZW1vaXplZFN0YXRlKSwocD1HYnx8WGIoYixjLGgsZCxrLHYsbCkpPyhxfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLHYsbCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUmJlxuZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHYsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXYpLGcucHJvcHM9ZCxnLnN0YXRlPXYsZy5jb250ZXh0PWwsZD1wKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZcbms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gamQoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlLGYpe2hkKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZWYShiLGMsITEpLGNkKGEsYixmKTtkPWIuc3RhdGVOb2RlO2FkLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPWpjKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9amMoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmVmEoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBrZChhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P1NhKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJlNhKGEsYi5jb250ZXh0LCExKTtyYyhhLGIuY29udGFpbmVySW5mbyl9XG52YXIgbGQ9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiBtZChhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1LLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtDKEssZiYxKTtpZihudWxsPT09YSl7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9aWMobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1pYyhnLGQsYyxudWxsKTtjLnJldHVybj1iO2Uuc2libGluZz1jO2IubWVtb2l6ZWRTdGF0ZT1cbmxkO2IuY2hpbGQ9ZTtyZXR1cm4gY31kPWUuY2hpbGRyZW47Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9a2MoYixudWxsLGQsYyl9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7YT1hLmNoaWxkO2Q9YS5zaWJsaW5nO2lmKGcpe2U9ZS5mYWxsYmFjaztjPWVjKGEsYS5wZW5kaW5nUHJvcHMpO2MucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikmJihnPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1hLmNoaWxkKSlmb3IoYy5jaGlsZD1nO251bGwhPT1nOylnLnJldHVybj1jLGc9Zy5zaWJsaW5nO2Q9ZWMoZCxlKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1sZDtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1qYyhiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1jfWE9YS5jaGlsZDtpZihnKXtnPWUuZmFsbGJhY2s7XG5lPWljKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9aWMoZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9bGQ7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPWpjKGIsYSxlLmNoaWxkcmVuLGMpfWZ1bmN0aW9uIG5kKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTtFYihhLnJldHVybixiKX1cbmZ1bmN0aW9uIG9kKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsRXhwaXJhdGlvbj0wLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBwZChhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1IoYSxiLGQuY2hpbGRyZW4sYyk7ZD1LLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5lZmZlY3RUYWd8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbmQoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpbmQoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9QyhLLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT12YyhhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO29kKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PXZjKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1vZChiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6b2QoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGNkKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZPYihkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IobigxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9ZWMoYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPWVjKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9dmFyIHFkLHJkLHNkLHRkO1xucWQ9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXt2YXIgZD1hLGU9Yy5zdGF0ZU5vZGUsZj1kLmNoaWxkcmVuLmluZGV4T2YoZSk7LTEhPT1mJiZkLmNoaWxkcmVuLnNwbGljZShmLDEpO2QuY2hpbGRyZW4ucHVzaChlKX1lbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtyZD1mdW5jdGlvbigpe307c2Q9ZnVuY3Rpb24oYSxiLGMsZCl7YS5tZW1vaXplZFByb3BzIT09ZCYmKHFjKG1jLmN1cnJlbnQpLGIudXBkYXRlUXVldWU9RGEpJiYoYi5lZmZlY3RUYWd8PTQpfTtcbnRkPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5lZmZlY3RUYWd8PTQpfTtmdW5jdGlvbiB1ZChhLGIpe3N3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiB2ZChhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEYoYi50eXBlKSYmUmEoKSxudWxsO2Nhc2UgMzpyZXR1cm4gc2MoKSxCKEUpLEIoRCksYT1iLnN0YXRlTm9kZSxhLnBlbmRpbmdDb250ZXh0JiYoYS5jb250ZXh0PWEucGVuZGluZ0NvbnRleHQsYS5wZW5kaW5nQ29udGV4dD1udWxsKSxyZChiKSxudWxsO2Nhc2UgNTp1YyhiKTt2YXIgZT1xYyhwYy5jdXJyZW50KTtjPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpc2QoYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCk7ZWxzZXtpZighZCl7aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKG4oMTY2KSk7cmV0dXJuIG51bGx9cWMobWMuY3VycmVudCk7XG5hPXt0eXBlOmMscHJvcHM6ZCxpc0hpZGRlbjohMSxjaGlsZHJlbjpbXSxpbnRlcm5hbEluc3RhbmNlSGFuZGxlOmIscm9vdENvbnRhaW5lckluc3RhbmNlOmUsdGFnOlwiSU5TVEFOQ0VcIn07cWQoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO251bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSl0ZChhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IobigxNjYpKTtxYyhwYy5jdXJyZW50KTtxYyhtYy5jdXJyZW50KTtiLnN0YXRlTm9kZT17dGV4dDpkLGlzSGlkZGVuOiExLHRhZzpcIlRFWFRcIn19cmV0dXJuIG51bGw7Y2FzZSAxMzpCKEspO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5lZmZlY3RUYWcmNjQpKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWMsYjtkPW51bGwhPT1kO2U9ITE7aWYobnVsbCE9PWEmJlxuKGM9YS5tZW1vaXplZFN0YXRlLGU9bnVsbCE9PWMsIWQmJm51bGwhPT1jJiYoYz1hLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWMpKSl7dmFyIGY9Yi5maXJzdEVmZmVjdDtudWxsIT09Zj8oYi5maXJzdEVmZmVjdD1jLGMubmV4dEVmZmVjdD1mKTooYi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YyxjLm5leHRFZmZlY3Q9bnVsbCk7Yy5lZmZlY3RUYWc9OH1pZihkJiYhZSYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KEsuY3VycmVudCYxKSlTPT09d2QmJihTPXhkKTtlbHNle2lmKFM9PT13ZHx8Uz09PXhkKVM9eWQ7MCE9PXpkJiZudWxsIT09VCYmKEFkKFQsVSksQmQoVCx6ZCkpfWlmKGR8fGUpYi5lZmZlY3RUYWd8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBzYygpLHJkKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gRGIoYiksbnVsbDtjYXNlIDE3OnJldHVybiBGKGIudHlwZSkmJlxuUmEoKSxudWxsO2Nhc2UgMTk6QihLKTtkPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtlPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2Y9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWYpaWYoZSl1ZChkLCExKTtlbHNle2lmKFMhPT13ZHx8bnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtmPXZjKGEpO2lmKG51bGwhPT1mKXtiLmVmZmVjdFRhZ3w9NjQ7dWQoZCwhMSk7YT1mLnVwZGF0ZVF1ZXVlO251bGwhPT1hJiYoYi51cGRhdGVRdWV1ZT1hLGIuZWZmZWN0VGFnfD00KTtudWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2E9Yztmb3IoZD1iLmNoaWxkO251bGwhPT1kOyllPWQsYz1hLGUuZWZmZWN0VGFnJj0yLGUubmV4dEVmZmVjdD1udWxsLGUuZmlyc3RFZmZlY3Q9bnVsbCxlLmxhc3RFZmZlY3Q9bnVsbCxmPWUuYWx0ZXJuYXRlLG51bGw9PT1mP1xuKGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGUuZXhwaXJhdGlvblRpbWU9YyxlLmNoaWxkPW51bGwsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwpOihlLmNoaWxkRXhwaXJhdGlvblRpbWU9Zi5jaGlsZEV4cGlyYXRpb25UaW1lLGUuZXhwaXJhdGlvblRpbWU9Zi5leHBpcmF0aW9uVGltZSxlLmNoaWxkPWYuY2hpbGQsZS5tZW1vaXplZFByb3BzPWYubWVtb2l6ZWRQcm9wcyxlLm1lbW9pemVkU3RhdGU9Zi5tZW1vaXplZFN0YXRlLGUudXBkYXRlUXVldWU9Zi51cGRhdGVRdWV1ZSxjPWYuZGVwZW5kZW5jaWVzLGUuZGVwZW5kZW5jaWVzPW51bGw9PT1jP251bGw6e2V4cGlyYXRpb25UaW1lOmMuZXhwaXJhdGlvblRpbWUsZmlyc3RDb250ZXh0OmMuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yy5yZXNwb25kZXJzfSksZD1kLnNpYmxpbmc7QyhLLEsuY3VycmVudCYxfDIpO3JldHVybiBiLmNoaWxkfWE9XG5hLnNpYmxpbmd9fWVsc2V7aWYoIWUpaWYoYT12YyhmKSxudWxsIT09YSl7aWYoYi5lZmZlY3RUYWd8PTY0LGU9ITAsYT1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1hJiYoYi51cGRhdGVRdWV1ZT1hLGIuZWZmZWN0VGFnfD00KSx1ZChkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWYuYWx0ZXJuYXRlKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqRygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPmQudGFpbEV4cGlyYXRpb24mJjE8YyYmKGIuZWZmZWN0VGFnfD02NCxlPSEwLHVkKGQsITEpLGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWMtMSk7ZC5pc0JhY2t3YXJkcz8oZi5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1mKTooYT1kLmxhc3QsbnVsbCE9PWE/YS5zaWJsaW5nPWY6Yi5jaGlsZD1mLGQubGFzdD1mKX1yZXR1cm4gbnVsbCE9PWQudGFpbD9cbigwPT09ZC50YWlsRXhwaXJhdGlvbiYmKGQudGFpbEV4cGlyYXRpb249RygpKzUwMCksYT1kLnRhaWwsZC5yZW5kZXJpbmc9YSxkLnRhaWw9YS5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9RygpLGEuc2libGluZz1udWxsLGI9Sy5jdXJyZW50LEMoSyxlP2ImMXwyOmImMSksYSk6bnVsbH10aHJvdyBFcnJvcihuKDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIENkKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkYoYS50eXBlKSYmUmEoKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOnNjKCk7QihFKTtCKEQpO2I9YS5lZmZlY3RUYWc7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcihuKDI4NSkpO2EuZWZmZWN0VGFnPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiB1YyhhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEIoSyksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBCKEspLG51bGw7Y2FzZSA0OnJldHVybiBzYygpLG51bGw7Y2FzZSAxMDpyZXR1cm4gRGIoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBEZChhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOkxhKGIpfX1cbnZhciBFZD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBGZChhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPUxhKGMpKTtudWxsIT09YyYmeGEoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmeGEoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gR2QoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe0hkKGEsYyl9fWZ1bmN0aW9uIElkKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe0hkKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIEpkKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOkgoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmNhc2UgNTpjYXNlIDY6Y2FzZSA0OmNhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKG4oMTYzKSk7fVxuZnVuY3Rpb24gS2QoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5kZXN0cm95O2MuZGVzdHJveT12b2lkIDA7dm9pZCAwIT09ZCYmZCgpfWM9Yy5uZXh0fXdoaWxlKGMhPT1iKX19ZnVuY3Rpb24gTWQoYSxiKXtiPWIudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7dmFyIGM9Yj1iLm5leHQ7ZG97aWYoKGMudGFnJmEpPT09YSl7dmFyIGQ9Yy5jcmVhdGU7Yy5kZXN0cm95PWQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fVxuZnVuY3Rpb24gTmQoYSxiLGMpe3N3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOk1kKDMsYyk7cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2lmKGMuZWZmZWN0VGFnJjQpaWYobnVsbD09PWIpYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6SChjLnR5cGUsYi5tZW1vaXplZFByb3BzKTthLmNvbXBvbmVudERpZFVwZGF0ZShkLGIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX1iPWMudXBkYXRlUXVldWU7bnVsbCE9PWImJlBiKGMsYixhKTtyZXR1cm47Y2FzZSAzOmI9Yy51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YT1udWxsO2lmKG51bGwhPT1jLmNoaWxkKXN3aXRjaChjLmNoaWxkLnRhZyl7Y2FzZSA1OmE9RmEoYy5jaGlsZC5zdGF0ZU5vZGUpO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfVBiKGMsYixhKX1yZXR1cm47XG5jYXNlIDU6cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOnJldHVybn10aHJvdyBFcnJvcihuKDE2MykpO31cbmZ1bmN0aW9uIE9kKGEsYixjKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgUGQmJlBkKGIpO3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6YT1iLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hJiYoYT1hLmxhc3RFZmZlY3QsbnVsbCE9PWEpKXt2YXIgZD1hLm5leHQ7cGIoOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGE9ZDtkb3t2YXIgYz1hLmRlc3Ryb3k7aWYodm9pZCAwIT09Yyl7dmFyIGc9Yjt0cnl7YygpfWNhdGNoKGgpe0hkKGcsaCl9fWE9YS5uZXh0fXdoaWxlKGEhPT1kKX0pfWJyZWFrO2Nhc2UgMTpJZChiKTtjPWIuc3RhdGVOb2RlO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmNvbXBvbmVudFdpbGxVbm1vdW50JiZHZChiLGMpO2JyZWFrO2Nhc2UgNTpJZChiKTticmVhaztjYXNlIDQ6UWQoYSxiLGMpfX1cbmZ1bmN0aW9uIFJkKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2EucmV0dXJuPW51bGw7YS5jaGlsZD1udWxsO2EubWVtb2l6ZWRTdGF0ZT1udWxsO2EudXBkYXRlUXVldWU9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuYWx0ZXJuYXRlPW51bGw7YS5maXJzdEVmZmVjdD1udWxsO2EubGFzdEVmZmVjdD1udWxsO2EucGVuZGluZ1Byb3BzPW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5zdGF0ZU5vZGU9bnVsbDtudWxsIT09YiYmUmQoYil9ZnVuY3Rpb24gU2QoYSl7cmV0dXJuIDU9PT1hLnRhZ3x8Mz09PWEudGFnfHw0PT09YS50YWd9XG5mdW5jdGlvbiBUZChhKXthOntmb3IodmFyIGI9YS5yZXR1cm47bnVsbCE9PWI7KXtpZihTZChiKSl7dmFyIGM9YjticmVhayBhfWI9Yi5yZXR1cm59dGhyb3cgRXJyb3IobigxNjApKTt9Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKG4oMTYxKSk7fWMuZWZmZWN0VGFnJjE2JiYoYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxTZChjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7aWYobnVsbD09PVxuYy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWQ/VWQoYSxjLGIpOlZkKGEsYyxiKX1mdW5jdGlvbiBVZChhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9IYShjLGEsYik6R2EoYyxhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoVWQoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylVZChhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBWZChhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9IYShjLGEsYik6R2EoYyxhKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoVmQoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylWZChhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBRZChhLGIsYyl7Zm9yKHZhciBkPWIsZT0hMSxmOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcihuKDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6YnJlYWsgYTtjYXNlIDM6Zj1mLmNvbnRhaW5lckluZm87YnJlYWsgYTtjYXNlIDQ6Zj1mLmNvbnRhaW5lckluZm87YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBnPWEsaD1kLGs9YyxsPWg7OylpZihPZChnLGwsayksbnVsbCE9PWwuY2hpbGQmJjQhPT1sLnRhZylsLmNoaWxkLnJldHVybj1sLGw9bC5jaGlsZDtlbHNle2lmKGw9PT1oKWJyZWFrIGE7Zm9yKDtudWxsPT09bC5zaWJsaW5nOyl7aWYobnVsbD09PWwucmV0dXJufHxsLnJldHVybj09PWgpYnJlYWsgYTtsPWwucmV0dXJufWwuc2libGluZy5yZXR1cm49bC5yZXR1cm47bD1sLnNpYmxpbmd9Zz1mO2g9Zy5jaGlsZHJlbi5pbmRleE9mKGQuc3RhdGVOb2RlKTtcbmcuY2hpbGRyZW4uc3BsaWNlKGgsMSl9ZWxzZSBpZig0PT09ZC50YWcpe2lmKG51bGwhPT1kLmNoaWxkKXtmPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoT2QoYSxkLGMpLG51bGwhPT1kLmNoaWxkKXtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX1pZihkPT09YilicmVhaztmb3IoO251bGw9PT1kLnNpYmxpbmc7KXtpZihudWxsPT09ZC5yZXR1cm58fGQucmV0dXJuPT09YilyZXR1cm47ZD1kLnJldHVybjs0PT09ZC50YWcmJihlPSExKX1kLnNpYmxpbmcucmV0dXJuPWQucmV0dXJuO2Q9ZC5zaWJsaW5nfX1cbmZ1bmN0aW9uIFdkKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjpLZCgzLGIpO3JldHVybjtjYXNlIDE6cmV0dXJuO2Nhc2UgNTphPWIuc3RhdGVOb2RlO2lmKG51bGwhPWEpe3ZhciBjPWIubWVtb2l6ZWRQcm9wcyxkPWIudHlwZSxlPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1lJiYoYS50eXBlPWQsYS5wcm9wcz1jKX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcihuKDE2MikpO2Iuc3RhdGVOb2RlLnRleHQ9Yi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6YT1iO251bGw9PT1iLm1lbW9pemVkU3RhdGU/Yz0hMTooYz0hMCxhPWIuY2hpbGQsWGQ9RygpKTtpZihudWxsIT09YSlhOmZvcihkPWE7Oyl7aWYoNT09PWQudGFnKWU9ZC5zdGF0ZU5vZGUsYz9lLmlzSGlkZGVuPSEwOmQuc3RhdGVOb2RlLmlzSGlkZGVuPVxuITE7ZWxzZSBpZig2PT09ZC50YWcpZC5zdGF0ZU5vZGUuaXNIaWRkZW49Yz8hMDohMTtlbHNlIGlmKDEzPT09ZC50YWcmJm51bGwhPT1kLm1lbW9pemVkU3RhdGUmJm51bGw9PT1kLm1lbW9pemVkU3RhdGUuZGVoeWRyYXRlZCl7ZT1kLmNoaWxkLnNpYmxpbmc7ZS5yZXR1cm49ZDtkPWU7Y29udGludWV9ZWxzZSBpZihudWxsIT09ZC5jaGlsZCl7ZC5jaGlsZC5yZXR1cm49ZDtkPWQuY2hpbGQ7Y29udGludWV9aWYoZD09PWEpYnJlYWs7Zm9yKDtudWxsPT09ZC5zaWJsaW5nOyl7aWYobnVsbD09PWQucmV0dXJufHxkLnJldHVybj09PWEpYnJlYWsgYTtkPWQucmV0dXJufWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9WWQoYik7cmV0dXJuO2Nhc2UgMTk6WWQoYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJufXRocm93IEVycm9yKG4oMTYzKSk7fVxuZnVuY3Rpb24gWWQoYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgRWQpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1aZC5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX12YXIgJGQ9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gYWUoYSxiLGMpe2M9SmIoYyxudWxsKTtjLnRhZz0zO2MucGF5bG9hZD17ZWxlbWVudDpudWxsfTt2YXIgZD1iLnZhbHVlO2MuY2FsbGJhY2s9ZnVuY3Rpb24oKXtiZXx8KGJlPSEwLGNlPWQpO0ZkKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gZGUoYSxiLGMpe2M9SmIoYyxudWxsKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7RmQoYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PWVlP2VlPW5ldyBTZXQoW3RoaXNdKTplZS5hZGQodGhpcyksRmQoYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9XG52YXIgZmU9TWF0aC5jZWlsLGdlPXQuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixoZT10LlJlYWN0Q3VycmVudE93bmVyLFY9MCxpZT04LGplPTE2LGtlPTMyLHdkPTAsbGU9MSxtZT0yLHhkPTMseWQ9NCxuZT01LFc9VixUPW51bGwsWD1udWxsLFU9MCxTPXdkLG9lPW51bGwscGU9MTA3Mzc0MTgyMyxxZT0xMDczNzQxODIzLHJlPW51bGwsemQ9MCxzZT0hMSxYZD0wLHRlPTUwMCxZPW51bGwsYmU9ITEsY2U9bnVsbCxlZT1udWxsLHVlPSExLHZlPW51bGwsd2U9OTAseGU9bnVsbCx5ZT0wLHplPW51bGwsQWU9MDtmdW5jdGlvbiBUYigpe3JldHVybihXJihqZXxrZSkpIT09Vj8xMDczNzQxODIxLShHKCkvMTB8MCk6MCE9PUFlP0FlOkFlPTEwNzM3NDE4MjEtKEcoKS8xMHwwKX1cbmZ1bmN0aW9uIFViKGEsYixjKXtiPWIubW9kZTtpZigwPT09KGImMikpcmV0dXJuIDEwNzM3NDE4MjM7dmFyIGQ9bmIoKTtpZigwPT09KGImNCkpcmV0dXJuIDk5PT09ZD8xMDczNzQxODIzOjEwNzM3NDE4MjI7aWYoKFcmamUpIT09VilyZXR1cm4gVTtpZihudWxsIT09YylhPTEwNzM3NDE4MjEtMjUqKCgoMTA3Mzc0MTgyMS1hKyhjLnRpbWVvdXRNc3wwfHw1RTMpLzEwKS8yNXwwKSsxKTtlbHNlIHN3aXRjaChkKXtjYXNlIDk5OmE9MTA3Mzc0MTgyMzticmVhaztjYXNlIDk4OmE9MTA3Mzc0MTgyMS0xMCooKCgxMDczNzQxODIxLWErMTUpLzEwfDApKzEpO2JyZWFrO2Nhc2UgOTc6Y2FzZSA5NjphPTEwNzM3NDE4MjEtMjUqKCgoMTA3Mzc0MTgyMS1hKzUwMCkvMjV8MCkrMSk7YnJlYWs7Y2FzZSA5NTphPTI7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcihuKDMyNikpO31udWxsIT09VCYmYT09PVUmJi0tYTtyZXR1cm4gYX1cbmZ1bmN0aW9uIFZiKGEsYil7aWYoNTA8eWUpdGhyb3cgeWU9MCx6ZT1udWxsLEVycm9yKG4oMTg1KSk7YT1CZShhLGIpO2lmKG51bGwhPT1hKXt2YXIgYz1uYigpOzEwNzM3NDE4MjM9PT1iPyhXJmllKSE9PVYmJihXJihqZXxrZSkpPT09Vj9DZShhKTooWihhKSxXPT09ViYmdGIoKSk6WihhKTsoVyY0KT09PVZ8fDk4IT09YyYmOTkhPT1jfHwobnVsbD09PXhlP3hlPW5ldyBNYXAoW1thLGJdXSk6KGM9eGUuZ2V0KGEpLCh2b2lkIDA9PT1jfHxjPmIpJiZ4ZS5zZXQoYSxiKSkpfX1cbmZ1bmN0aW9uIEJlKGEsYil7YS5leHBpcmF0aW9uVGltZTxiJiYoYS5leHBpcmF0aW9uVGltZT1iKTt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYy5leHBpcmF0aW9uVGltZTxiJiYoYy5leHBpcmF0aW9uVGltZT1iKTt2YXIgZD1hLnJldHVybixlPW51bGw7aWYobnVsbD09PWQmJjM9PT1hLnRhZyllPWEuc3RhdGVOb2RlO2Vsc2UgZm9yKDtudWxsIT09ZDspe2M9ZC5hbHRlcm5hdGU7ZC5jaGlsZEV4cGlyYXRpb25UaW1lPGImJihkLmNoaWxkRXhwaXJhdGlvblRpbWU9Yik7bnVsbCE9PWMmJmMuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoYy5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO2lmKG51bGw9PT1kLnJldHVybiYmMz09PWQudGFnKXtlPWQuc3RhdGVOb2RlO2JyZWFrfWQ9ZC5yZXR1cm59bnVsbCE9PWUmJihUPT09ZSYmKE9iKGIpLFM9PT15ZCYmQWQoZSxVKSksQmQoZSxiKSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBEZShhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtpZigwIT09YilyZXR1cm4gYjtiPWEuZmlyc3RQZW5kaW5nVGltZTtpZighRWUoYSxiKSlyZXR1cm4gYjt2YXIgYz1hLmxhc3RQaW5nZWRUaW1lO2E9YS5uZXh0S25vd25QZW5kaW5nTGV2ZWw7YT1jPmE/YzphO3JldHVybiAyPj1hJiZiIT09YT8wOmF9XG5mdW5jdGlvbiBaKGEpe2lmKDAhPT1hLmxhc3RFeHBpcmVkVGltZSlhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MTA3Mzc0MTgyMyxhLmNhbGxiYWNrUHJpb3JpdHk9OTksYS5jYWxsYmFja05vZGU9cmIoQ2UuYmluZChudWxsLGEpKTtlbHNle3ZhciBiPURlKGEpLGM9YS5jYWxsYmFja05vZGU7aWYoMD09PWIpbnVsbCE9PWMmJihhLmNhbGxiYWNrTm9kZT1udWxsLGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT0wLGEuY2FsbGJhY2tQcmlvcml0eT05MCk7ZWxzZXt2YXIgZD1UYigpOzEwNzM3NDE4MjM9PT1iP2Q9OTk6MT09PWJ8fDI9PT1iP2Q9OTU6KGQ9MTAqKDEwNzM3NDE4MjEtYiktMTAqKDEwNzM3NDE4MjEtZCksZD0wPj1kPzk5OjI1MD49ZD85ODo1MjUwPj1kPzk3Ojk1KTtpZihudWxsIT09Yyl7dmFyIGU9YS5jYWxsYmFja1ByaW9yaXR5O2lmKGEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT09PWImJmU+PWQpcmV0dXJuO2MhPT1nYiYmWWEoYyl9YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPVxuYjthLmNhbGxiYWNrUHJpb3JpdHk9ZDtiPTEwNzM3NDE4MjM9PT1iP3JiKENlLmJpbmQobnVsbCxhKSk6cWIoZCxGZS5iaW5kKG51bGwsYSkse3RpbWVvdXQ6MTAqKDEwNzM3NDE4MjEtYiktRygpfSk7YS5jYWxsYmFja05vZGU9Yn19fVxuZnVuY3Rpb24gRmUoYSxiKXtBZT0wO2lmKGIpe2I9VGIoKTt2YXIgYz1hLmxhc3RFeHBpcmVkVGltZTtpZigwPT09Y3x8Yz5iKWEubGFzdEV4cGlyZWRUaW1lPWI7WihhKTtyZXR1cm4gbnVsbH1jPURlKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChXJihqZXxrZSkpIT09Vil0aHJvdyBFcnJvcihuKDMyNykpO0dlKCk7YT09PVQmJmM9PT1VfHxIZShhLGMpO2lmKG51bGwhPT1YKXt2YXIgZD1XO1d8PWplO3ZhciBlPUllKCk7ZG8gdHJ5e0plKCk7YnJlYWt9Y2F0Y2goaCl7S2UoYSxoKX13aGlsZSgxKTtDYigpO1c9ZDtnZS5jdXJyZW50PWU7aWYoUz09PWxlKXRocm93IGI9b2UsSGUoYSxjKSxBZChhLGMpLFooYSksYjtpZihudWxsPT09WClzd2l0Y2goZT1hLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlLGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1jLGQ9UyxUPW51bGwsZCl7Y2FzZSB3ZDpjYXNlIGxlOnRocm93IEVycm9yKG4oMzQ1KSk7Y2FzZSBtZTpjPVxuMjxjPzI6YztkPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1kfHxkPmMpYS5sYXN0RXhwaXJlZFRpbWU9YzticmVhaztjYXNlIHhkOkFkKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9TGUoZSkpO2lmKDEwNzM3NDE4MjM9PT1wZSYmKGU9WGQrdGUtRygpLDEwPGUpKXtpZihzZSl7dmFyIGY9YS5sYXN0UGluZ2VkVGltZTtpZigwPT09Znx8Zj49Yyl7YS5sYXN0UGluZ2VkVGltZT1jO0hlKGEsYyk7YnJlYWt9fWY9RGUoYSk7aWYoMCE9PWYmJmYhPT1jKWJyZWFrO2lmKDAhPT1kJiZkIT09Yyl7YS5sYXN0UGluZ2VkVGltZT1kO2JyZWFrfWEudGltZW91dEhhbmRsZT1JYShNZS5iaW5kKG51bGwsYSksZSk7YnJlYWt9TWUoYSk7YnJlYWs7Y2FzZSB5ZDpBZChhLGMpO2Q9YS5sYXN0U3VzcGVuZGVkVGltZTtjPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUxlKGUpKTtpZihzZSYmKGU9YS5sYXN0UGluZ2VkVGltZSwwPT09XG5lfHxlPj1jKSl7YS5sYXN0UGluZ2VkVGltZT1jO0hlKGEsYyk7YnJlYWt9ZT1EZShhKTtpZigwIT09ZSYmZSE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPWQ7YnJlYWt9MTA3Mzc0MTgyMyE9PXFlP2Q9MTAqKDEwNzM3NDE4MjEtcWUpLUcoKToxMDczNzQxODIzPT09cGU/ZD0wOihkPTEwKigxMDczNzQxODIxLXBlKS01RTMsZT1HKCksYz0xMCooMTA3Mzc0MTgyMS1jKS1lLGQ9ZS1kLDA+ZCYmKGQ9MCksZD0oMTIwPmQ/MTIwOjQ4MD5kPzQ4MDoxMDgwPmQ/MTA4MDoxOTIwPmQ/MTkyMDozRTM+ZD8zRTM6NDMyMD5kPzQzMjA6MTk2MCpmZShkLzE5NjApKS1kLGM8ZCYmKGQ9YykpO2lmKDEwPGQpe2EudGltZW91dEhhbmRsZT1JYShNZS5iaW5kKG51bGwsYSksZCk7YnJlYWt9TWUoYSk7YnJlYWs7Y2FzZSBuZTppZigxMDczNzQxODIzIT09cGUmJm51bGwhPT1yZSl7Zj1wZTt2YXIgZz1yZTtkPWcuYnVzeU1pbkR1cmF0aW9uTXN8MDswPj1kP2Q9MDooZT1cbmcuYnVzeURlbGF5TXN8MCxmPUcoKS0oMTAqKDEwNzM3NDE4MjEtZiktKGcudGltZW91dE1zfDB8fDVFMykpLGQ9Zjw9ZT8wOmUrZC1mKTtpZigxMDxkKXtBZChhLGMpO2EudGltZW91dEhhbmRsZT1JYShNZS5iaW5kKG51bGwsYSksZCk7YnJlYWt9fU1lKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IobigzMjkpKTt9WihhKTtpZihhLmNhbGxiYWNrTm9kZT09PWIpcmV0dXJuIEZlLmJpbmQobnVsbCxhKX19cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBDZShhKXt2YXIgYj1hLmxhc3RFeHBpcmVkVGltZTtiPTAhPT1iP2I6MTA3Mzc0MTgyMztpZigoVyYoamV8a2UpKSE9PVYpdGhyb3cgRXJyb3IobigzMjcpKTtHZSgpO2E9PT1UJiZiPT09VXx8SGUoYSxiKTtpZihudWxsIT09WCl7dmFyIGM9VztXfD1qZTt2YXIgZD1JZSgpO2RvIHRyeXtOZSgpO2JyZWFrfWNhdGNoKGUpe0tlKGEsZSl9d2hpbGUoMSk7Q2IoKTtXPWM7Z2UuY3VycmVudD1kO2lmKFM9PT1sZSl0aHJvdyBjPW9lLEhlKGEsYiksQWQoYSxiKSxaKGEpLGM7aWYobnVsbCE9PVgpdGhyb3cgRXJyb3IobigyNjEpKTthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1iO1Q9bnVsbDtNZShhKTtaKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIE9lKGEsYil7dmFyIGM9VztXfD0xO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1c9YyxXPT09ViYmdGIoKX19XG5mdW5jdGlvbiBIZShhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxKYShjKSk7aWYobnVsbCE9PVgpZm9yKGM9WC5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZSYSgpO2JyZWFrO2Nhc2UgMzpzYygpO0IoRSk7QihEKTticmVhaztjYXNlIDU6dWMoZCk7YnJlYWs7Y2FzZSA0OnNjKCk7YnJlYWs7Y2FzZSAxMzpCKEspO2JyZWFrO2Nhc2UgMTk6QihLKTticmVhaztjYXNlIDEwOkRiKGQpfWM9Yy5yZXR1cm59VD1hO1g9ZWMoYS5jdXJyZW50LG51bGwpO1U9YjtTPXdkO29lPW51bGw7cWU9cGU9MTA3Mzc0MTgyMztyZT1udWxsO3pkPTA7c2U9ITF9XG5mdW5jdGlvbiBLZShhLGIpe2Rve3RyeXtDYigpO3hjLmN1cnJlbnQ9RmM7aWYoemMpZm9yKHZhciBjPU0ubWVtb2l6ZWRTdGF0ZTtudWxsIT09Yzspe3ZhciBkPWMucXVldWU7bnVsbCE9PWQmJihkLnBlbmRpbmc9bnVsbCk7Yz1jLm5leHR9eWM9MDtPPU49TT1udWxsO3pjPSExO2lmKG51bGw9PT1YfHxudWxsPT09WC5yZXR1cm4pcmV0dXJuIFM9bGUsb2U9YixYPW51bGw7YTp7dmFyIGU9YSxmPVgucmV0dXJuLGc9WCxoPWI7Yj1VO2cuZWZmZWN0VGFnfD0yMDQ4O2cuZmlyc3RFZmZlY3Q9Zy5sYXN0RWZmZWN0PW51bGw7aWYobnVsbCE9PWgmJlwib2JqZWN0XCI9PT10eXBlb2YgaCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGgudGhlbil7dmFyIGs9aDtpZigwPT09KGcubW9kZSYyKSl7dmFyIGw9Zy5hbHRlcm5hdGU7bD8oZy51cGRhdGVRdWV1ZT1sLnVwZGF0ZVF1ZXVlLGcubWVtb2l6ZWRTdGF0ZT1sLm1lbW9pemVkU3RhdGUsZy5leHBpcmF0aW9uVGltZT1sLmV4cGlyYXRpb25UaW1lKTooZy51cGRhdGVRdWV1ZT1cbm51bGwsZy5tZW1vaXplZFN0YXRlPW51bGwpfXZhciBwPTAhPT0oSy5jdXJyZW50JjEpLHE9Zjtkb3t2YXIgdjtpZih2PTEzPT09cS50YWcpe3ZhciB4PXEubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09eCl2PW51bGwhPT14LmRlaHlkcmF0ZWQ/ITA6ITE7ZWxzZXt2YXIgUD1xLm1lbW9pemVkUHJvcHM7dj12b2lkIDA9PT1QLmZhbGxiYWNrPyExOiEwIT09UC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjaz8hMDpwPyExOiEwfX1pZih2KXt2YXIgej1xLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT16KXt2YXIgQT1uZXcgU2V0O0EuYWRkKGspO3EudXBkYXRlUXVldWU9QX1lbHNlIHouYWRkKGspO2lmKDA9PT0ocS5tb2RlJjIpKXtxLmVmZmVjdFRhZ3w9NjQ7Zy5lZmZlY3RUYWcmPS0yOTgxO2lmKDE9PT1nLnRhZylpZihudWxsPT09Zy5hbHRlcm5hdGUpZy50YWc9MTc7ZWxzZXt2YXIgdT1KYigxMDczNzQxODIzLG51bGwpO3UudGFnPTI7S2IoZyx1KX1nLmV4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjM7XG5icmVhayBhfWg9dm9pZCAwO2c9Yjt2YXIgcj1lLnBpbmdDYWNoZTtudWxsPT09cj8ocj1lLnBpbmdDYWNoZT1uZXcgJGQsaD1uZXcgU2V0LHIuc2V0KGssaCkpOihoPXIuZ2V0KGspLHZvaWQgMD09PWgmJihoPW5ldyBTZXQsci5zZXQoayxoKSkpO2lmKCFoLmhhcyhnKSl7aC5hZGQoZyk7dmFyIExkPVBlLmJpbmQobnVsbCxlLGssZyk7ay50aGVuKExkLExkKX1xLmVmZmVjdFRhZ3w9NDA5NjtxLmV4cGlyYXRpb25UaW1lPWI7YnJlYWsgYX1xPXEucmV0dXJufXdoaWxlKG51bGwhPT1xKTtoPUVycm9yKCh4YShnLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIrXG5MYShnKSl9UyE9PW5lJiYoUz1tZSk7aD1EZChoLGcpO3E9Zjtkb3tzd2l0Y2gocS50YWcpe2Nhc2UgMzprPWg7cS5lZmZlY3RUYWd8PTQwOTY7cS5leHBpcmF0aW9uVGltZT1iO3ZhciAkZT1hZShxLGssYik7TGIocSwkZSk7YnJlYWsgYTtjYXNlIDE6az1oO3ZhciBhZj1xLnR5cGUsb2M9cS5zdGF0ZU5vZGU7aWYoMD09PShxLmVmZmVjdFRhZyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYWYuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09b2MmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBvYy5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1lZXx8IWVlLmhhcyhvYykpKSl7cS5lZmZlY3RUYWd8PTQwOTY7cS5leHBpcmF0aW9uVGltZT1iO3ZhciBiZj1kZShxLGssYik7TGIocSxiZik7YnJlYWsgYX19cT1xLnJldHVybn13aGlsZShudWxsIT09cSl9WD1RZShYKX1jYXRjaChjZil7Yj1jZjtjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIEllKCl7dmFyIGE9Z2UuY3VycmVudDtnZS5jdXJyZW50PUZjO3JldHVybiBudWxsPT09YT9GYzphfWZ1bmN0aW9uIE5iKGEsYil7YTxwZSYmMjxhJiYocGU9YSk7bnVsbCE9PWImJmE8cWUmJjI8YSYmKHFlPWEscmU9Yil9ZnVuY3Rpb24gT2IoYSl7YT56ZCYmKHpkPWEpfWZ1bmN0aW9uIE5lKCl7Zm9yKDtudWxsIT09WDspWD1SZShYKX1mdW5jdGlvbiBKZSgpe2Zvcig7bnVsbCE9PVgmJiFoYigpOylYPVJlKFgpfWZ1bmN0aW9uIFJlKGEpe3ZhciBiPVNlKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1RZShhKSk7aGUuY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gUWUoYSl7WD1hO2Rve3ZhciBiPVguYWx0ZXJuYXRlO2E9WC5yZXR1cm47aWYoMD09PShYLmVmZmVjdFRhZyYyMDQ4KSl7Yj12ZChiLFgsVSk7aWYoMT09PVV8fDEhPT1YLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Zvcih2YXIgYz0wLGQ9WC5jaGlsZDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWUsZj1kLmNoaWxkRXhwaXJhdGlvblRpbWU7ZT5jJiYoYz1lKTtmPmMmJihjPWYpO2Q9ZC5zaWJsaW5nfVguY2hpbGRFeHBpcmF0aW9uVGltZT1jfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVguZmlyc3RFZmZlY3QpLG51bGwhPT1YLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WC5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PVgubGFzdEVmZmVjdCksMTxYLmVmZmVjdFRhZyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YOmEuZmlyc3RFZmZlY3Q9WCxhLmxhc3RFZmZlY3Q9WCkpfWVsc2V7Yj1DZChYKTtpZihudWxsIT09YilyZXR1cm4gYi5lZmZlY3RUYWcmPTIwNDcsYjtudWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5lZmZlY3RUYWd8PTIwNDgpfWI9WC5zaWJsaW5nO2lmKG51bGwhPT1iKXJldHVybiBiO1g9YX13aGlsZShudWxsIT09WCk7Uz09PXdkJiYoUz1uZSk7cmV0dXJuIG51bGx9ZnVuY3Rpb24gTGUoYSl7dmFyIGI9YS5leHBpcmF0aW9uVGltZTthPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtyZXR1cm4gYj5hP2I6YX1mdW5jdGlvbiBNZShhKXt2YXIgYj1uYigpO3BiKDk5LFRlLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFRlKGEsYil7ZG8gR2UoKTt3aGlsZShudWxsIT09dmUpO2lmKChXJihqZXxrZSkpIT09Vil0aHJvdyBFcnJvcihuKDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrLGQ9YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcihuKDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTA7YS5jYWxsYmFja1ByaW9yaXR5PTkwO2EubmV4dEtub3duUGVuZGluZ0xldmVsPTA7dmFyIGU9TGUoYyk7YS5maXJzdFBlbmRpbmdUaW1lPWU7ZDw9YS5sYXN0U3VzcGVuZGVkVGltZT9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6ZDw9YS5maXJzdFN1c3BlbmRlZFRpbWUmJihhLmZpcnN0U3VzcGVuZGVkVGltZT1cbmQtMSk7ZDw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7ZDw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKTthPT09VCYmKFg9VD1udWxsLFU9MCk7MTxjLmVmZmVjdFRhZz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGU9Yy5maXJzdEVmZmVjdCk6ZT1jOmU9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZSl7dmFyIGY9VztXfD1rZTtoZS5jdXJyZW50PW51bGw7WT1lO2RvIHRyeXtVZSgpfWNhdGNoKHope2lmKG51bGw9PT1ZKXRocm93IEVycm9yKG4oMzMwKSk7SGQoWSx6KTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1lO2RvIHRyeXtmb3IodmFyIGc9YSxoPWI7bnVsbCE9PVk7KXt2YXIgaz1ZLmVmZmVjdFRhZztpZihrJjEyOCl7dmFyIGw9WS5hbHRlcm5hdGU7aWYobnVsbCE9PWwpe3ZhciBwPWwucmVmO251bGwhPT1wJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHA/cChudWxsKTpwLmN1cnJlbnQ9XG5udWxsKX19c3dpdGNoKGsmMTAzOCl7Y2FzZSAyOlRkKFkpO1kuZWZmZWN0VGFnJj0tMzticmVhaztjYXNlIDY6VGQoWSk7WS5lZmZlY3RUYWcmPS0zO1dkKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgMTAyNDpZLmVmZmVjdFRhZyY9LTEwMjU7YnJlYWs7Y2FzZSAxMDI4OlkuZWZmZWN0VGFnJj0tMTAyNTtXZChZLmFsdGVybmF0ZSxZKTticmVhaztjYXNlIDQ6V2QoWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA4OnZhciBxPVk7UWQoZyxxLGgpO1JkKHEpfVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh6KXtpZihudWxsPT09WSl0aHJvdyBFcnJvcihuKDMzMCkpO0hkKFkseik7WT1ZLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVkpO2EuY3VycmVudD1jO1k9ZTtkbyB0cnl7Zm9yKGs9YTtudWxsIT09WTspe3ZhciB2PVkuZWZmZWN0VGFnO3YmMzYmJk5kKGssWS5hbHRlcm5hdGUsWSk7aWYodiYxMjgpe2w9dm9pZCAwO3ZhciB4PVkucmVmO2lmKG51bGwhPT14KXt2YXIgUD1ZLnN0YXRlTm9kZTtcbnN3aXRjaChZLnRhZyl7Y2FzZSA1Omw9RmEoUCk7YnJlYWs7ZGVmYXVsdDpsPVB9XCJmdW5jdGlvblwiPT09dHlwZW9mIHg/eChsKTp4LmN1cnJlbnQ9bH19WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHope2lmKG51bGw9PT1ZKXRocm93IEVycm9yKG4oMzMwKSk7SGQoWSx6KTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7WT1udWxsO2liKCk7Vz1mfWVsc2UgYS5jdXJyZW50PWM7aWYodWUpdWU9ITEsdmU9YSx3ZT1iO2Vsc2UgZm9yKFk9ZTtudWxsIT09WTspYj1ZLm5leHRFZmZlY3QsWS5uZXh0RWZmZWN0PW51bGwsWT1iO2I9YS5maXJzdFBlbmRpbmdUaW1lOzA9PT1iJiYoZWU9bnVsbCk7MTA3Mzc0MTgyMz09PWI/YT09PXplP3llKys6KHllPTAsemU9YSk6eWU9MDtcImZ1bmN0aW9uXCI9PT10eXBlb2YgVmUmJlZlKGMuc3RhdGVOb2RlLGQpO1ooYSk7aWYoYmUpdGhyb3cgYmU9ITEsYT1jZSxjZT1udWxsLGE7aWYoKFcmaWUpIT09VilyZXR1cm4gbnVsbDt0YigpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gVWUoKXtmb3IoO251bGwhPT1ZOyl7dmFyIGE9WS5lZmZlY3RUYWc7MCE9PShhJjI1NikmJkpkKFkuYWx0ZXJuYXRlLFkpOzA9PT0oYSY1MTIpfHx1ZXx8KHVlPSEwLHFiKDk3LGZ1bmN0aW9uKCl7R2UoKTtyZXR1cm4gbnVsbH0pKTtZPVkubmV4dEVmZmVjdH19ZnVuY3Rpb24gR2UoKXtpZig5MCE9PXdlKXt2YXIgYT05Nzx3ZT85Nzp3ZTt3ZT05MDtyZXR1cm4gcGIoYSxXZSl9fVxuZnVuY3Rpb24gV2UoKXtpZihudWxsPT09dmUpcmV0dXJuITE7dmFyIGE9dmU7dmU9bnVsbDtpZigoVyYoamV8a2UpKSE9PVYpdGhyb3cgRXJyb3IobigzMzEpKTt2YXIgYj1XO1d8PWtlO2ZvcihhPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09YTspe3RyeXt2YXIgYz1hO2lmKDAhPT0oYy5lZmZlY3RUYWcmNTEyKSlzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpLZCg1LGMpLE1kKDUsYyl9fWNhdGNoKGQpe2lmKG51bGw9PT1hKXRocm93IEVycm9yKG4oMzMwKSk7SGQoYSxkKX1jPWEubmV4dEVmZmVjdDthLm5leHRFZmZlY3Q9bnVsbDthPWN9Vz1iO3RiKCk7cmV0dXJuITB9ZnVuY3Rpb24gWGUoYSxiLGMpe2I9RGQoYyxiKTtiPWFlKGEsYiwxMDczNzQxODIzKTtLYihhLGIpO2E9QmUoYSwxMDczNzQxODIzKTtudWxsIT09YSYmWihhKX1cbmZ1bmN0aW9uIEhkKGEsYil7aWYoMz09PWEudGFnKVhlKGEsYSxiKTtlbHNlIGZvcih2YXIgYz1hLnJldHVybjtudWxsIT09Yzspe2lmKDM9PT1jLnRhZyl7WGUoYyxhLGIpO2JyZWFrfWVsc2UgaWYoMT09PWMudGFnKXt2YXIgZD1jLnN0YXRlTm9kZTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09ZWV8fCFlZS5oYXMoZCkpKXthPURkKGIsYSk7YT1kZShjLGEsMTA3Mzc0MTgyMyk7S2IoYyxhKTtjPUJlKGMsMTA3Mzc0MTgyMyk7bnVsbCE9PWMmJlooYyk7YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gUGUoYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtUPT09YSYmVT09PWM/Uz09PXlkfHxTPT09eGQmJjEwNzM3NDE4MjM9PT1wZSYmRygpLVhkPHRlP0hlKGEsVSk6c2U9ITA6RWUoYSxjKSYmKGI9YS5sYXN0UGluZ2VkVGltZSwwIT09YiYmYjxjfHwoYS5sYXN0UGluZ2VkVGltZT1jLFooYSkpKX1mdW5jdGlvbiBaZChhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPVRiKCksYj1VYihiLGEsbnVsbCkpO2E9QmUoYSxiKTtudWxsIT09YSYmWihhKX12YXIgU2U7XG5TZT1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8RS5jdXJyZW50KUk9ITA7ZWxzZXtpZihkPGMpe0k9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6a2QoYik7YnJlYWs7Y2FzZSA1OnRjKGIpO2JyZWFrO2Nhc2UgMTpGKGIudHlwZSkmJlVhKGIpO2JyZWFrO2Nhc2UgNDpyYyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7dmFyIGU9Yi50eXBlLl9jb250ZXh0O0MoeWIsZS5fY3VycmVudFZhbHVlMik7ZS5fY3VycmVudFZhbHVlMj1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7ZD1iLmNoaWxkLmNoaWxkRXhwaXJhdGlvblRpbWU7aWYoMCE9PWQmJmQ+PWMpcmV0dXJuIG1kKGEsYixjKTtDKEssSy5jdXJyZW50JjEpO2I9Y2QoYSxiLGMpO3JldHVybiBudWxsIT09Yj9iLnNpYmxpbmc6XG5udWxsfUMoSyxLLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPWIuY2hpbGRFeHBpcmF0aW9uVGltZT49YztpZigwIT09KGEuZWZmZWN0VGFnJjY0KSl7aWYoZClyZXR1cm4gcGQoYSxiLGMpO2IuZWZmZWN0VGFnfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwpO0MoSyxLLmN1cnJlbnQpO2lmKCFkKXJldHVybiBudWxsfXJldHVybiBjZChhLGIsYyl9ST0hMX1lbHNlIEk9ITE7Yi5leHBpcmF0aW9uVGltZT0wO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmQ9Yi50eXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9UWEoYixELmN1cnJlbnQpO0ZiKGIsYyk7ZT1CYyhudWxsLGIsZCxhLGUsYyk7Yi5lZmZlY3RUYWd8PTE7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBlJiZudWxsIT09ZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGUucmVuZGVyJiZcbnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEYoZCkpe3ZhciBmPSEwO1VhKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO0hiKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZTYihiLGQsZyxhKTtlLnVwZGF0ZXI9V2I7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFsRmliZXI9YjskYihiLGQsYSxjKTtiPWpkKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLFIobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6YTp7ZT1iLmVsZW1lbnRUeXBlO251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKTthPWIucGVuZGluZ1Byb3BzO3dhKGUpO2lmKDEhPT1lLl9zdGF0dXMpdGhyb3cgZS5fcmVzdWx0O1xuZT1lLl9yZXN1bHQ7Yi50eXBlPWU7Zj1iLnRhZz1ZZShlKTthPUgoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9Z2QobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPWlkKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9YmQobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1kZChudWxsLGIsZSxIKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IobigzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6SChkLGUpLGdkKGEsYixkLGUsYyk7Y2FzZSAxOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpIKGQsZSksaWQoYSxiLGQsZSxjKTtjYXNlIDM6a2QoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcihuKDI4MikpO2Q9Yi5wZW5kaW5nUHJvcHM7ZT1iLm1lbW9pemVkU3RhdGU7XG5lPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO0liKGEsYik7TWIoYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtkPT09ZT9iPWNkKGEsYixjKTooUihhLGIsZCxjKSxiPWIuY2hpbGQpO3JldHVybiBiO2Nhc2UgNTpyZXR1cm4gdGMoYiksZD1iLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixoZChhLGIpLFIoYSxiLGQsYyksYj1iLmNoaWxkLGI7Y2FzZSA2OnJldHVybiBudWxsO2Nhc2UgMTM6cmV0dXJuIG1kKGEsYixjKTtjYXNlIDQ6cmV0dXJuIHJjKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPWpjKGIsbnVsbCxkLGMpOlIoYSxiLGQsYyksYi5jaGlsZDtjYXNlIDExOnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpIKGQsZSksYmQoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBSKGEsXG5iLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtDKHliLGguX2N1cnJlbnRWYWx1ZTIpO2guX2N1cnJlbnRWYWx1ZTI9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj12YihoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhRS5jdXJyZW50KXtiPWNkKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1cbmspe2c9aC5jaGlsZDtmb3IodmFyIGw9ay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPUpiKGMsbnVsbCksbC50YWc9MixLYihoLGwpKTtoLmV4cGlyYXRpb25UaW1lPGMmJihoLmV4cGlyYXRpb25UaW1lPWMpO2w9aC5hbHRlcm5hdGU7bnVsbCE9PWwmJmwuZXhwaXJhdGlvblRpbWU8YyYmKGwuZXhwaXJhdGlvblRpbWU9Yyk7RWIoaC5yZXR1cm4sYyk7ay5leHBpcmF0aW9uVGltZTxjJiYoay5leHBpcmF0aW9uVGltZT1jKTticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1cbmd9UihhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbixGYihiLGMpLGU9SihlLGYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5lZmZlY3RUYWd8PTEsUihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9SChlLGIucGVuZGluZ1Byb3BzKSxmPUgoZS50eXBlLGYpLGRkKGEsYixlLGYsZCxjKTtjYXNlIDE1OnJldHVybiBmZChhLGIsYi50eXBlLGIucGVuZGluZ1Byb3BzLGQsYyk7Y2FzZSAxNzpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6SChkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZWZmZWN0VGFnfD0yKSxiLnRhZz0xLEYoZCk/KGE9ITAsVWEoYikpOmE9ITEsRmIoYixjKSxZYihiLGQsZSksJGIoYixkLGUsYyksamQobnVsbCxiLFxuZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIHBkKGEsYixjKX10aHJvdyBFcnJvcihuKDE1NixiLnRhZykpO307dmFyIFZlPW51bGwsUGQ9bnVsbDtmdW5jdGlvbiBaZShhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtWZT1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyUm9vdChjLGEsdm9pZCAwLDY0PT09KGEuY3VycmVudC5lZmZlY3RUYWcmNjQpKX1jYXRjaChlKXt9fTtQZD1mdW5jdGlvbihhKXt0cnl7Yi5vbkNvbW1pdEZpYmVyVW5tb3VudChjLGEpfWNhdGNoKGUpe319fWNhdGNoKGQpe31yZXR1cm4hMH1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5lZmZlY3RUYWc9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkRXhwaXJhdGlvblRpbWU9dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gZWQoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1cbmZ1bmN0aW9uIFllKGEpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBlZChhKT8xOjA7aWYodm9pZCAwIT09YSYmbnVsbCE9PWEpe2E9YS4kJHR5cGVvZjtpZihhPT09b2EpcmV0dXJuIDExO2lmKGE9PT1yYSlyZXR1cm4gMTR9cmV0dXJuIDJ9XG5mdW5jdGlvbiBlYyhhLGIpe3ZhciBjPWEuYWx0ZXJuYXRlO251bGw9PT1jPyhjPW5ldyBkZihhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIGdjKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSllZChhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBpYTpyZXR1cm4gaWMoYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBuYTpnPTg7ZXw9NzticmVhaztjYXNlIGphOmc9ODtlfD0xO2JyZWFrO2Nhc2Uga2E6cmV0dXJuIGE9bmV3IGRmKDEyLGMsYixlfDgpLGEuZWxlbWVudFR5cGU9a2EsYS50eXBlPWthLGEuZXhwaXJhdGlvblRpbWU9ZixhO2Nhc2UgcGE6cmV0dXJuIGE9bmV3IGRmKDEzLGMsYixlKSxhLnR5cGU9cGEsYS5lbGVtZW50VHlwZT1wYSxhLmV4cGlyYXRpb25UaW1lPWYsYTtjYXNlIHFhOnJldHVybiBhPW5ldyBkZigxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1xYSxhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbGE6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBtYTpnPTk7YnJlYWsgYTtjYXNlIG9hOmc9MTE7YnJlYWsgYTtjYXNlIHJhOmc9MTQ7YnJlYWsgYTtjYXNlIHNhOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSB0YTpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IobigxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1uZXcgZGYoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IuZXhwaXJhdGlvblRpbWU9ZjtyZXR1cm4gYn1mdW5jdGlvbiBpYyhhLGIsYyxkKXthPW5ldyBkZig3LGEsZCxiKTthLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGF9ZnVuY3Rpb24gZmMoYSxiLGMpe2E9bmV3IGRmKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIGhjKGEsYixjKXtiPW5ldyBkZig0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGVmKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY3VycmVudD1udWxsO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMucGluZ0NhY2hlPXRoaXMucGVuZGluZ0NoaWxkcmVuPW51bGw7dGhpcy5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7dGhpcy5maW5pc2hlZFdvcms9bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT05MDt0aGlzLmxhc3RFeHBpcmVkVGltZT10aGlzLmxhc3RQaW5nZWRUaW1lPXRoaXMubmV4dEtub3duUGVuZGluZ0xldmVsPXRoaXMubGFzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFN1c3BlbmRlZFRpbWU9dGhpcy5maXJzdFBlbmRpbmdUaW1lPTB9XG5mdW5jdGlvbiBmZihhLGIsYyl7YT1uZXcgZWYoYSxiLGMpO2I9bmV3IGRmKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTthLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1hO0hiKGIpO3JldHVybiBhfWZ1bmN0aW9uIEVlKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiBBZChhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24gQmQoYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX12YXIgZ2Y9bnVsbDtcbmZ1bmN0aW9uIGhmKGEpe2lmKG51bGw9PT1nZil0cnl7dmFyIGI9KFwicmVxdWlyZVwiK01hdGgucmFuZG9tKCkpLnNsaWNlKDAsNyk7Z2Y9KG1vZHVsZSYmbW9kdWxlW2JdKShcInRpbWVyc1wiKS5zZXRJbW1lZGlhdGV9Y2F0Y2goYyl7Z2Y9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IE1lc3NhZ2VDaGFubmVsO2IucG9ydDEub25tZXNzYWdlPWE7Yi5wb3J0Mi5wb3N0TWVzc2FnZSh2b2lkIDApfX1yZXR1cm4gZ2YoYSl9XG5mdW5jdGlvbiBqZihhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1UYigpLGc9UWIuc3VzcGVuc2U7Zj1VYihmLGUsZyk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxGaWJlcjtiOntpZih5YShjKSE9PWN8fDEhPT1jLnRhZyl0aHJvdyBFcnJvcihuKDE3MCkpO3ZhciBoPWM7ZG97c3dpdGNoKGgudGFnKXtjYXNlIDM6aD1oLnN0YXRlTm9kZS5jb250ZXh0O2JyZWFrIGI7Y2FzZSAxOmlmKEYoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcihuKDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihGKGspKXtjPVRhKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPU9hO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9SmIoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1cbmQ/bnVsbDpkO251bGwhPT1kJiYoYi5jYWxsYmFjaz1kKTtLYihlLGIpO1ZiKGUsZik7cmV0dXJuIGZ9dmFyIGtmPXQuSXNTb21lUmVuZGVyZXJBY3RpbmcsbGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIG0udW5zdGFibGVfZmx1c2hBbGxXaXRob3V0QXNzZXJ0aW5nLG1mPW0udW5zdGFibGVfZmx1c2hBbGxXaXRob3V0QXNzZXJ0aW5nfHxmdW5jdGlvbigpe2Zvcih2YXIgYT0hMTtHZSgpOylhPSEwO3JldHVybiBhfTtmdW5jdGlvbiBuZihhKXt0cnl7bWYoKSxoZihmdW5jdGlvbigpe21mKCk/bmYoYSk6YSgpfSl9Y2F0Y2goYil7YShiKX19dmFyIG9mPTAscGY9ITEscWY9e2NyZWF0ZU5vZGVNb2NrOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9fTtcbmZ1bmN0aW9uIHJmKGEpe2lmKGEuaXNIaWRkZW4pcmV0dXJuIG51bGw7c3dpdGNoKGEudGFnKXtjYXNlIFwiVEVYVFwiOnJldHVybiBhLnRleHQ7Y2FzZSBcIklOU1RBTkNFXCI6dmFyIGI9YS5wcm9wczt2YXIgYz1bXCJjaGlsZHJlblwiXTtpZihudWxsPT1iKWI9e307ZWxzZXt2YXIgZD17fSxlPU9iamVjdC5rZXlzKGIpLGY7Zm9yKGY9MDtmPGUubGVuZ3RoO2YrKyl7dmFyIGc9ZVtmXTswPD1jLmluZGV4T2YoZyl8fChkW2ddPWJbZ10pfWI9ZH1jPW51bGw7aWYoYS5jaGlsZHJlbiYmYS5jaGlsZHJlbi5sZW5ndGgpZm9yKGQ9MDtkPGEuY2hpbGRyZW4ubGVuZ3RoO2QrKyllPXJmKGEuY2hpbGRyZW5bZF0pLG51bGwhPT1lJiYobnVsbD09PWM/Yz1bZV06Yy5wdXNoKGUpKTthPXt0eXBlOmEudHlwZSxwcm9wczpiLGNoaWxkcmVuOmN9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLFwiJCR0eXBlb2ZcIix7dmFsdWU6U3ltYm9sLmZvcihcInJlYWN0LnRlc3QuanNvblwiKX0pO3JldHVybiBhO2RlZmF1bHQ6dGhyb3cgRXJyb3IoXCJVbmV4cGVjdGVkIG5vZGUgdHlwZSBpbiB0b0pTT046IFwiK1xuYS50YWcpO319ZnVuY3Rpb24gc2YoYSl7aWYoIWEpcmV0dXJuIG51bGw7YT10ZihhKTtyZXR1cm4gMD09PWEubGVuZ3RoP251bGw6MT09PWEubGVuZ3RoP3VmKGFbMF0pOnZmKGEubWFwKHVmKSl9ZnVuY3Rpb24gdGYoYSl7Zm9yKHZhciBiPVtdO251bGwhPWE7KWIucHVzaChhKSxhPWEuc2libGluZztyZXR1cm4gYn1mdW5jdGlvbiB2ZihhKXt2YXIgYj1bXTtmb3IoYT1be2k6MCxhcnJheTphfV07YS5sZW5ndGg7KWZvcih2YXIgYz1hLnBvcCgpO2MuaTxjLmFycmF5Lmxlbmd0aDspe3ZhciBkPWMuYXJyYXlbYy5pXTtjLmkrPTE7aWYoQXJyYXkuaXNBcnJheShkKSl7YS5wdXNoKGMpO2EucHVzaCh7aTowLGFycmF5OmR9KTticmVha31iLnB1c2goZCl9cmV0dXJuIGJ9XG5mdW5jdGlvbiB1ZihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO3N3aXRjaChhLnRhZyl7Y2FzZSAzOnJldHVybiBzZihhLmNoaWxkKTtjYXNlIDQ6cmV0dXJuIHNmKGEuY2hpbGQpO2Nhc2UgMTpyZXR1cm57bm9kZVR5cGU6XCJjb21wb25lbnRcIix0eXBlOmEudHlwZSxwcm9wczphYSh7fSxhLm1lbW9pemVkUHJvcHMpLGluc3RhbmNlOmEuc3RhdGVOb2RlLHJlbmRlcmVkOnNmKGEuY2hpbGQpfTtjYXNlIDA6Y2FzZSAxNTpyZXR1cm57bm9kZVR5cGU6XCJjb21wb25lbnRcIix0eXBlOmEudHlwZSxwcm9wczphYSh7fSxhLm1lbW9pemVkUHJvcHMpLGluc3RhbmNlOm51bGwscmVuZGVyZWQ6c2YoYS5jaGlsZCl9O2Nhc2UgMjI6cmV0dXJue25vZGVUeXBlOlwiYmxvY2tcIix0eXBlOmEudHlwZSxwcm9wczphYSh7fSxhLm1lbW9pemVkUHJvcHMpLGluc3RhbmNlOm51bGwscmVuZGVyZWQ6c2YoYS5jaGlsZCl9O2Nhc2UgNTpyZXR1cm57bm9kZVR5cGU6XCJob3N0XCIsdHlwZTphLnR5cGUscHJvcHM6YWEoe30sXG5hLm1lbW9pemVkUHJvcHMpLGluc3RhbmNlOm51bGwscmVuZGVyZWQ6dmYodGYoYS5jaGlsZCkubWFwKHVmKSl9O2Nhc2UgNjpyZXR1cm4gYS5zdGF0ZU5vZGUudGV4dDtjYXNlIDc6Y2FzZSAxMDpjYXNlIDk6Y2FzZSA4OmNhc2UgMTI6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTc6Y2FzZSAyMTpyZXR1cm4gc2YoYS5jaGlsZCk7ZGVmYXVsdDp0aHJvdyBFcnJvcihuKDIxNCxhLnRhZykpO319dmFyIHdmPW5ldyBTZXQoWzAsMSw1LDExLDE0LDE1LDIyLDNdKTtcbmZ1bmN0aW9uIHhmKGEpe3ZhciBiPVtdLGM9YTtpZihudWxsPT09Yy5jaGlsZClyZXR1cm4gYjtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDthOmZvcig7Oyl7dmFyIGQ9ITE7d2YuaGFzKGMudGFnKT9iLnB1c2goeWYoYykpOjY9PT1jLnRhZz9iLnB1c2goXCJcIitjLm1lbW9pemVkUHJvcHMpOmQ9ITA7aWYoZCYmbnVsbCE9PWMuY2hpbGQpYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGQ7ZWxzZXtmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihjLnJldHVybj09PWEpYnJlYWsgYTtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fXJldHVybiBifVxudmFyIEJmPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhKXtpZighd2YuaGFzKGEudGFnKSl0aHJvdyBFcnJvcihuKDIyNSxhLnRhZykpO3RoaXMuX2ZpYmVyPWF9dmFyIGI9YS5wcm90b3R5cGU7Yi5fY3VycmVudEZpYmVyPWZ1bmN0aW9uKCl7dmFyIGE9QWEodGhpcy5fZmliZXIpO2lmKG51bGw9PT1hKXRocm93IEVycm9yKG4oMjI0KSk7cmV0dXJuIGF9O2IuZmluZD1mdW5jdGlvbihhKXtyZXR1cm4gemYodGhpcy5maW5kQWxsKGEse2RlZXA6ITF9KSxcIm1hdGNoaW5nIGN1c3RvbSBwcmVkaWNhdGU6IFwiK2EudG9TdHJpbmcoKSl9O2IuZmluZEJ5VHlwZT1mdW5jdGlvbihhKXtyZXR1cm4gemYodGhpcy5maW5kQWxsQnlUeXBlKGEse2RlZXA6ITF9KSwnd2l0aCBub2RlIHR5cGU6IFwiJysoYS5kaXNwbGF5TmFtZXx8YS5uYW1lKSsnXCInKX07Yi5maW5kQnlQcm9wcz1mdW5jdGlvbihhKXtyZXR1cm4gemYodGhpcy5maW5kQWxsQnlQcm9wcyhhLHtkZWVwOiExfSksXCJ3aXRoIHByb3BzOiBcIitKU09OLnN0cmluZ2lmeShhKSl9O1xuYi5maW5kQWxsPWZ1bmN0aW9uKGEpe3JldHVybiBBZih0aGlzLGEsMTxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOm51bGwpfTtiLmZpbmRBbGxCeVR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEFmKHRoaXMsZnVuY3Rpb24oYil7cmV0dXJuIGIudHlwZT09PWF9LDE8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTpudWxsKX07Yi5maW5kQWxsQnlQcm9wcz1mdW5jdGlvbihhKXtyZXR1cm4gQWYodGhpcyxmdW5jdGlvbihiKXt2YXIgYztpZihjPWIucHJvcHMpYTp7Zm9yKHZhciBkIGluIGEpaWYoYi5wcm9wc1tkXSE9PWFbZF0pe2M9ITE7YnJlYWsgYX1jPSEwfXJldHVybiBjfSwxPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06bnVsbCl9O2VhKGEsW3trZXk6XCJpbnN0YW5jZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiA1PT09dGhpcy5fZmliZXIudGFnP1xuRmEodGhpcy5fZmliZXIuc3RhdGVOb2RlKTp0aGlzLl9maWJlci5zdGF0ZU5vZGV9fSx7a2V5OlwidHlwZVwiLGdldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9maWJlci50eXBlfX0se2tleTpcInByb3BzXCIsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2N1cnJlbnRGaWJlcigpLm1lbW9pemVkUHJvcHN9fSx7a2V5OlwicGFyZW50XCIsZ2V0OmZ1bmN0aW9uKCl7Zm9yKHZhciBhPXRoaXMuX2ZpYmVyLnJldHVybjtudWxsIT09YTspe2lmKHdmLmhhcyhhLnRhZykpe2lmKDM9PT1hLnRhZyYmMj54ZihhKS5sZW5ndGgpYnJlYWs7cmV0dXJuIHlmKGEpfWE9YS5yZXR1cm59cmV0dXJuIG51bGx9fSx7a2V5OlwiY2hpbGRyZW5cIixnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4geGYodGhpcy5fY3VycmVudEZpYmVyKCkpfX1dKTtyZXR1cm4gYX0oKTtcbmZ1bmN0aW9uIEFmKGEsYixjKXt2YXIgZD1jP2MuZGVlcDohMCxlPVtdO2lmKGIoYSkmJihlLnB1c2goYSksIWQpKXJldHVybiBlO2EuY2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbihhKXtcInN0cmluZ1wiIT09dHlwZW9mIGEmJmUucHVzaC5hcHBseShlLEFmKGEsYixjKSl9KTtyZXR1cm4gZX1mdW5jdGlvbiB6ZihhLGIpe2lmKDE9PT1hLmxlbmd0aClyZXR1cm4gYVswXTt0aHJvdyBFcnJvcigoMD09PWEubGVuZ3RoP1wiTm8gaW5zdGFuY2VzIGZvdW5kIFwiOlwiRXhwZWN0ZWQgMSBidXQgZm91bmQgXCIrYS5sZW5ndGgrXCIgaW5zdGFuY2VzIFwiKStiKTt9XG52YXIgQ2Y9e19TY2hlZHVsZXI6YmEsY3JlYXRlOmZ1bmN0aW9uKGEsYil7dmFyIGM9cWYuY3JlYXRlTm9kZU1vY2ssZD0hMTtcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY3JlYXRlTm9kZU1vY2smJihjPWIuY3JlYXRlTm9kZU1vY2spLCEwPT09Yi51bnN0YWJsZV9pc0NvbmN1cnJlbnQmJihkPSEwKSk7dmFyIGU9e2NoaWxkcmVuOltdLGNyZWF0ZU5vZGVNb2NrOmMsdGFnOlwiQ09OVEFJTkVSXCJ9LGY9ZmYoZSxkPzI6MCwhMSk7aWYobnVsbD09Zil0aHJvdyBFcnJvcihuKDIxNSkpO2pmKGEsZixudWxsLG51bGwpO2E9e19TY2hlZHVsZXI6YmEscm9vdDp2b2lkIDAsdG9KU09OOmZ1bmN0aW9uKCl7aWYobnVsbD09Znx8bnVsbD09Zi5jdXJyZW50fHxudWxsPT1lfHwwPT09ZS5jaGlsZHJlbi5sZW5ndGgpcmV0dXJuIG51bGw7aWYoMT09PWUuY2hpbGRyZW4ubGVuZ3RoKXJldHVybiByZihlLmNoaWxkcmVuWzBdKTtpZigyPT09ZS5jaGlsZHJlbi5sZW5ndGgmJlxuITA9PT1lLmNoaWxkcmVuWzBdLmlzSGlkZGVuJiYhMT09PWUuY2hpbGRyZW5bMV0uaXNIaWRkZW4pcmV0dXJuIHJmKGUuY2hpbGRyZW5bMV0pO3ZhciBhPW51bGw7aWYoZS5jaGlsZHJlbiYmZS5jaGlsZHJlbi5sZW5ndGgpZm9yKHZhciBiPTA7YjxlLmNoaWxkcmVuLmxlbmd0aDtiKyspe3ZhciBjPXJmKGUuY2hpbGRyZW5bYl0pO251bGwhPT1jJiYobnVsbD09PWE/YT1bY106YS5wdXNoKGMpKX1yZXR1cm4gYX0sdG9UcmVlOmZ1bmN0aW9uKCl7cmV0dXJuIG51bGw9PWZ8fG51bGw9PWYuY3VycmVudD9udWxsOnVmKGYuY3VycmVudCl9LHVwZGF0ZTpmdW5jdGlvbihhKXtudWxsIT1mJiZudWxsIT1mLmN1cnJlbnQmJmpmKGEsZixudWxsLG51bGwpfSx1bm1vdW50OmZ1bmN0aW9uKCl7bnVsbCE9ZiYmbnVsbCE9Zi5jdXJyZW50JiYoamYobnVsbCxmLG51bGwsbnVsbCksZj1lPW51bGwpfSxnZXRJbnN0YW5jZTpmdW5jdGlvbigpe2lmKG51bGw9PWZ8fG51bGw9PWYuY3VycmVudClyZXR1cm4gbnVsbDtcbmE6e3ZhciBhPWYuY3VycmVudDtpZihhLmNoaWxkKXN3aXRjaChhLmNoaWxkLnRhZyl7Y2FzZSA1OmE9RmEoYS5jaGlsZC5zdGF0ZU5vZGUpO2JyZWFrIGE7ZGVmYXVsdDphPWEuY2hpbGQuc3RhdGVOb2RlfWVsc2UgYT1udWxsfXJldHVybiBhfSx1bnN0YWJsZV9mbHVzaFN5bmM6ZnVuY3Rpb24oYSl7YTp7aWYoKFcmKGplfGtlKSkhPT1WKXRocm93IEVycm9yKG4oMTg3KSk7dmFyIGI9VztXfD0xO3RyeXt2YXIgYz1wYig5OSxhLmJpbmQobnVsbCx2b2lkIDApKTticmVhayBhfWZpbmFsbHl7Vz1iLHRiKCl9Yz12b2lkIDB9cmV0dXJuIGN9fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxcInJvb3RcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoXCJDYW4ndCBhY2Nlc3MgLnJvb3Qgb24gdW5tb3VudGVkIHRlc3QgcmVuZGVyZXJcIik7dmFyIGE9eGYoZi5jdXJyZW50KTtpZigwPT09YS5sZW5ndGgpdGhyb3cgRXJyb3IoXCJDYW4ndCBhY2Nlc3MgLnJvb3Qgb24gdW5tb3VudGVkIHRlc3QgcmVuZGVyZXJcIik7XG5yZXR1cm4gMT09PWEubGVuZ3RoP2FbMF06eWYoZi5jdXJyZW50KX19KTtyZXR1cm4gYX0sdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXM6T2UsYWN0OmZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXtvZi0tO2tmLmN1cnJlbnQ9Y30hMT09PXBmJiYocGY9ITAsY29uc29sZS5lcnJvcihcImFjdCguLi4pIGlzIG5vdCBzdXBwb3J0ZWQgaW4gcHJvZHVjdGlvbiBidWlsZHMgb2YgUmVhY3QsIGFuZCBtaWdodCBub3QgYmVoYXZlIGFzIGV4cGVjdGVkLlwiKSk7b2YrKzt2YXIgYz1rZi5jdXJyZW50O2tmLmN1cnJlbnQ9ITA7dHJ5e3ZhciBkPU9lKGEpfWNhdGNoKGUpe3Rocm93IGIoKSxlO31pZihudWxsIT09ZCYmXCJvYmplY3RcIj09PXR5cGVvZiBkJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC50aGVuKXJldHVybnt0aGVuOmZ1bmN0aW9uKGEsZil7ZC50aGVuKGZ1bmN0aW9uKCl7MTxvZnx8ITA9PT1sZiYmITA9PT1jPyhiKCksYSgpKTpuZihmdW5jdGlvbihjKXtiKCk7Yz9mKGMpOmEoKX0pfSxmdW5jdGlvbihhKXtiKCk7XG5mKGEpfSl9fTt0cnl7MSE9PW9mfHwhMSE9PWxmJiYhMSE9PWN8fG1mKCksYigpfWNhdGNoKGUpe3Rocm93IGIoKSxlO31yZXR1cm57dGhlbjpmdW5jdGlvbihhKXthKCl9fX19LERmPW5ldyBXZWFrTWFwO2Z1bmN0aW9uIHlmKGEpe3ZhciBiPURmLmdldChhKTt2b2lkIDA9PT1iJiZudWxsIT09YS5hbHRlcm5hdGUmJihiPURmLmdldChhLmFsdGVybmF0ZSkpO3ZvaWQgMD09PWImJihiPW5ldyBCZihhKSxEZi5zZXQoYSxiKSk7cmV0dXJuIGJ9XG4oZnVuY3Rpb24oYSl7dmFyIGI9YS5maW5kRmliZXJCeUhvc3RJbnN0YW5jZTtyZXR1cm4gWmUoYWEoe30sYSx7b3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjp0LlJlYWN0Q3VycmVudERpc3BhdGNoZXIsZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1CYShhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfSxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfSkpfSkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoXCJUZXN0UmVuZGVyZXIgZG9lcyBub3Qgc3VwcG9ydCBmaW5kRmliZXJCeUhvc3RJbnN0YW5jZSgpXCIpO1xufSxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjE0LjBcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtdGVzdC1yZW5kZXJlclwifSk7bW9kdWxlLmV4cG9ydHM9Q2YuZGVmYXVsdHx8Q2Y7XG4iLCAiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LXRlc3QtcmVuZGVyZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtdGVzdC1yZW5kZXJlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwgIlxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsb2FkIChzcmMsIG9wdHMsIGNiKSB7XG4gIHZhciBoZWFkID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdXG4gIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxuXG4gIGlmICh0eXBlb2Ygb3B0cyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNiID0gb3B0c1xuICAgIG9wdHMgPSB7fVxuICB9XG5cbiAgb3B0cyA9IG9wdHMgfHwge31cbiAgY2IgPSBjYiB8fCBmdW5jdGlvbigpIHt9XG5cbiAgc2NyaXB0LnR5cGUgPSBvcHRzLnR5cGUgfHwgJ3RleHQvamF2YXNjcmlwdCdcbiAgc2NyaXB0LmNoYXJzZXQgPSBvcHRzLmNoYXJzZXQgfHwgJ3V0ZjgnO1xuICBzY3JpcHQuYXN5bmMgPSAnYXN5bmMnIGluIG9wdHMgPyAhIW9wdHMuYXN5bmMgOiB0cnVlXG4gIHNjcmlwdC5zcmMgPSBzcmNcblxuICBpZiAob3B0cy5hdHRycykge1xuICAgIHNldEF0dHJpYnV0ZXMoc2NyaXB0LCBvcHRzLmF0dHJzKVxuICB9XG5cbiAgaWYgKG9wdHMudGV4dCkge1xuICAgIHNjcmlwdC50ZXh0ID0gJycgKyBvcHRzLnRleHRcbiAgfVxuXG4gIHZhciBvbmVuZCA9ICdvbmxvYWQnIGluIHNjcmlwdCA/IHN0ZE9uRW5kIDogaWVPbkVuZFxuICBvbmVuZChzY3JpcHQsIGNiKVxuXG4gIC8vIHNvbWUgZ29vZCBsZWdhY3kgYnJvd3NlcnMgKGZpcmVmb3gpIGZhaWwgdGhlICdpbicgZGV0ZWN0aW9uIGFib3ZlXG4gIC8vIHNvIGFzIGEgZmFsbGJhY2sgd2UgYWx3YXlzIHNldCBvbmxvYWRcbiAgLy8gb2xkIElFIHdpbGwgaWdub3JlIHRoaXMgYW5kIG5ldyBJRSB3aWxsIHNldCBvbmxvYWRcbiAgaWYgKCFzY3JpcHQub25sb2FkKSB7XG4gICAgc3RkT25FbmQoc2NyaXB0LCBjYik7XG4gIH1cblxuICBoZWFkLmFwcGVuZENoaWxkKHNjcmlwdClcbn1cblxuZnVuY3Rpb24gc2V0QXR0cmlidXRlcyhzY3JpcHQsIGF0dHJzKSB7XG4gIGZvciAodmFyIGF0dHIgaW4gYXR0cnMpIHtcbiAgICBzY3JpcHQuc2V0QXR0cmlidXRlKGF0dHIsIGF0dHJzW2F0dHJdKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzdGRPbkVuZCAoc2NyaXB0LCBjYikge1xuICBzY3JpcHQub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMub25lcnJvciA9IHRoaXMub25sb2FkID0gbnVsbFxuICAgIGNiKG51bGwsIHNjcmlwdClcbiAgfVxuICBzY3JpcHQub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcbiAgICAvLyB0aGlzLm9ubG9hZCA9IG51bGwgaGVyZSBpcyBuZWNlc3NhcnlcbiAgICAvLyBiZWNhdXNlIGV2ZW4gSUU5IHdvcmtzIG5vdCBsaWtlIG90aGVyc1xuICAgIHRoaXMub25lcnJvciA9IHRoaXMub25sb2FkID0gbnVsbFxuICAgIGNiKG5ldyBFcnJvcignRmFpbGVkIHRvIGxvYWQgJyArIHRoaXMuc3JjKSwgc2NyaXB0KVxuICB9XG59XG5cbmZ1bmN0aW9uIGllT25FbmQgKHNjcmlwdCwgY2IpIHtcbiAgc2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlICE9ICdjb21wbGV0ZScgJiYgdGhpcy5yZWFkeVN0YXRlICE9ICdsb2FkZWQnKSByZXR1cm5cbiAgICB0aGlzLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGxcbiAgICBjYihudWxsLCBzY3JpcHQpIC8vIHRoZXJlIGlzIG5vIHdheSB0byBjYXRjaCBsb2FkaW5nIGVycm9ycyBpbiBJRThcbiAgfVxufVxuIiwgIid1c2Ugc3RyaWN0JztcblxudmFyIGlzTWVyZ2VhYmxlT2JqZWN0ID0gZnVuY3Rpb24gaXNNZXJnZWFibGVPYmplY3QodmFsdWUpIHtcblx0cmV0dXJuIGlzTm9uTnVsbE9iamVjdCh2YWx1ZSlcblx0XHQmJiAhaXNTcGVjaWFsKHZhbHVlKVxufTtcblxuZnVuY3Rpb24gaXNOb25OdWxsT2JqZWN0KHZhbHVlKSB7XG5cdHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCdcbn1cblxuZnVuY3Rpb24gaXNTcGVjaWFsKHZhbHVlKSB7XG5cdHZhciBzdHJpbmdWYWx1ZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG5cblx0cmV0dXJuIHN0cmluZ1ZhbHVlID09PSAnW29iamVjdCBSZWdFeHBdJ1xuXHRcdHx8IHN0cmluZ1ZhbHVlID09PSAnW29iamVjdCBEYXRlXSdcblx0XHR8fCBpc1JlYWN0RWxlbWVudCh2YWx1ZSlcbn1cblxuLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iL2I1YWM5NjNmYjc5MWQxMjk4ZTdmMzk2MjM2MzgzYmM5NTVmOTE2YzEvc3JjL2lzb21vcnBoaWMvY2xhc3NpYy9lbGVtZW50L1JlYWN0RWxlbWVudC5qcyNMMjEtTDI1XG52YXIgY2FuVXNlU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yO1xudmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IGNhblVzZVN5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSA6IDB4ZWFjNztcblxuZnVuY3Rpb24gaXNSZWFjdEVsZW1lbnQodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlLiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEVcbn1cblxuZnVuY3Rpb24gZW1wdHlUYXJnZXQodmFsKSB7XG5cdHJldHVybiBBcnJheS5pc0FycmF5KHZhbCkgPyBbXSA6IHt9XG59XG5cbmZ1bmN0aW9uIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHZhbHVlLCBvcHRpb25zKSB7XG5cdHJldHVybiAob3B0aW9ucy5jbG9uZSAhPT0gZmFsc2UgJiYgb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCh2YWx1ZSkpXG5cdFx0PyBkZWVwbWVyZ2UoZW1wdHlUYXJnZXQodmFsdWUpLCB2YWx1ZSwgb3B0aW9ucylcblx0XHQ6IHZhbHVlXG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRBcnJheU1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG5cdHJldHVybiB0YXJnZXQuY29uY2F0KHNvdXJjZSkubWFwKGZ1bmN0aW9uKGVsZW1lbnQpIHtcblx0XHRyZXR1cm4gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoZWxlbWVudCwgb3B0aW9ucylcblx0fSlcbn1cblxuZnVuY3Rpb24gZ2V0TWVyZ2VGdW5jdGlvbihrZXksIG9wdGlvbnMpIHtcblx0aWYgKCFvcHRpb25zLmN1c3RvbU1lcmdlKSB7XG5cdFx0cmV0dXJuIGRlZXBtZXJnZVxuXHR9XG5cdHZhciBjdXN0b21NZXJnZSA9IG9wdGlvbnMuY3VzdG9tTWVyZ2Uoa2V5KTtcblx0cmV0dXJuIHR5cGVvZiBjdXN0b21NZXJnZSA9PT0gJ2Z1bmN0aW9uJyA/IGN1c3RvbU1lcmdlIDogZGVlcG1lcmdlXG59XG5cbmZ1bmN0aW9uIGdldEVudW1lcmFibGVPd25Qcm9wZXJ0eVN5bWJvbHModGFyZ2V0KSB7XG5cdHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzXG5cdFx0PyBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHRhcmdldCkuZmlsdGVyKGZ1bmN0aW9uKHN5bWJvbCkge1xuXHRcdFx0cmV0dXJuIE9iamVjdC5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHRhcmdldCwgc3ltYm9sKVxuXHRcdH0pXG5cdFx0OiBbXVxufVxuXG5mdW5jdGlvbiBnZXRLZXlzKHRhcmdldCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXModGFyZ2V0KS5jb25jYXQoZ2V0RW51bWVyYWJsZU93blByb3BlcnR5U3ltYm9scyh0YXJnZXQpKVxufVxuXG5mdW5jdGlvbiBwcm9wZXJ0eUlzT25PYmplY3Qob2JqZWN0LCBwcm9wZXJ0eSkge1xuXHR0cnkge1xuXHRcdHJldHVybiBwcm9wZXJ0eSBpbiBvYmplY3Rcblx0fSBjYXRjaChfKSB7XG5cdFx0cmV0dXJuIGZhbHNlXG5cdH1cbn1cblxuLy8gUHJvdGVjdHMgZnJvbSBwcm90b3R5cGUgcG9pc29uaW5nIGFuZCB1bmV4cGVjdGVkIG1lcmdpbmcgdXAgdGhlIHByb3RvdHlwZSBjaGFpbi5cbmZ1bmN0aW9uIHByb3BlcnR5SXNVbnNhZmUodGFyZ2V0LCBrZXkpIHtcblx0cmV0dXJuIHByb3BlcnR5SXNPbk9iamVjdCh0YXJnZXQsIGtleSkgLy8gUHJvcGVydGllcyBhcmUgc2FmZSB0byBtZXJnZSBpZiB0aGV5IGRvbid0IGV4aXN0IGluIHRoZSB0YXJnZXQgeWV0LFxuXHRcdCYmICEoT2JqZWN0Lmhhc093blByb3BlcnR5LmNhbGwodGFyZ2V0LCBrZXkpIC8vIHVuc2FmZSBpZiB0aGV5IGV4aXN0IHVwIHRoZSBwcm90b3R5cGUgY2hhaW4sXG5cdFx0XHQmJiBPYmplY3QucHJvcGVydHlJc0VudW1lcmFibGUuY2FsbCh0YXJnZXQsIGtleSkpIC8vIGFuZCBhbHNvIHVuc2FmZSBpZiB0aGV5J3JlIG5vbmVudW1lcmFibGUuXG59XG5cbmZ1bmN0aW9uIG1lcmdlT2JqZWN0KHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG5cdHZhciBkZXN0aW5hdGlvbiA9IHt9O1xuXHRpZiAob3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCh0YXJnZXQpKSB7XG5cdFx0Z2V0S2V5cyh0YXJnZXQpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG5cdFx0XHRkZXN0aW5hdGlvbltrZXldID0gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQodGFyZ2V0W2tleV0sIG9wdGlvbnMpO1xuXHRcdH0pO1xuXHR9XG5cdGdldEtleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuXHRcdGlmIChwcm9wZXJ0eUlzVW5zYWZlKHRhcmdldCwga2V5KSkge1xuXHRcdFx0cmV0dXJuXG5cdFx0fVxuXG5cdFx0aWYgKHByb3BlcnR5SXNPbk9iamVjdCh0YXJnZXQsIGtleSkgJiYgb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdChzb3VyY2Vba2V5XSkpIHtcblx0XHRcdGRlc3RpbmF0aW9uW2tleV0gPSBnZXRNZXJnZUZ1bmN0aW9uKGtleSwgb3B0aW9ucykodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldLCBvcHRpb25zKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGVzdGluYXRpb25ba2V5XSA9IGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHNvdXJjZVtrZXldLCBvcHRpb25zKTtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gZGVzdGluYXRpb25cbn1cblxuZnVuY3Rpb24gZGVlcG1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXHRvcHRpb25zLmFycmF5TWVyZ2UgPSBvcHRpb25zLmFycmF5TWVyZ2UgfHwgZGVmYXVsdEFycmF5TWVyZ2U7XG5cdG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QgPSBvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0IHx8IGlzTWVyZ2VhYmxlT2JqZWN0O1xuXHQvLyBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCBpcyBhZGRlZCB0byBgb3B0aW9uc2Agc28gdGhhdCBjdXN0b20gYXJyYXlNZXJnZSgpXG5cdC8vIGltcGxlbWVudGF0aW9ucyBjYW4gdXNlIGl0LiBUaGUgY2FsbGVyIG1heSBub3QgcmVwbGFjZSBpdC5cblx0b3B0aW9ucy5jbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZCA9IGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkO1xuXG5cdHZhciBzb3VyY2VJc0FycmF5ID0gQXJyYXkuaXNBcnJheShzb3VyY2UpO1xuXHR2YXIgdGFyZ2V0SXNBcnJheSA9IEFycmF5LmlzQXJyYXkodGFyZ2V0KTtcblx0dmFyIHNvdXJjZUFuZFRhcmdldFR5cGVzTWF0Y2ggPSBzb3VyY2VJc0FycmF5ID09PSB0YXJnZXRJc0FycmF5O1xuXG5cdGlmICghc291cmNlQW5kVGFyZ2V0VHlwZXNNYXRjaCkge1xuXHRcdHJldHVybiBjbG9uZVVubGVzc090aGVyd2lzZVNwZWNpZmllZChzb3VyY2UsIG9wdGlvbnMpXG5cdH0gZWxzZSBpZiAoc291cmNlSXNBcnJheSkge1xuXHRcdHJldHVybiBvcHRpb25zLmFycmF5TWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpXG5cdH0gZWxzZSB7XG5cdFx0cmV0dXJuIG1lcmdlT2JqZWN0KHRhcmdldCwgc291cmNlLCBvcHRpb25zKVxuXHR9XG59XG5cbmRlZXBtZXJnZS5hbGwgPSBmdW5jdGlvbiBkZWVwbWVyZ2VBbGwoYXJyYXksIG9wdGlvbnMpIHtcblx0aWYgKCFBcnJheS5pc0FycmF5KGFycmF5KSkge1xuXHRcdHRocm93IG5ldyBFcnJvcignZmlyc3QgYXJndW1lbnQgc2hvdWxkIGJlIGFuIGFycmF5Jylcblx0fVxuXG5cdHJldHVybiBhcnJheS5yZWR1Y2UoZnVuY3Rpb24ocHJldiwgbmV4dCkge1xuXHRcdHJldHVybiBkZWVwbWVyZ2UocHJldiwgbmV4dCwgb3B0aW9ucylcblx0fSwge30pXG59O1xuXG52YXIgZGVlcG1lcmdlXzEgPSBkZWVwbWVyZ2U7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVlcG1lcmdlXzE7XG4iLCAiaW1wb3J0IHsgdGVzdCB9IGZyb20gJ3pvcmEnXG5pbXBvcnQgc2lub24gZnJvbSAnc2lub24nXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBjcmVhdGUgfSBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJ1xuaW1wb3J0ICcuLi9oZWxwZXJzL3NlcnZlci1zYWZlLWdsb2JhbHMnXG5pbXBvcnQgeyB0ZXN0UGxheWVyTWV0aG9kcyB9IGZyb20gJy4uL2hlbHBlcnMvaGVscGVycydcbmltcG9ydCB7IGdldFNESyBhcyBvcmlnaW5hbEdldFNESyB9IGZyb20gJy4uLy4uL3NyYy91dGlscydcbmltcG9ydCBLYWx0dXJhIGZyb20gJy4uLy4uL3NyYy9wbGF5ZXJzL0thbHR1cmEnXG5cbmNvbnN0IFRFU1RfVVJMID0gJ2h0dHBzOi8vY2RuYXBpc2VjLmthbHR1cmEuY29tL3AvMjUwNzM4MS9zcC8yNTA3MzgxMDAvZW1iZWRJZnJhbWVKcy91aWNvbmZfaWQvNDQzNzIzOTIvcGFydG5lcl9pZC8yNTA3MzgxP2lmcmFtZWVtYmVkPXRydWUmcGxheWVySWQ9a2FsdHVyYV9wbGF5ZXJfMTYwNTYyMjMzNiZlbnRyeV9pZD0xX2kxam16Y24zJ1xuY29uc3QgVEVTVF9DT05GSUcgPSB7XG4gIG9wdGlvbnM6IHt9XG59XG5cbnRlc3RQbGF5ZXJNZXRob2RzKEthbHR1cmEsIHtcbiAgcGxheTogJ3BsYXknLFxuICBwYXVzZTogJ3BhdXNlJyxcbiAgc3RvcDogbnVsbCxcbiAgc2Vla1RvOiAnc2V0Q3VycmVudFRpbWUnLFxuICBzZXRWb2x1bWU6ICdzZXRWb2x1bWUnLFxuICBtdXRlOiAnbXV0ZScsXG4gIHVubXV0ZTogJ3VubXV0ZSdcbn0sIHsgdXJsOiBURVNUX1VSTCB9KVxuXG50ZXN0KCdsb2FkKCknLCB0ID0+IHtcbiAgY2xhc3MgUGxheWVyIHtcbiAgICBjb25zdHJ1Y3RvciAoaWZyYW1lKSB7XG4gICAgICB0Lm9rKGlmcmFtZSA9PT0gJ21vY2staWZyYW1lJylcbiAgICB9XG5cbiAgICBvbiA9IChldmVudCwgZm4pID0+IHtcbiAgICAgIGlmIChldmVudCA9PT0gJ3JlYWR5Jykgc2V0VGltZW91dChmbiwgMTAwKVxuICAgIH1cblxuICAgIHNldExvb3AgPSAoKSA9PiBudWxsXG4gIH1cbiAgY29uc3QgZ2V0U0RLID0gc2lub24uc3R1YihvcmlnaW5hbEdldFNESywgJ3N0dWInKS5yZXNvbHZlcyh7IFBsYXllciB9KVxuICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgY29uc3Qgb25SZWFkeSA9ICgpID0+IHtcbiAgICAgIHQub2sodHJ1ZSlcbiAgICAgIHJlc29sdmUoKVxuICAgIH1cbiAgICBjb25zdCBpbnN0YW5jZSA9IGNyZWF0ZShcbiAgICAgIDxLYWx0dXJhIHVybD17VEVTVF9VUkx9IG9uUmVhZHk9e29uUmVhZHl9IGNvbmZpZz17VEVTVF9DT05GSUd9IC8+XG4gICAgKS5nZXRJbnN0YW5jZSgpXG4gICAgaW5zdGFuY2UuaWZyYW1lID0gJ21vY2staWZyYW1lJ1xuICAgIGluc3RhbmNlLmxvYWQoVEVTVF9VUkwpXG4gICAgdC5vayhnZXRTREsuY2FsbGVkT25jZSlcbiAgICBnZXRTREsucmVzdG9yZSgpXG4gIH0pXG59KVxuXG50ZXN0KCdnZXREdXJhdGlvbigpJywgdCA9PiB7XG4gIGNvbnN0IGluc3RhbmNlID0gY3JlYXRlKDxLYWx0dXJhIHVybD17VEVTVF9VUkx9IC8+KS5nZXRJbnN0YW5jZSgpXG4gIGluc3RhbmNlLmR1cmF0aW9uID0gMTBcbiAgdC5vayhpbnN0YW5jZS5nZXREdXJhdGlvbigpID09PSAxMClcbn0pXG5cbnRlc3QoJ2dldEN1cnJlbnRUaW1lKCknLCB0ID0+IHtcbiAgY29uc3QgaW5zdGFuY2UgPSBjcmVhdGUoPEthbHR1cmEgdXJsPXtURVNUX1VSTH0gLz4pLmdldEluc3RhbmNlKClcbiAgaW5zdGFuY2UuY3VycmVudFRpbWUgPSA1XG4gIHQub2soaW5zdGFuY2UuZ2V0Q3VycmVudFRpbWUoKSA9PT0gNSlcbn0pXG5cbnRlc3QoJ2dldFNlY29uZHNMb2FkZWQoKScsIHQgPT4ge1xuICBjb25zdCBpbnN0YW5jZSA9IGNyZWF0ZSg8S2FsdHVyYSB1cmw9e1RFU1RfVVJMfSAvPikuZ2V0SW5zdGFuY2UoKVxuICBpbnN0YW5jZS5zZWNvbmRzTG9hZGVkID0gNVxuICB0Lm9rKGluc3RhbmNlLmdldFNlY29uZHNMb2FkZWQoKSA9PT0gNSlcbn0pXG5cbnRlc3QoJ3JlbmRlcigpJywgdCA9PiB7XG4gIGNvbnN0IHN0eWxlID0geyB3aWR0aDogJzEwMCUnLCBoZWlnaHQ6ICcxMDAlJyB9XG4gIHQuZGVlcEVxdWFsKFxuICAgIGNyZWF0ZSg8S2FsdHVyYSB1cmw9e1RFU1RfVVJMfSAvPikudG9KU09OKCksXG4gICAgY3JlYXRlKDxpZnJhbWVcbiAgICAgIHNyYz17VEVTVF9VUkx9XG4gICAgICBmcmFtZUJvcmRlcj0nMCdcbiAgICAgIHNjcm9sbGluZz0nbm8nXG4gICAgICBzdHlsZT17c3R5bGV9XG4gICAgICBhbGxvdz0nZW5jcnlwdGVkLW1lZGlhOyBhdXRvcGxheTsgZnVsbHNjcmVlbjsnXG4gICAgICByZWZlcnJlclBvbGljeT0nbm8tcmVmZXJyZXItd2hlbi1kb3duZ3JhZGUnXG4gICAgICAgICAgIC8+KS50b0pTT04oKVxuICApXG59KVxuIiwgImNsYXNzIEVsZW1lbnQgZXh0ZW5kcyBFdmVudFRhcmdldCB7XG4gIHN0eWxlID0ge31cbiAgcXVlcnlTZWxlY3RvciA9ICgpID0+IG5ldyBFbGVtZW50KClcbiAgY29udGFpbnMgPSAoKSA9PiB0cnVlXG59XG5cbmNsYXNzIE1lZGlhU3RyZWFtIHt9XG5cbmNvbnN0IGRvY3VtZW50ID0ge1xuICBoZWFkOiBuZXcgRWxlbWVudCgpLFxuICBib2R5OiBuZXcgRWxlbWVudCgpLFxuICBjcmVhdGVFbGVtZW50OiAoKSA9PiBuZXcgRWxlbWVudCgpLFxuICBnZXRFbGVtZW50QnlJZDogKCkgPT4gbmV3IEVsZW1lbnQoKVxufVxuXG5jb25zdCBnbG9iYWxUaGlzU2hpbSA9IHtcbiAgbG9jYXRpb246IHsgb3JpZ2luOiAnb3JpZ2luJyB9LFxuICBuYXZpZ2F0b3I6IHt9LFxuICBVUkw6IHsgY3JlYXRlT2JqZWN0VVJMOiAoKSA9PiAnbW9ja09iamVjdFVSTCcgfSxcbiAgZG9jdW1lbnQsXG4gIE1lZGlhU3RyZWFtXG59XG5cbmdsb2JhbFRoaXMuZG9jdW1lbnQgPSBkb2N1bWVudFxuZ2xvYmFsVGhpcy53aW5kb3cgPSBnbG9iYWxUaGlzU2hpbVxuT2JqZWN0LmFzc2lnbihnbG9iYWxUaGlzLCBnbG9iYWxUaGlzU2hpbSlcbiIsICJpbXBvcnQgeyB0ZXN0IH0gZnJvbSAnem9yYSdcbmltcG9ydCBzaW5vbiBmcm9tICdzaW5vbidcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInXG5cbmV4cG9ydCBmdW5jdGlvbiB0ZXN0UGxheWVyTWV0aG9kcyAoUGxheWVyLCBtZXRob2RzLCBwcm9wcykge1xuICBmb3IgKGNvbnN0IG1ldGhvZCBvZiBPYmplY3Qua2V5cyhtZXRob2RzKSkge1xuICAgIHRlc3QoYCR7bWV0aG9kfSgpYCwgdCA9PiB7XG4gICAgICBjb25zdCBjYWxsUGxheWVyID0gc2lub24uZmFrZSgpXG4gICAgICBjb25zdCBpbnN0YW5jZSA9IGNyZWF0ZSg8UGxheWVyIHsuLi5wcm9wc30gLz4pLmdldEluc3RhbmNlKClcbiAgICAgIHQudHJ1dGh5KGluc3RhbmNlW21ldGhvZF0pXG4gICAgICBpbnN0YW5jZS5jYWxsUGxheWVyID0gY2FsbFBsYXllclxuICAgICAgaW5zdGFuY2VbbWV0aG9kXSgpXG4gICAgICBpZiAobWV0aG9kc1ttZXRob2RdKSB7XG4gICAgICAgIHQub2soY2FsbFBsYXllci5jYWxsZWRXaXRoKG1ldGhvZHNbbWV0aG9kXSkpXG4gICAgICB9XG4gICAgICBzaW5vbi5yZXN0b3JlKClcbiAgICB9KVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb250YWluc01hdGNoaW5nRWxlbWVudCAod3JhcHBlciwgY29tcCkge1xuICByZXR1cm4gaXNPYmplY3RDb250YWluZWQoY3JlYXRlKGNvbXApLnRvSlNPTigpLCB3cmFwcGVyLnRvSlNPTigpKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3RDb250YWluZWQgKHN1Yk9iamVjdCwganNvbk9iamVjdCkge1xuICBpZiAodHlwZW9mIHN1Yk9iamVjdCAhPT0gJ29iamVjdCcgfHwgdHlwZW9mIGpzb25PYmplY3QgIT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBmb3IgKGNvbnN0IGtleSBpbiBzdWJPYmplY3QpIHtcbiAgICBpZiAoIShrZXkgaW4ganNvbk9iamVjdCkpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygc3ViT2JqZWN0W2tleV0gPT09ICdvYmplY3QnICYmIHR5cGVvZiBqc29uT2JqZWN0W2tleV0gPT09ICdvYmplY3QnKSB7XG4gICAgICBpZiAoIWlzT2JqZWN0Q29udGFpbmVkKHN1Yk9iamVjdFtrZXldLCBqc29uT2JqZWN0W2tleV0pKSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoc3ViT2JqZWN0W2tleV0gIT09IGpzb25PYmplY3Rba2V5XSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlXG59XG4iLCAiaW1wb3J0IGxvYWRTY3JpcHQgZnJvbSAnbG9hZC1zY3JpcHQnXG5pbXBvcnQgbWVyZ2UgZnJvbSAnZGVlcG1lcmdlJ1xuXG5jb25zdCBNQVRDSF9TVEFSVF9RVUVSWSA9IC9bPyYjXSg/OnN0YXJ0fHQpPShbMC05aG1zXSspL1xuY29uc3QgTUFUQ0hfRU5EX1FVRVJZID0gL1s/JiNdZW5kPShbMC05aG1zXSspL1xuY29uc3QgTUFUQ0hfU1RBUlRfU1RBTVAgPSAvKFxcZCspKGh8bXxzKS9nXG5jb25zdCBNQVRDSF9OVU1FUklDID0gL15cXGQrJC9cblxuLy8gUGFyc2UgWW91VHViZSBVUkwgZm9yIGEgc3RhcnQgdGltZSBwYXJhbSwgaWUgP3Q9MWgxNG0zMHNcbi8vIGFuZCByZXR1cm4gdGhlIHN0YXJ0IHRpbWUgaW4gc2Vjb25kc1xuZnVuY3Rpb24gcGFyc2VUaW1lUGFyYW0gKHVybCwgcGF0dGVybikge1xuICBpZiAodXJsIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkXG4gIH1cbiAgY29uc3QgbWF0Y2ggPSB1cmwubWF0Y2gocGF0dGVybilcbiAgaWYgKG1hdGNoKSB7XG4gICAgY29uc3Qgc3RhbXAgPSBtYXRjaFsxXVxuICAgIGlmIChzdGFtcC5tYXRjaChNQVRDSF9TVEFSVF9TVEFNUCkpIHtcbiAgICAgIHJldHVybiBwYXJzZVRpbWVTdHJpbmcoc3RhbXApXG4gICAgfVxuICAgIGlmIChNQVRDSF9OVU1FUklDLnRlc3Qoc3RhbXApKSB7XG4gICAgICByZXR1cm4gcGFyc2VJbnQoc3RhbXApXG4gICAgfVxuICB9XG4gIHJldHVybiB1bmRlZmluZWRcbn1cblxuZnVuY3Rpb24gcGFyc2VUaW1lU3RyaW5nIChzdGFtcCkge1xuICBsZXQgc2Vjb25kcyA9IDBcbiAgbGV0IGFycmF5ID0gTUFUQ0hfU1RBUlRfU1RBTVAuZXhlYyhzdGFtcClcbiAgd2hpbGUgKGFycmF5ICE9PSBudWxsKSB7XG4gICAgY29uc3QgWywgY291bnQsIHBlcmlvZF0gPSBhcnJheVxuICAgIGlmIChwZXJpb2QgPT09ICdoJykgc2Vjb25kcyArPSBwYXJzZUludChjb3VudCwgMTApICogNjAgKiA2MFxuICAgIGlmIChwZXJpb2QgPT09ICdtJykgc2Vjb25kcyArPSBwYXJzZUludChjb3VudCwgMTApICogNjBcbiAgICBpZiAocGVyaW9kID09PSAncycpIHNlY29uZHMgKz0gcGFyc2VJbnQoY291bnQsIDEwKVxuICAgIGFycmF5ID0gTUFUQ0hfU1RBUlRfU1RBTVAuZXhlYyhzdGFtcClcbiAgfVxuICByZXR1cm4gc2Vjb25kc1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTdGFydFRpbWUgKHVybCkge1xuICByZXR1cm4gcGFyc2VUaW1lUGFyYW0odXJsLCBNQVRDSF9TVEFSVF9RVUVSWSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRW5kVGltZSAodXJsKSB7XG4gIHJldHVybiBwYXJzZVRpbWVQYXJhbSh1cmwsIE1BVENIX0VORF9RVUVSWSlcbn1cblxuLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMzg2MjI1NDVcbmV4cG9ydCBmdW5jdGlvbiByYW5kb21TdHJpbmcgKCkge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIsIDUpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBxdWVyeVN0cmluZyAob2JqZWN0KSB7XG4gIHJldHVybiBPYmplY3RcbiAgICAua2V5cyhvYmplY3QpXG4gICAgLm1hcChrZXkgPT4gYCR7a2V5fT0ke29iamVjdFtrZXldfWApXG4gICAgLmpvaW4oJyYnKVxufVxuXG5mdW5jdGlvbiBnZXRHbG9iYWwgKGtleSkge1xuICBpZiAod2luZG93W2tleV0pIHtcbiAgICByZXR1cm4gd2luZG93W2tleV1cbiAgfVxuICBpZiAod2luZG93LmV4cG9ydHMgJiYgd2luZG93LmV4cG9ydHNba2V5XSkge1xuICAgIHJldHVybiB3aW5kb3cuZXhwb3J0c1trZXldXG4gIH1cbiAgaWYgKHdpbmRvdy5tb2R1bGUgJiYgd2luZG93Lm1vZHVsZS5leHBvcnRzICYmIHdpbmRvdy5tb2R1bGUuZXhwb3J0c1trZXldKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5tb2R1bGUuZXhwb3J0c1trZXldXG4gIH1cbiAgcmV0dXJuIG51bGxcbn1cblxuLy8gVXRpbCBmdW5jdGlvbiB0byBsb2FkIGFuIGV4dGVybmFsIFNES1xuLy8gb3IgcmV0dXJuIHRoZSBTREsgaWYgaXQgaXMgYWxyZWFkeSBsb2FkZWRcbmNvbnN0IHJlcXVlc3RzID0ge31cbmV4cG9ydCBjb25zdCBnZXRTREsgPSBlbmFibGVTdHViT24oZnVuY3Rpb24gZ2V0U0RLICh1cmwsIHNka0dsb2JhbCwgc2RrUmVhZHkgPSBudWxsLCBpc0xvYWRlZCA9ICgpID0+IHRydWUsIGZldGNoU2NyaXB0ID0gbG9hZFNjcmlwdCkge1xuICBjb25zdCBleGlzdGluZ0dsb2JhbCA9IGdldEdsb2JhbChzZGtHbG9iYWwpXG4gIGlmIChleGlzdGluZ0dsb2JhbCAmJiBpc0xvYWRlZChleGlzdGluZ0dsb2JhbCkpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGV4aXN0aW5nR2xvYmFsKVxuICB9XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgLy8gSWYgd2UgYXJlIGFscmVhZHkgbG9hZGluZyB0aGUgU0RLLCBhZGQgdGhlIHJlc29sdmUgYW5kIHJlamVjdFxuICAgIC8vIGZ1bmN0aW9ucyB0byB0aGUgZXhpc3RpbmcgYXJyYXkgb2YgcmVxdWVzdHNcbiAgICBpZiAocmVxdWVzdHNbdXJsXSkge1xuICAgICAgcmVxdWVzdHNbdXJsXS5wdXNoKHsgcmVzb2x2ZSwgcmVqZWN0IH0pXG4gICAgICByZXR1cm5cbiAgICB9XG4gICAgcmVxdWVzdHNbdXJsXSA9IFt7IHJlc29sdmUsIHJlamVjdCB9XVxuICAgIGNvbnN0IG9uTG9hZGVkID0gc2RrID0+IHtcbiAgICAgIC8vIFdoZW4gbG9hZGVkLCByZXNvbHZlIGFsbCBwZW5kaW5nIHJlcXVlc3QgcHJvbWlzZXNcbiAgICAgIHJlcXVlc3RzW3VybF0uZm9yRWFjaChyZXF1ZXN0ID0+IHJlcXVlc3QucmVzb2x2ZShzZGspKVxuICAgIH1cbiAgICBpZiAoc2RrUmVhZHkpIHtcbiAgICAgIGNvbnN0IHByZXZpb3VzT25SZWFkeSA9IHdpbmRvd1tzZGtSZWFkeV1cbiAgICAgIHdpbmRvd1tzZGtSZWFkeV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChwcmV2aW91c09uUmVhZHkpIHByZXZpb3VzT25SZWFkeSgpXG4gICAgICAgIG9uTG9hZGVkKGdldEdsb2JhbChzZGtHbG9iYWwpKVxuICAgICAgfVxuICAgIH1cbiAgICBmZXRjaFNjcmlwdCh1cmwsIGVyciA9PiB7XG4gICAgICBpZiAoZXJyKSB7XG4gICAgICAgIC8vIExvYWRpbmcgdGhlIFNESyBmYWlsZWQgXHUyMDEzIHJlamVjdCBhbGwgcmVxdWVzdHMgYW5kXG4gICAgICAgIC8vIHJlc2V0IHRoZSBhcnJheSBvZiByZXF1ZXN0cyBmb3IgdGhpcyBTREtcbiAgICAgICAgcmVxdWVzdHNbdXJsXS5mb3JFYWNoKHJlcXVlc3QgPT4gcmVxdWVzdC5yZWplY3QoZXJyKSlcbiAgICAgICAgcmVxdWVzdHNbdXJsXSA9IG51bGxcbiAgICAgIH0gZWxzZSBpZiAoIXNka1JlYWR5KSB7XG4gICAgICAgIG9uTG9hZGVkKGdldEdsb2JhbChzZGtHbG9iYWwpKVxuICAgICAgfVxuICAgIH0pXG4gIH0pXG59KVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29uZmlnIChwcm9wcywgZGVmYXVsdFByb3BzKSB7XG4gIHJldHVybiBtZXJnZShkZWZhdWx0UHJvcHMuY29uZmlnLCBwcm9wcy5jb25maWcpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbWl0IChvYmplY3QsIC4uLmFycmF5cykge1xuICBjb25zdCBvbWl0S2V5cyA9IFtdLmNvbmNhdCguLi5hcnJheXMpXG4gIGNvbnN0IG91dHB1dCA9IHt9XG4gIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpXG4gIGZvciAoY29uc3Qga2V5IG9mIGtleXMpIHtcbiAgICBpZiAob21pdEtleXMuaW5kZXhPZihrZXkpID09PSAtMSkge1xuICAgICAgb3V0cHV0W2tleV0gPSBvYmplY3Rba2V5XVxuICAgIH1cbiAgfVxuICByZXR1cm4gb3V0cHV0XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYWxsUGxheWVyIChtZXRob2QsIC4uLmFyZ3MpIHtcbiAgLy8gVXRpbCBtZXRob2QgZm9yIGNhbGxpbmcgYSBtZXRob2Qgb24gdGhpcy5wbGF5ZXJcbiAgLy8gYnV0IGd1YXJkIGFnYWluc3QgZXJyb3JzIGFuZCBjb25zb2xlLndhcm4gaW5zdGVhZFxuICBpZiAoIXRoaXMucGxheWVyIHx8ICF0aGlzLnBsYXllclttZXRob2RdKSB7XG4gICAgbGV0IG1lc3NhZ2UgPSBgUmVhY3RQbGF5ZXI6ICR7dGhpcy5jb25zdHJ1Y3Rvci5kaXNwbGF5TmFtZX0gcGxheWVyIGNvdWxkIG5vdCBjYWxsICVjJHttZXRob2R9JWMgXHUyMDEzIGBcbiAgICBpZiAoIXRoaXMucGxheWVyKSB7XG4gICAgICBtZXNzYWdlICs9ICdUaGUgcGxheWVyIHdhcyBub3QgYXZhaWxhYmxlJ1xuICAgIH0gZWxzZSBpZiAoIXRoaXMucGxheWVyW21ldGhvZF0pIHtcbiAgICAgIG1lc3NhZ2UgKz0gJ1RoZSBtZXRob2Qgd2FzIG5vdCBhdmFpbGFibGUnXG4gICAgfVxuICAgIGNvbnNvbGUud2FybihtZXNzYWdlLCAnZm9udC13ZWlnaHQ6IGJvbGQnLCAnJylcbiAgICByZXR1cm4gbnVsbFxuICB9XG4gIHJldHVybiB0aGlzLnBsYXllclttZXRob2RdKC4uLmFyZ3MpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc01lZGlhU3RyZWFtICh1cmwpIHtcbiAgcmV0dXJuIChcbiAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgIHR5cGVvZiB3aW5kb3cuTWVkaWFTdHJlYW0gIT09ICd1bmRlZmluZWQnICYmXG4gICAgdXJsIGluc3RhbmNlb2Ygd2luZG93Lk1lZGlhU3RyZWFtXG4gIClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQmxvYlVybCAodXJsKSB7XG4gIHJldHVybiAvXmJsb2I6Ly50ZXN0KHVybClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1cHBvcnRzV2ViS2l0UHJlc2VudGF0aW9uTW9kZSAodmlkZW8gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd2aWRlbycpKSB7XG4gIC8vIENoZWNrIGlmIFNhZmFyaSBzdXBwb3J0cyBQaVAsIGFuZCBpcyBub3Qgb24gbW9iaWxlIChvdGhlciB0aGFuIGlQYWQpXG4gIC8vIGlQaG9uZSBzYWZhcmkgYXBwZWFycyB0byBcInN1cHBvcnRcIiBQaVAgdGhyb3VnaCB0aGUgY2hlY2ssIGhvd2V2ZXIgUGlQIGRvZXMgbm90IGZ1bmN0aW9uXG4gIGNvbnN0IG5vdE1vYmlsZSA9IC9pUGhvbmV8aVBvZC8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSA9PT0gZmFsc2VcbiAgcmV0dXJuIHZpZGVvLndlYmtpdFN1cHBvcnRzUHJlc2VudGF0aW9uTW9kZSAmJiB0eXBlb2YgdmlkZW8ud2Via2l0U2V0UHJlc2VudGF0aW9uTW9kZSA9PT0gJ2Z1bmN0aW9uJyAmJiBub3RNb2JpbGVcbn1cblxuLy8gV29ya2Fyb3VuZCBmb3IgYmVpbmcgYWJsZSB0byBzdHViIG91dCBmdW5jdGlvbnMgaW4gRVNNIGV4cG9ydHMuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZXZhbncvZXNidWlsZC9pc3N1ZXMvNDEyI2lzc3VlY29tbWVudC03MjMwNDcyNTVcbmZ1bmN0aW9uIGVuYWJsZVN0dWJPbiAoZm4pIHtcbiAgaWYgKGdsb2JhbFRoaXMuX19URVNUX18pIHtcbiAgICBjb25zdCB3cmFwID0gKC4uLmFyZ3MpID0+IHdyYXAuc3R1YiguLi5hcmdzKVxuICAgIHdyYXAuc3R1YiA9IGZuXG4gICAgcmV0dXJuIHdyYXBcbiAgfVxuICByZXR1cm4gZm5cbn1cbiIsICJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5cbmltcG9ydCB7IGNhbGxQbGF5ZXIsIGdldFNESyB9IGZyb20gJy4uL3V0aWxzJ1xuaW1wb3J0IHsgY2FuUGxheSB9IGZyb20gJy4uL3BhdHRlcm5zJ1xuXG5jb25zdCBTREtfVVJMID0gJ2h0dHBzOi8vY2RuLmVtYmVkLmx5L3BsYXllci0wLjEuMC5taW4uanMnXG5jb25zdCBTREtfR0xPQkFMID0gJ3BsYXllcmpzJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLYWx0dXJhIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgc3RhdGljIGRpc3BsYXlOYW1lID0gJ0thbHR1cmEnXG4gIHN0YXRpYyBjYW5QbGF5ID0gY2FuUGxheS5rYWx0dXJhXG4gIGNhbGxQbGF5ZXIgPSBjYWxsUGxheWVyXG4gIGR1cmF0aW9uID0gbnVsbFxuICBjdXJyZW50VGltZSA9IG51bGxcbiAgc2Vjb25kc0xvYWRlZCA9IG51bGxcblxuICBjb21wb25lbnREaWRNb3VudCAoKSB7XG4gICAgdGhpcy5wcm9wcy5vbk1vdW50ICYmIHRoaXMucHJvcHMub25Nb3VudCh0aGlzKVxuICB9XG5cbiAgbG9hZCAodXJsKSB7XG4gICAgZ2V0U0RLKFNES19VUkwsIFNES19HTE9CQUwpLnRoZW4ocGxheWVyanMgPT4ge1xuICAgICAgaWYgKCF0aGlzLmlmcmFtZSkgcmV0dXJuXG4gICAgICB0aGlzLnBsYXllciA9IG5ldyBwbGF5ZXJqcy5QbGF5ZXIodGhpcy5pZnJhbWUpXG4gICAgICB0aGlzLnBsYXllci5vbigncmVhZHknLCAoKSA9PiB7XG4gICAgICAgIC8vIEFuIGFyYml0cmFyeSB0aW1lb3V0IGlzIHJlcXVpcmVkIG90aGVyd2lzZVxuICAgICAgICAvLyB0aGUgZXZlbnQgbGlzdGVuZXJzIHdvblx1MjAxOXQgd29ya1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICB0aGlzLnBsYXllci5pc1JlYWR5ID0gdHJ1ZVxuICAgICAgICAgIHRoaXMucGxheWVyLnNldExvb3AodGhpcy5wcm9wcy5sb29wKVxuICAgICAgICAgIGlmICh0aGlzLnByb3BzLm11dGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBsYXllci5tdXRlKClcbiAgICAgICAgICB9XG4gICAgICAgICAgdGhpcy5hZGRMaXN0ZW5lcnModGhpcy5wbGF5ZXIsIHRoaXMucHJvcHMpXG4gICAgICAgICAgdGhpcy5wcm9wcy5vblJlYWR5KClcbiAgICAgICAgfSwgNTAwKVxuICAgICAgfSlcbiAgICB9LCB0aGlzLnByb3BzLm9uRXJyb3IpXG4gIH1cblxuICBhZGRMaXN0ZW5lcnMgKHBsYXllciwgcHJvcHMpIHtcbiAgICBwbGF5ZXIub24oJ3BsYXknLCBwcm9wcy5vblBsYXkpXG4gICAgcGxheWVyLm9uKCdwYXVzZScsIHByb3BzLm9uUGF1c2UpXG4gICAgcGxheWVyLm9uKCdlbmRlZCcsIHByb3BzLm9uRW5kZWQpXG4gICAgcGxheWVyLm9uKCdlcnJvcicsIHByb3BzLm9uRXJyb3IpXG4gICAgcGxheWVyLm9uKCd0aW1ldXBkYXRlJywgKHsgZHVyYXRpb24sIHNlY29uZHMgfSkgPT4ge1xuICAgICAgdGhpcy5kdXJhdGlvbiA9IGR1cmF0aW9uXG4gICAgICB0aGlzLmN1cnJlbnRUaW1lID0gc2Vjb25kc1xuICAgIH0pXG4gIH1cblxuICBwbGF5ICgpIHtcbiAgICB0aGlzLmNhbGxQbGF5ZXIoJ3BsYXknKVxuICB9XG5cbiAgcGF1c2UgKCkge1xuICAgIHRoaXMuY2FsbFBsYXllcigncGF1c2UnKVxuICB9XG5cbiAgc3RvcCAoKSB7XG4gICAgLy8gTm90aGluZyB0byBkb1xuICB9XG5cbiAgc2Vla1RvIChzZWNvbmRzLCBrZWVwUGxheWluZyA9IHRydWUpIHtcbiAgICB0aGlzLmNhbGxQbGF5ZXIoJ3NldEN1cnJlbnRUaW1lJywgc2Vjb25kcylcbiAgICBpZiAoIWtlZXBQbGF5aW5nKSB7XG4gICAgICB0aGlzLnBhdXNlKClcbiAgICB9XG4gIH1cblxuICBzZXRWb2x1bWUgKGZyYWN0aW9uKSB7XG4gICAgdGhpcy5jYWxsUGxheWVyKCdzZXRWb2x1bWUnLCBmcmFjdGlvbilcbiAgfVxuXG4gIHNldExvb3AgKGxvb3ApIHtcbiAgICB0aGlzLmNhbGxQbGF5ZXIoJ3NldExvb3AnLCBsb29wKVxuICB9XG5cbiAgbXV0ZSA9ICgpID0+IHtcbiAgICB0aGlzLmNhbGxQbGF5ZXIoJ211dGUnKVxuICB9XG5cbiAgdW5tdXRlID0gKCkgPT4ge1xuICAgIHRoaXMuY2FsbFBsYXllcigndW5tdXRlJylcbiAgfVxuXG4gIGdldER1cmF0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5kdXJhdGlvblxuICB9XG5cbiAgZ2V0Q3VycmVudFRpbWUgKCkge1xuICAgIHJldHVybiB0aGlzLmN1cnJlbnRUaW1lXG4gIH1cblxuICBnZXRTZWNvbmRzTG9hZGVkICgpIHtcbiAgICByZXR1cm4gdGhpcy5zZWNvbmRzTG9hZGVkXG4gIH1cblxuICByZWYgPSBpZnJhbWUgPT4ge1xuICAgIHRoaXMuaWZyYW1lID0gaWZyYW1lXG4gIH1cblxuICByZW5kZXIgKCkge1xuICAgIGNvbnN0IHN0eWxlID0ge1xuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgIGhlaWdodDogJzEwMCUnXG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8aWZyYW1lXG4gICAgICAgIHJlZj17dGhpcy5yZWZ9XG4gICAgICAgIHNyYz17dGhpcy5wcm9wcy51cmx9XG4gICAgICAgIGZyYW1lQm9yZGVyPScwJ1xuICAgICAgICBzY3JvbGxpbmc9J25vJ1xuICAgICAgICBzdHlsZT17c3R5bGV9XG4gICAgICAgIGFsbG93PSdlbmNyeXB0ZWQtbWVkaWE7IGF1dG9wbGF5OyBmdWxsc2NyZWVuOydcbiAgICAgICAgcmVmZXJyZXJQb2xpY3k9J25vLXJlZmVycmVyLXdoZW4tZG93bmdyYWRlJ1xuICAgICAgLz5cbiAgICApXG4gIH1cbn1cbiIsICJpbXBvcnQgeyBpc01lZGlhU3RyZWFtLCBpc0Jsb2JVcmwgfSBmcm9tICcuL3V0aWxzJ1xuXG5leHBvcnQgY29uc3QgTUFUQ0hfVVJMX1lPVVRVQkUgPSAvKD86eW91dHVcXC5iZVxcL3x5b3V0dWJlKD86LW5vY29va2llfGVkdWNhdGlvbik/XFwuY29tXFwvKD86ZW1iZWRcXC98dlxcL3x3YXRjaFxcL3x3YXRjaFxcP3Y9fHdhdGNoXFw/Lismdj18c2hvcnRzXFwvfGxpdmVcXC8pKSgoXFx3fC0pezExfSl8eW91dHViZVxcLmNvbVxcL3BsYXlsaXN0XFw/bGlzdD18eW91dHViZVxcLmNvbVxcL3VzZXJcXC8vXG5leHBvcnQgY29uc3QgTUFUQ0hfVVJMX1NPVU5EQ0xPVUQgPSAvKD86c291bmRjbG91ZFxcLmNvbXxzbmRcXC5zYylcXC9bXi5dKyQvXG5leHBvcnQgY29uc3QgTUFUQ0hfVVJMX1ZJTUVPID0gL3ZpbWVvXFwuY29tXFwvKD8hcHJvZ3Jlc3NpdmVfcmVkaXJlY3QpLisvXG5leHBvcnQgY29uc3QgTUFUQ0hfVVJMX0ZBQ0VCT09LID0gL15odHRwcz86XFwvXFwvKHd3d1xcLik/ZmFjZWJvb2tcXC5jb20uKlxcLyh2aWRlbyhzKT98d2F0Y2h8c3RvcnkpKFxcLnBocD98XFwvKS4rJC9cbmV4cG9ydCBjb25zdCBNQVRDSF9VUkxfRkFDRUJPT0tfV0FUQ0ggPSAvXmh0dHBzPzpcXC9cXC9mYlxcLndhdGNoXFwvLiskL1xuZXhwb3J0IGNvbnN0IE1BVENIX1VSTF9TVFJFQU1BQkxFID0gL3N0cmVhbWFibGVcXC5jb21cXC8oW2EtejAtOV0rKSQvXG5leHBvcnQgY29uc3QgTUFUQ0hfVVJMX1dJU1RJQSA9IC8oPzp3aXN0aWFcXC4oPzpjb218bmV0KXx3aVxcLnN0KVxcLyg/Om1lZGlhc3xlbWJlZClcXC8oPzppZnJhbWVcXC8pPyhbXj9dKykvXG5leHBvcnQgY29uc3QgTUFUQ0hfVVJMX1RXSVRDSF9WSURFTyA9IC8oPzp3d3dcXC58Z29cXC4pP3R3aXRjaFxcLnR2XFwvdmlkZW9zXFwvKFxcZCspKCR8XFw/KS9cbmV4cG9ydCBjb25zdCBNQVRDSF9VUkxfVFdJVENIX0NIQU5ORUwgPSAvKD86d3d3XFwufGdvXFwuKT90d2l0Y2hcXC50dlxcLyhbYS16QS1aMC05X10rKSgkfFxcPykvXG5leHBvcnQgY29uc3QgTUFUQ0hfVVJMX0RBSUxZTU9USU9OID0gL14oPzooPzpodHRwcz8pOik/KD86XFwvXFwvKT8oPzp3d3dcXC4pPyg/Oig/OmRhaWx5bW90aW9uXFwuY29tKD86XFwvZW1iZWQpP1xcL3ZpZGVvKXxkYWlcXC5seSlcXC8oW2EtekEtWjAtOV0rKSg/Ol9bXFx3Xy1dKyk/KD86W1xcdy4jXy1dKyk/L1xuZXhwb3J0IGNvbnN0IE1BVENIX1VSTF9NSVhDTE9VRCA9IC9taXhjbG91ZFxcLmNvbVxcLyhbXi9dK1xcL1teL10rKS9cbmV4cG9ydCBjb25zdCBNQVRDSF9VUkxfVklEWUFSRCA9IC92aWR5YXJkLmNvbVxcLyg/OndhdGNoXFwvKT8oW2EtekEtWjAtOS1fXSspL1xuZXhwb3J0IGNvbnN0IE1BVENIX1VSTF9LQUxUVVJBID0gL15odHRwcz86XFwvXFwvW2EtekEtWl0rXFwua2FsdHVyYS4oY29tfG9yZylcXC9wXFwvKFswLTldKylcXC9zcFxcLyhbMC05XSspMDBcXC9lbWJlZElmcmFtZUpzXFwvdWljb25mX2lkXFwvKFswLTldKylcXC9wYXJ0bmVyX2lkXFwvKFswLTldKykoLiopZW50cnlfaWQuKFthLXpBLVowLTktX10uKikkL1xuZXhwb3J0IGNvbnN0IEFVRElPX0VYVEVOU0lPTlMgPSAvXFwuKG00YXxtNGJ8bXA0YXxtcGdhfG1wMnxtcDJhfG1wM3xtMmF8bTNhfHdhdnx3ZWJhfGFhY3xvZ2F8c3B4KSgkfFxcPykvaVxuZXhwb3J0IGNvbnN0IFZJREVPX0VYVEVOU0lPTlMgPSAvXFwuKG1wNHxvZ1tndl18d2VibXxtb3Z8bTR2KSgjdD1bLFxcZCtdKyk/KCR8XFw/KS9pXG5leHBvcnQgY29uc3QgSExTX0VYVEVOU0lPTlMgPSAvXFwuKG0zdTgpKCR8XFw/KS9pXG5leHBvcnQgY29uc3QgREFTSF9FWFRFTlNJT05TID0gL1xcLihtcGQpKCR8XFw/KS9pXG5leHBvcnQgY29uc3QgRkxWX0VYVEVOU0lPTlMgPSAvXFwuKGZsdikoJHxcXD8pL2lcblxuY29uc3QgY2FuUGxheUZpbGUgPSB1cmwgPT4ge1xuICBpZiAodXJsIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdXJsKSB7XG4gICAgICBpZiAodHlwZW9mIGl0ZW0gPT09ICdzdHJpbmcnICYmIGNhblBsYXlGaWxlKGl0ZW0pKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgICBpZiAoY2FuUGxheUZpbGUoaXRlbS5zcmMpKSB7XG4gICAgICAgIHJldHVybiB0cnVlXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZVxuICB9XG4gIGlmIChpc01lZGlhU3RyZWFtKHVybCkgfHwgaXNCbG9iVXJsKHVybCkpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiAoXG4gICAgQVVESU9fRVhURU5TSU9OUy50ZXN0KHVybCkgfHxcbiAgICBWSURFT19FWFRFTlNJT05TLnRlc3QodXJsKSB8fFxuICAgIEhMU19FWFRFTlNJT05TLnRlc3QodXJsKSB8fFxuICAgIERBU0hfRVhURU5TSU9OUy50ZXN0KHVybCkgfHxcbiAgICBGTFZfRVhURU5TSU9OUy50ZXN0KHVybClcbiAgKVxufVxuXG5leHBvcnQgY29uc3QgY2FuUGxheSA9IHtcbiAgeW91dHViZTogdXJsID0+IHtcbiAgICBpZiAodXJsIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAgIHJldHVybiB1cmwuZXZlcnkoaXRlbSA9PiBNQVRDSF9VUkxfWU9VVFVCRS50ZXN0KGl0ZW0pKVxuICAgIH1cbiAgICByZXR1cm4gTUFUQ0hfVVJMX1lPVVRVQkUudGVzdCh1cmwpXG4gIH0sXG4gIHNvdW5kY2xvdWQ6IHVybCA9PiBNQVRDSF9VUkxfU09VTkRDTE9VRC50ZXN0KHVybCkgJiYgIUFVRElPX0VYVEVOU0lPTlMudGVzdCh1cmwpLFxuICB2aW1lbzogdXJsID0+IE1BVENIX1VSTF9WSU1FTy50ZXN0KHVybCkgJiYgIVZJREVPX0VYVEVOU0lPTlMudGVzdCh1cmwpICYmICFITFNfRVhURU5TSU9OUy50ZXN0KHVybCksXG4gIGZhY2Vib29rOiB1cmwgPT4gTUFUQ0hfVVJMX0ZBQ0VCT09LLnRlc3QodXJsKSB8fCBNQVRDSF9VUkxfRkFDRUJPT0tfV0FUQ0gudGVzdCh1cmwpLFxuICBzdHJlYW1hYmxlOiB1cmwgPT4gTUFUQ0hfVVJMX1NUUkVBTUFCTEUudGVzdCh1cmwpLFxuICB3aXN0aWE6IHVybCA9PiBNQVRDSF9VUkxfV0lTVElBLnRlc3QodXJsKSxcbiAgdHdpdGNoOiB1cmwgPT4gTUFUQ0hfVVJMX1RXSVRDSF9WSURFTy50ZXN0KHVybCkgfHwgTUFUQ0hfVVJMX1RXSVRDSF9DSEFOTkVMLnRlc3QodXJsKSxcbiAgZGFpbHltb3Rpb246IHVybCA9PiBNQVRDSF9VUkxfREFJTFlNT1RJT04udGVzdCh1cmwpLFxuICBtaXhjbG91ZDogdXJsID0+IE1BVENIX1VSTF9NSVhDTE9VRC50ZXN0KHVybCksXG4gIHZpZHlhcmQ6IHVybCA9PiBNQVRDSF9VUkxfVklEWUFSRC50ZXN0KHVybCksXG4gIGthbHR1cmE6IHVybCA9PiBNQVRDSF9VUkxfS0FMVFVSQS50ZXN0KHVybCksXG4gIGZpbGU6IGNhblBsYXlGaWxlXG59XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFRQSxRQUFJLHdCQUF3QixPQUFPO0FBQ25DLFFBQUksaUJBQWlCLE9BQU8sVUFBVTtBQUN0QyxRQUFJLG1CQUFtQixPQUFPLFVBQVU7QUFFeEMsYUFBUyxTQUFTLEtBQUs7QUFDdEIsVUFBSSxRQUFRLFFBQVEsUUFBUSxRQUFXO0FBQ3RDLGNBQU0sSUFBSSxVQUFVLHVEQUF1RDtBQUFBLE1BQzVFO0FBRUEsYUFBTyxPQUFPLEdBQUc7QUFBQSxJQUNsQjtBQUVBLGFBQVMsa0JBQWtCO0FBQzFCLFVBQUk7QUFDSCxZQUFJLENBQUMsT0FBTyxRQUFRO0FBQ25CLGlCQUFPO0FBQUEsUUFDUjtBQUtBLFlBQUksUUFBUSxJQUFJLE9BQU8sS0FBSztBQUM1QixjQUFNLENBQUMsSUFBSTtBQUNYLFlBQUksT0FBTyxvQkFBb0IsS0FBSyxFQUFFLENBQUMsTUFBTSxLQUFLO0FBQ2pELGlCQUFPO0FBQUEsUUFDUjtBQUdBLFlBQUlBLFNBQVEsQ0FBQztBQUNiLGlCQUFTLElB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QUUsSUFBRSxNQUFLLElBQUU7QUFBSyxVQUFHLFFBQU07QUFBRSxhQUFJLEtBQUssV0FBUyxFQUFFLFFBQU0sSUFBRSxFQUFFLE1BQUssV0FBUyxFQUFFLFFBQU0sSUFBRSxLQUFHLEVBQUUsTUFBSztBQUFFLFlBQUUsS0FBSyxHQUFFLENBQUMsS0FBRyxDQUFDLEVBQUUsZUFBZSxDQUFDLE1BQUksRUFBRSxDQUFDLElBQUUsRUFBRSxDQUFDO0FBQUcsVUFBSSxJQUFFLFVBQVUsU0FBTztBQUFFLFVBQUcsTUFBSTtBQUFFLFVBQUUsV0FBUztBQUFBLGVBQVUsSUFBRSxHQUFFO0FBQUMsaUJBQVEsSUFBRSxNQUFNLENBQUMsR0FBRSxJQUFFLEdBQUUsSUFBRSxHQUFFO0FBQUksWUFBRSxDQUFDLElBQUUsVUFBVSxJQUFFLENBQUM7QUFBRSxVQUFFLFdBQVM7QUFBQSxNQUFDO0FBQUMsVUFBRyxLQUFHLEVBQUU7QUFBYSxhQUFJLEtBQUssSUFBRSxFQUFFLGNBQWE7QUFBRSxxQkFBUyxFQUFFLENBQUMsTUFBSSxFQUFFLENBQUMsSUFBRSxFQUFFLENBQUM7QUFBRyxhQUFNLEVBQUMsVUFBUyxHQUFFLE1BQUssR0FBRSxLQUFJLEdBQUUsS0FBSSxHQUFFLE9BQU0sR0FBRSxRQUFPLEVBQUUsUUFBTztBQUFBLElBQUM7QUFDN2EsYUFBUyxFQUFFLEdBQUUsR0FBRTtBQUFDLGFBQU0sRUFBQyxVQUFTLEdBQUUsTUFBSyxFQUFFLE1BQUssS0FBSSxHQUFFLEtBQUksRUFBRSxLQUFJLE9BQU0sRUFBRSxPQUFNLFFBQU8sRUFBRSxPQUFNO0FBQUEsSUFBQztBQUFDLGFBQVMsRUFBRSxHQUFFO0FBQUMsYUFBTSxhQUFXLE9BQU8sS0FBRyxTQUFPLEtBQUcsRUFBRSxhQUFXO0FBQUEsSUFBQztBQUFDLGFBQVMsT0FBTyxHQUFFO0FBQUMsVUFBSSxJQUFFLEVBQUMsS0FBSSxNQUFLLEtBQUksS0FBSTtBQUFFLGFBQU0sT0FBSyxLQUFHLEdBQUcsUUFBUSxTQUFRLFNBQVNDLElBQUU7QUFBQyxlQUFPLEVBQUVBLEVB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RSxRQUFPLElBQUUsRUFBRTtBQUFVLFVBQUUsRUFBRSxLQUFLLEtBQUssRUFBRSxTQUFRLEdBQUUsRUFBRSxPQUFPO0FBQUUsWUFBTSxRQUFRLENBQUMsSUFBRSxFQUFFLEdBQUUsR0FBRSxHQUFFLFNBQVNBLElBQUU7QUFBQyxlQUFPQTtBQUFBLE1BQUMsQ0FBQyxJQUFFLFFBQU0sTUFBSSxFQUFFLENBQUMsTUFBSSxJQUFFLEVBQUUsR0FBRSxLQUFHLENBQUMsRUFBRSxPQUFLLEtBQUcsRUFBRSxRQUFNLEVBQUUsTUFBSSxNQUFJLEtBQUcsRUFBRSxLQUFLLFFBQVEsR0FBRSxLQUFLLElBQUUsT0FBSyxDQUFDLElBQUcsRUFBRSxLQUFLLENBQUM7QUFBQSxJQUFFO0FBQUMsYUFBUyxFQUFFLEdBQUUsR0FBRSxHQUFFLEdBQUUsR0FBRTtBQUFDLFVBQUksSUFBRTtBQUFHLGNBQU0sTUFBSSxLQUFHLEtBQUcsR0FBRyxRQUFRLEdBQUUsS0FBSyxJQUFFO0FBQUssVUFBRSxFQUFFLEdBQUUsR0FBRSxHQUFFLENBQUM7QUFBRSxRQUFFLEdBQUUsSUFBRyxDQUFDO0FBQUUsUUFBRSxDQUFDO0FBQUEsSUFBQztBQUFDLFFBQUksSUFBRSxFQUFDLFNBQVEsS0FBSTtBQUFFLGFBQVMsSUFBRztBQUFDLFVBQUksSUFBRSxFQUFFO0FBQVEsVUFBRyxTQUFPO0FBQUUsY0FBTSxNQUFNLEVBQUUsR0FBRyxDQUFDO0FBQUUsYUFBTztBQUFBLElBQUM7QUFDemEsUUFBSSxLQUFHLEVBQUMsd0JBQXVCLEdBQUUseUJBQXdCLEVBQUMsVUFBUyxLQUFJLEdBQUUsbUJBQWtCLEdBQUUsc0JBQXFCLEVBQUMsU0FBUSxNQUFFLEdBQUUsUUFBTyxFQUFDO0FBQUUsWUFBUSxXQUFTLEVBQUMsS0FBSSxTQUFTLEdBQUUsR0FBRSxHQUFFO0FBQUMsVUFBRyxRQUFNO0FBQUUsZUFBTztBQUFFLFVBQUksSUFBRSxDQUFDO0FBQUUsUUFBRSxHQUFFLEdBQUUsTUFBSyxHQUFFLENBQUM7QUFBRSxhQUFPO0FBQUEsSUFBQyxHQUFFLFNB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QUFXLEVBQUUsT0FBSyxNQUFJLElBQUUsRUFBRSxZQUFXLFNBQU8sSUFBRSxFQUFFLGFBQVcsRUFBRSxPQUFLLEtBQUcsSUFBRSxFQUFFLE1BQUssRUFBRSxPQUFLLEdBQUUsRUFBRSxPQUFLLEdBQUUsRUFBRSxhQUFXO0FBQUksYUFBTztBQUFBLElBQUM7QUFDOWQsYUFBUyxLQUFJO0FBQUMsYUFBTyxHQUFHLEVBQUU7QUFBQSxJQUFhO0FBQUMsYUFBUyxHQUFHLEdBQUUsR0FBRSxHQUFFLEdBQUU7QUFBQyxVQUFJLElBQUUsR0FBRztBQUFFLFFBQUUsYUFBVztBQUFFLFFBQUUsZ0JBQWMsR0FBRyxJQUFFLEdBQUUsR0FBRSxRQUFPLFdBQVMsSUFBRSxPQUFLLENBQUM7QUFBQSxJQUFDO0FBQUMsYUFBUyxHQUFHLEdBQUUsR0FBRSxHQUFFLEdBQUU7QUFBQyxVQUFJLElBQUUsR0FBRztBQUFFLFVBQUUsV0FBUyxJQUFFLE9BQUs7QUFBRSxVQUFJLElBQUU7QUFBTyxVQUFHLFNBQU8sR0FBRTtBQUFDLFlBQUksSUFBRSxFQUFFO0FBQWMsWUFBRSxFQUFFO0FBQVEsWUFBRyxTQUFPLEtBQUcsR0FBRyxHQUFFLEVBQUUsSUFBSSxHQUFFO0FBQUMsYUFBRyxHQUFFLEdBQUUsR0FBRSxDQUFDO0FBQUU7QUFBQSxRQUFNO0FBQUEsTUFBQztBQUFDLFFBQUUsYUFBVztBQUFFLFFBQUUsZ0JBQWMsR0FBRyxJQUFFLEdBQUUsR0FBRSxHQUFFLENBQUM7QUFBQSxJQUFDO0FBQUMsYUFBUyxHQUFHLEdBQUUsR0FBRTtBQUFDLGFBQU8sR0FBRyxLQUFJLEdBQUUsR0FBRSxDQUFDO0FBQUEsSUFBQztBQUFDLGFBQVMsR0FBRyxHQUFFLEdBQUU7QUFBQyxhQUFPLEdBQUcsS0FBSSxHQUFFLEdBQUUsQ0FBQztBQUFBLElBQUM7QUFBQyxhQUFTLEdBQUcsR0FBRSxHQUFFO0FBQUMsYUFBTyxHQUFHLEdBQUUsR0FBRSxHQUFFLENBQUM7QUFBQSxJQUFDO0FBQ3JjLGFBQVMsR0FBRyxHQUFFLEdBQUU7QUFBQyxVQUFHLGVBQWEsT0FBTztBQUFFLGVBQU8sSUFBRSxFQUFFLEdBQUUsRUFBRSxDQUFDLEdBQUUsV0FBVTtBQUFDLFlBQUUsSUFBSTtBQUFBLFFBQUM7QUFBRSxVQUFHLFNBQU8sS0FBRyxXQUFTO0FBQUUsZUFBTyxJQUFFLEVBQUUsR0FBRSxFQUFFLFVBQVEsR0FBRSxXQUFVO0FBQUMsWUFBRSxVQUFRO0FBQUEsUUFBSTtBQUFBLElBQUM7QUFBQyxhQUFTLEdBQUcsR0FBRSxHQUFFLEdBQUU7QUFBQyxVQUFFLFNBQU8sS0FBRyxXQUFTLElBQUUsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLElBQUU7QUFBSyxhQUFPLEdBQUcsR0FBRSxHQUFFLEdBQUcsS0FBSyxNQUFLLEdBQUUsQ0FBQyxHQUFFLENBQUM7QUFBQSxJQUFDO0FBQUMsYUFBUyxLQUFJO0FBQUEsSUFBQztBQUFDLGFBQVMsR0FBRyxHQUFFLEdBQUU7QUFBQyxTQUFHLEVBQUUsZ0JBQWMsQ0FBQyxHQUFFLFdBQVMsSUFBRSxPQUFLLENBQUM7QUFBRSxhQUFPO0FBQUEsSUFBQztBQUFDLGFBQVMsR0FBRyxHQUFFLEdBQUU7QUFBQyxVQUFJLElBQUUsR0FBRztBQUFFLFVBQUUsV0FBUyxJQUFFLE9BQUs7QUFBRSxVQUFJLElBQUUsRUFBRTtBQUFjLFVBQUcsU0FBTyxLQUFHLFNBQU8sS0FBRyxHQUFHLEdBQUUsRUFBRSxDQUFDLENBQUM7QUFBRSxlQUFPLEVBQUUsQ0FBQztBQUFFLFFBQUUsZ0JBQWMsQ0FBQyxHQUFFLENBQUM7QUFBRSxhQUFPO0FBQUEsSUFBQztBQUNoZSxhQUFTLEdBQUcsR0FBRSxHQUFFO0FBQUMsVUFBSSxJQUFFLEdBQUc7QUFBRSxVQUFFLFdBQVMsSUFBRSxPQUFLO0FBQUUsVUFBSSxJQUFFLEVBQUU7QUFBYyxVQUFHLFNBQU8sS0FBRyxTQUFPLEtBQUcsR0FBRyxHQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQUUsZUFBTyxFQUFFLENBQUM7QUFBRSxVQUFFLEVBQUU7QUFBRSxRQUFFLGdCQUFjLENBQUMsR0FBRSxDQUFDO0FBQUUsYUFB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QUFHLEdBQUcsSUFBRyxXQUFVO0FBQUMsYUFBRztBQUFFLGlCQUFPO0FBQUEsUUFBSSxDQUFDO0FBQUcsWUFBRSxFQUFFO0FBQUEsTUFBVTtBQUFBLElBQUM7QUFBQyxhQUFTLEtBQUk7QUFBQyxVQUFHLE9BQUssSUFBRztBQUFDLFlBQUksSUFBRSxLQUFHLEtBQUcsS0FBRztBQUFHLGFBQUc7QUFBRyxlQUFPLEdBQUcsR0FBRSxFQUFFO0FBQUEsTUFBQztBQUFBLElBQUM7QUFDOU4sYUFBUyxLQUFJO0FBQUMsVUFBRyxTQUFPO0FBQUcsZUFBTTtBQUFHLFVBQUksSUFBRTtBQUFHLFdBQUc7QUFBSyxXQUFJLEtBQUcsS0FBRyxTQUFPO0FBQUUsY0FBTSxNQUFNLEVBQUUsR0FBRyxDQUFDO0FBQUUsVUFBSSxJQUFFO0FBQUUsV0FBRztBQUFHLFdBQUksSUFBRSxFQUFFLFFBQVEsYUFBWSxTQUFPLEtBQUc7QUFBQyxZQUFHO0FBQUMsY0FBSSxJQUFFO0FBQUUsY0FBRyxPQUFLLEVBQUUsWUFBVTtBQUFLLG9CQUFPLEVBQUUsS0FBSTtBQUFBLGNBQUMsS0FBSztBQUFBLGNBQUUsS0FBSztBQUFBLGNBQUcsS0FBSztBQUFBLGNBQUcsS0FBSztBQUFHLG1CQUFHLEdBQUUsQ0FBQyxHQUFFLEdBQUcsR0FBRSxDQUFDO0FBQUEsWUFBQztBQUFBLFFBQUMsU0FBTyxHQUFFO0FBQUMsY0FBRyxTQUFPO0FBQUUsa0JBQU0sTUFBTSxFQUFFLEdBQUcsQ0FBQztBQUFFLGFBQUcsR0FBRSxDQUFDO0FBQUEsUUFBQztBQUFDLFlBQUUsRUFBRTtBQUFXLFVBQUUsYUFBVztBQUFLLFlBQUU7QUFBQSxNQUFDO0FBQUMsVUFBRTtBQUFFLFNBQUc7QUFBRSxhQUFNO0FBQUEsSUFBRTtBQUFDLGFBQVMsR0FBRyxHQUFFLEdBQUUsR0FBRTtBQUFDLFVBQUUsR0FBRyxHQUFFLENBQUM7QUFBRSxVQUFFLEdBQUcsR0FBRSxHQUFFLFVBQVU7QUFBRSxTQUFHLEdBQUUsQ0FBQztBQUFFLFVBQUUsR0FBRyxHQUFFLFVBQVU7QUFBRSxl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RSxFQUFFLFlBQVk7QUFDaEUsV0FBUyxnQkFBZ0I7QUFDekIsSUFBRSxHQUFHLFNBQVMsaUJBQWlCLE1BQU0sQ0FBQztBQUN4QyxDQUFDO0FBRURILE1BQUssWUFBWSxPQUFLO0FBQ3BCLFFBQU0sUUFBUSxFQUFFLE9BQU8sUUFBUSxRQUFRLE9BQU87QUFDOUMsSUFBRTtBQUFBLFFBQ0Esb0NBQU8sOEJBQUFHLFFBQUEsY0FBQyxXQUFRLEtBQUssVUFBVSxDQUFFLEVBQUUsT0FBTztBQUFBLFFBQzFDLG9DQUFPLDhCQUFBQSxRQUFBO0FBQUEsTUFBQztBQUFBO0FBQUEsUUFDTixLQUFLO0FBQUEsUUFDTCxhQUFZO0FBQUEsUUFDWixXQUFVO0FBQUEsUUFDVjtBQUFBLFFBQ0EsT0FBTTtBQUFBLFFBQ04sZ0JBQWU7QUFBQTtBQUFBLElBQ1YsQ0FBRSxFQUFFLE9BQU87QUFBQSxFQUNwQjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbInRlc3QyIiwgImEiLCAiYiIsICJhIiwgImMiLCAiZCIsICJmIiwgImUiLCAiZyIsICJoIiwgImsiLCAibCIsICJwIiwgInoiLCAiaXNNZXJnZWFibGVPYmplY3QiLCAiaW1wb3J0X3JlYWN0IiwgImltcG9ydF9yZWFjdF90ZXN0X3JlbmRlcmVyIiwgInRlc3QiLCAic2lub24iLCAiZG9jdW1lbnQiLCAiY2FsbFBsYXllciIsICJSZWFjdCIsICJnZXRTREsiLCAibG9hZFNjcmlwdCIsICJpbXBvcnRfcmVhY3QiLCAiUmVhY3QiLCAidGVzdCIsICJnZXRTREsiLCAic2lub24iLCAiUmVhY3QiXQp9Cg==
